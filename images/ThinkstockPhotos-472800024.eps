%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Graphics) ()
%%Title: (1536.eps)
%%CreationDate: 4/15/2015 2:42 PM
%%Canvassize: 16383
%%BoundingBox: 53 -955 951 -28
%%HiResBoundingBox: 53.7178 -954.5557 950.8779 -28.5835
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 500.5 -500.5 500.5 -500.5
%AI3_TileBox: 213.6196 -909.5596 789.6191 -90.3198
%AI3_DocumentPreview: Header
%AI5_ArtSize: 1000 1000
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 1
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -457 30 0.99 1888 1010 18 0 0 28 134 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:100 -800
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 0
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 124 128 8
%%BeginData: 15566 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD41FFA757CFFD22FFAE7CAE837C58A883A7A8FD4CFF832C2C57A8
%FD20FFA72C2C2C57FD052C57CFFD4AFFA72C2C572C57CFFD20FF7C2C572C
%572C572C57A8FD4AFF832C58A8A7A72C57A8FD1FFFA8572C2C2C572C2C58
%FD4AFFA72C58FD04FFA72C57FD20FF7C2C2C572C572CFD26FFCFFD23FF83
%2C57FD06FF830A57AEFD1EFFCF7C837C837C83FD23FFA7572C5757AEFD20
%FFA72C7CFD04FFCFA8FFFFA72C57FD1EFF83572D572C5757FD21FFA72D2C
%57A77D572C57A8FD1DFF832C51CFA8FFFFFF5751A8FFFF7C0457A8FD1CFF
%A8517C5758577CFD1FFFA7572C7CA8FD04FFAE57567CFD05FFA8FFA8FFA8
%FD11FFA7572C572C5757AEFFFFA8FFFFFF58562CA8FD1CFF7C82587C5882
%58AEFD1CFFA8515758FD09FF83572C82A8FFA8572C572C57A8FD0FFF832C
%2C5757582C2C2CA7FD05FF582CA7FD1CFF57FD082C83FD0CFF5757585757
%5157575751FD05572C2C57A7838383FD08FFA72C5783A82CA7AEA82CCFFD
%0EFF832C2C2CA7FF58FD042CCFFFFFFF822CA7FD1BFFAE2C562C572C572C
%572C572C82FD0BFF2C2C2C5757585758577C2DFD042C5758585157512C51
%FD09FF7C2C2C2CA8FFA857A8FD0BFFA8FFA8837C8358CFA77C7C837C7C83
%FFFFAE58A7FD1BFFAE2C2C2C572C2C51582C2C2C572C7CFD0AFF572C57CF
%FD05FFA8572C5757572CA7FD04FFA8577CFD0AFFAE2CAEFFFF2DFD0BFF83
%572C57575751572C575157575751572C572C57515757FD19FF51562C572C
%322CAEFF572C572C572CA7FD09FF2C57A8FD05FFA8572C577CFF7C572C83
%FD04FF7C57FD0AFFA857A7FFA857A8FD0AFF832C57577C5758577C575857
%7C5758577C5758577C572C51FD17FF582C2C2D2C2C58AEFFFFFFA851322C
%2C2CCFFD08FF327CFD06FF822C57A7FFCFFF582C2C572C5751572CFD0AFF
%CF2CAEFFCF2CFD0BFF7C32AEFD13FF7C2CA8FD15FFCF572C572C2C58FD06
%FF822C572C2C7CFD08FF2C82FD06FF2C2C51FFA72C2C512C7C7C837C837C
%83A8FD09FFA82C83FFA851A8FD0AFF832CCFFD13FF832CA8FD15FFA8FD05
%2CCFFFFF7C587CAE2C2C2C572C57FD08FF577CFFA75783FFA8572C57FFFF
%A87C2C83FD12FF2CAEFFFF2CFD0BFF7C56AEFD13FF832CA8FD15FF832C2C
%572C57FFFFFF572C322C572C572C572DFD08FF2C82FF7C0457FFA82C572C
%5783FFFF2C7CFD11FFA82CA7FFA857A8FD0AFF832CCFFD13FFA72CA8FD15
%FF832C2D2C572DFFFFFFA87C2D2C2C2D2C572C57A8FD07FF2C7CFFCF83A8
%FFA8572C572C2C2CFF7C5783AEA8A8A7AEA8AEA7FD07FFA8A72CAEFFCF2D
%CFFD0AFF832CA8FD10FFCFA8AE83A8FD16FF7C2C2C572C5783FD05FF8357
%2C572C572DFD08FF2C7CFD06FF2D2C51FF7C83FFA82C2C2C572C2C2C572C
%2C2C8283AEA8A7572C2C2CA8835757A8FD0AFF832CAEFD0FFF7CFD052CAE
%FD15FF832C57FD042C58AEFD04FF83FD042C57CFFD07FF2C7CFD06FFA72C
%57A8FFFFFF572C57FFAEFFA8FFFFA82C7C57572C572C58A7AE2C837C822C
%FD0BFF832CA8FD0EFFA82C7C51572C57A8FD15FFA7572C572C572C2C2C58
%83FFFFFF57572C5757FD08FF2C577CFD06FF7C2C2C57A82C2C2CCFFD05FF
%CF572C7DFFA8AEA8FFFFFFA8572D572D57A8FD0AFF832CAEFD0EFF7C2C83
%7C2C2C2CAEFD15FFA82C572C2D2C57FD042CA8FFFF7C2C2D2C7CFD08FF57
%2C2C83FFA8FFA8FFA8582C572C572CA8FFFFA8FFAEFF51322C83FD18FF7C
%32A8FD0EFFCF2C2C2C572C2CA7FD15FF832C2C572C57A8CF575757FFFFFF
%51572C5751FD08FFFD1A2C7CFD18FF832CCFFD0FFFA851572D5757CFFD15
%FF83FD042C7CFFFFFFA8FFFFFF832C2C572C51A8FD07FF837C837C837C82
%7C837C837C837C837C837C827C837C827C837CAEFD18FF7C56AEFD13FFA8
%83AEFD15FF57572C572C57A7FD05FFA8572C572C572CA8FD3AFF832CCFFD
%13FF8304A8FD14FFA8332C2D2C572C2C5783A8FF572C2C2D2C572C2C57FD
%3AFF832CA8FD13FF7C2CA8FD14FF7C2C572C572C572C2C2CA7A8322C572C
%572C572C57A8FD39FF832CCFFD13FF830AA8FD13FFCF2C2C2C572C2C2C57
%2C2C2C572C2C2C572C2C2C572C7CFD39FF832CA8FD13FF5757AEFD13FFA8
%322C572C572C572C572C572C572C572C572C572C2C57FD39FF830A2C2C57
%2C2C2C572C2C2C572C2C2C572C2C2C572C2C58FD15FF58FD142CA8FD39FF
%A7827C8258827C8258827C8258827C8258827C82588283FD17FFA8A883A8
%A7A783A8A7A783A8A7A783A883A7A7FDFCFFFDFCFFFDFCFFFDFCFFFD14FF
%A8FD12FF7C2C572D572C572C572C57515751572D572C572C572C572D7CFD
%4DFFA8A88383A8FD11FF57322C587C827C827C832C572C562C827C827C82
%7C7C2C2C57FFA8FD46FFA8A77C82587C587C58827DFD10FF582C57A8FD05
%FF58332C7C2C2C57FD05FFAE572C57A87CA7FD40FFA7A758582C7C83837C
%837C837C837C8282AEFD0EFF5757A8FD05FF7C2C2C83FFFF572C58FD06FF
%5857A77C57FD14FFAE837C8383837C8383A77C837C8383A783837C838283
%7CAEFD0DFFA8AE83A77C83837CFD052C577CA77C7C58827C7C58825883A8
%FD0CFF582DFD05FFA8572C7CFFA7837C2C2CA8FD05FF57577C7C2D57FD13
%FF5804577DA883A783832C2C2C572C2C58A883A783A7572C2CFD0AFFA7A8
%838258827C827C8383A757572C572C5758A883837C837C837C7C5757A8FD
%0BFF5757FFFFA7FFFFA82C2CA7FF7C322C572CA7FFFFA7FFFF7C578357A8
%2C82FD11FFA72CA8FD05FFCF572C58CF83832C5783FD05FFA85758FD08FF
%587C5783588258837C8258827CA758572C2D2C2C2D837C7C57572C572C2C
%2CA8FD0BFF582DFF7D2C57FF7C2C2C57A8FFFF7C2C2C58FF7C2C7CFF5758
%7C2CA8832C83FD10FF2C7CFFFF587CFFFF2C2C2CA8FFA7572C2C2CA7FF7C
%7CA8FF7D2C83FD07FF837C7C7C837C827C837C837C837CA783572C572C57
%57822C587CA7A8A72C57A7FD0BFF5757FFAE2DA7FFA72C572C5757FFFF57
%2C83FFA82CA8FF7C57FF2C83FF572CA8FD0EFF582CA8FFA85757FFA8322C
%572D5883FF822C2C83FF832CA7FFFF5157FD07FF5883517C58837C825883
%7C7C577C2D5757572C2C2C57A8FD06FF832CA8FD0BFF582CFD05FFA72C2C
%837C2CA7FF2C2C7DFD05FF5757FF7C2CAE2C2C2CA8FD0CFF7D2C7CFD06FF
%AE2C2C51FF7D83FF822C2C7CFD06FFA82C7CFD06FF837C58588258835882
%57572C572C587DA72C572C5757A7AEFD05FFA857A7FD0BFF5757FD06FF57
%3283FFFFFF7C2C2DFD06FF7C51FF822C83572C57A8FD0CFF572CAEFD07FF
%832C5758AEFF822C3257FD07FFAE572CAEFD05FF7C83577C587C582C2C57
%7C83A8FFFFFF7C322C2D2C57577CFD05FFA82CA8FD0BFF582CA7FD05FFA8
%2C2C51A8582C2CA7FD05FFA82C57A7572C7C5757AEFD0CFF7C2C572CAEA8
%CFA8AEA8FFA87C2C2C2C572C3257AEA8CFA8AEA8FFA8582C2C2DFD05FF83
%7C7C588257822C2C83FD05FF7C7C2C572C5751822CFFFF8283FFA757A8FD
%0BFF582C2CA8FD05FFA82C572C572CA7FD05FFAE2C3258A72C2C51AEFD0D
%FFA82C572C572C572C572C572C5751572C572C572C572D572C572C572C57
%2C572C327CFD04FF7C82517C5858572C7CFD05FFA757582C2C572C57572C
%A8A8047CFFA82CA8FD0BFF570AFD152C04577C5758A8FD0EFF7C58587C57
%7C577C577C577C577C587C577C587C577C577C577C577C577C587C577CFD
%04FF837C7C588258822CFD06FF832C822C572C5757822CFFCF83AEFFA857
%A8FD0BFFA78383A77C837CA7838383A77C837CA782837CA77C837CA7A7AE
%7CFD10FFA87C837C837C837C837C837C837C837C837C837C837C837C837C
%837C837C837C837CFD04FF7C83577C587C572CA8FFA883A7FF5857582D2C
%572C575757AEFD04FFA82CA8FD0FFF7C7DFD07FF7C7C577C5758517C83AE
%A87C51A8FD10FF837C587C5882587C5882587C5882587C5882587C588258
%7C5882587C5882587C5883FD04FF837C585882587C2CFFFF830482FF822C
%822C572C57577C57FD05FF582CA7FD0FFF5757FD08FF572C2C5657837C83
%572C51FD12FFA758837C827C837C827C837C827C837C827C837C827C837C
%827C837C827C837C827CFD04FF58835758587C572CA8FF8357A7FF7C2C57
%572C2C2C5757A8FD04FF7C2C2CA8FD0FFFA80A83AEFFFFFFA77C2C2C2C7C
%838357572C2C57FD13FF837C587C587C587C587C587C587C587C587C587C
%587C587C587C587C587C587C587CFD04FF837C585883587C2CFD06FFCF2C
%822C572C5751FFFFFFA78357572C57A8FD10FF572C5783A7512C2C82A7FF
%FFFFCFA82C5683FD14FFA758837C827C837C827C837C827C837C827C837C
%827C837C827C837C827C837C827CFD04FF5883577C587C572CA8FD06FFA7
%57572C2D2C5783572C2C2C577CA8A8FD11FF7CFD042C7C83FD06FFAE2C2C
%83FD15FF837C5882587C5882587C5882587C5882587C5882587C5882587C
%5882587C58825882FD04FFA77C585882577C2CFD08FFA72C572C2C518257
%83A7FD16FFAE2C5783A858AEFD05FFA72C57A8FD16FFA758827C837C827C
%837C827C837C827C837C827C837C827C837C827C837C827C827CFD05FFA8
%57585858572C2DA8FFFF83835157572C2D7C7DAEA8FD1AFFA8A8FFFF572C
%A8FFFFFF830A57A8FD17FF7C7C577C577C577C577C577C577C577C577C57
%7C577C577C577C577C577C577C577CFD07FF837C57822C2C577C2C2C2C57
%7CAEA8FD23FFAE572C7C57822C7CFD19FFCFA7A8A7AEA7A8A7AEA7A8A7AE
%A7A8A7AEA7A8A7AEA7A8A7AEA7A8A7AEA7A8A7AEA7FD08FFA87C572C2C2C
%518383CFFD28FFA82C2C2C0A83FD46FFA77CAEFD2EFF832C2CA7FD79FF7C
%A8FDFCFFFDFCFFFDFCFFFD9BFFAEA77CAEFD21FFA8A883A8A7A8A8FD4FFF
%83572C572C82FD1DFFA783FD0757827CA7A8FD4BFFA8572CA7A7572CA8FD
%1BFF572C2C572C2C2C5751575857577C7CFD4AFF832C57A8832C2C57FD1A
%FF2D322C572C5757AEFD04FF7C57577C58FD49FF832C2C57A8832C7CFD19
%FF582C2C572C2C2CA7FFFF5157A7A82C2C2C5783FD10FFAE838358585157
%2C572D57577C7C8383AEA8FFA8FFFFFFA8FFCFFFA8FD1CFFAE2C5783AE57
%2C7CFD19FF572C572C5757572CA7FFFF58572C572C572CA7FD10FF582C2C
%57577C577C575857572C2C2C572C572CFD04575857572C7CA8FD1CFF832C
%57572C57FD1AFF572C2C2C58FFA8572CA7FFFF2D2C2C572C2C58FD10FF7C
%2C2C7CFD06FFAE51572C2C2C5757572C57FD062C517C7DFD1CFFA8587C83
%FD1BFF572C572C577CFD05FF7C572C572C572C82FD10FF573257FD07FF57
%2C2C577C2C2CA8FFFFA8CFA8CF832C2C57587C7CAEFD18FFA8A883A783AE
%AEFD1AFF5757FD042C587C57582C2C2C57FD042C7CFD10FF582CFD07FF57
%2C2C57A8FF7C2C2CAEFD06FF582C517C58577CFD10FFAE7C82587C7CA757
%5858827C7C57585783A8FD17FFAE2C572C572C322C572C572C572C575157
%57FD11FF5757FD06FFAE572C57CFFFA8FF573258FD07FF57577C8257A7FD
%0FFFAE2C322C322C572C578383587C588383572C5783FD17FFCF837C2C57
%2C572C582C572D582C5757AEA7FD10FF582CFFFFFF57A8FFA82C322CFFA7
%2C2D572C57A8FD06FF57517C58577CFD10FF832C572C2D2C57FD092C2D2C
%2C58FD12FFA8A77C827DCFFFAE57577C577D327C57577CA7CF5782FD10FF
%5757FFFF832C51FFA72C2C57A8FFA7572C572CA7FFFFA8FFFFFF51577C82
%57A7FD11FF832C572C572C572C572C572C572C572C572C2C7CFD0FFFCF57
%FD062C57A7FF7D837CA77CA783A8A7832C2C83FD10FF582CFFFFA82C82FF
%A72C2C2C5783FFA8572C2C58FF7D2C7CFFFF572D7C58577CFD11FFA72C2C
%572C2C2C572C2C2C572C2C2C57FD042C83FD0DFFCF2C2C2C572C572C572C
%2C7CFFA7A783A7838257572D577CFD11FF5857FD06FFA8572C57572C57FF
%832C2C83FF820482FFFF57577C8257A7FD11FF7C2C572C572C572C572C57
%2C572C572C572C572C58A8A8FD0AFFAEFD052C58CF582C572C2C7DCF2C7C
%2C7C2C572C5883A77CFD10FF7C2CFD07FF512C51FF7C7CFFA72C2C7CFFA8
%7CA8FFFF572D8258577CFD11FF2C2C2C572C2D2C572C2D2C572C2D2C572C
%2D2C572D582CCFA8FD08FF572C2C572CA7FFFFFFA82C572C57A8A77C5758
%7C7CA7A8A72C83FD10FF5757FD07FFA72C57A7FFFFFF57562CAEFD06FF57
%5758825783FD10FF583257582C572C572C572C572C572C572C572C572C57
%57577C7CFD07FFA7FD042C82FFAE58A77C2C2C572C82A8A8A7A8A7A77C57
%2C57A8FD10FF582C82A8FD06FF7C2C2C58CF512C2C7CFD07FF572D7C5857
%7CFD0EFFCF572C2C572C2C2C572C2C2C572C2C2C572C2C2C572C2C2C7CA8
%A7A8FD07FFA72C572C3283FFA7572C562C572C5757FF7CFD05572D58A8FD
%11FF58572C82A8AEA7A8A7CFA8582C5757562C7CFD07FFA72C577C8257A7
%FD0EFF7C2C2C572C572C572C572C572C572C572C572C572C572C57A8FD0A
%FF582C2C2D2C7CFFFFAEA8572C2C572C57FFA72C7C2C7C2D83A87C58FD10
%FF582C57FD072C57FD052C5783FD06FFA82C2C577C58577CFD0EFFA82C2C
%2C572C2D2C572C2D2C572C2D2C572C2D2C572C2C2CFD0BFF7C2C572C572C
%7CA8FFFFFF57572C572CFFA78283A7A7AE83570AA8FD10FF57572DFD0457
%58FD045751572D572C322CFD04577C2D2C2C577C8257A7FD0FFF7C2C572C
%572C572C572C572C572C572C572C572C572C83FD0BFF582C2C57FD052CCF
%FF822C2C2C57A8A783837C582C572C58FD11FFAE7C58587C587C58827C83
%7C837C82587C587C57572D572D575758587C58577CFD0FFFA8572C2C2C57
%2C2C2C572C2C2C572C2C2C572C2C2C57FD0CFFA72C572C577CCF5757A8FF
%7C322C5757FF7CFD0657A7A8A7FD12FF83827C7C58837C8258837C827CA7
%83837CA77CA77C827C837C837C8257A7FD10FFAEA8A87C2C572C572C572C
%572C572C572C572C58FD0DFFA8572C572CA8FD04FFA8572C2D2CA8A87C2C
%7C517C7CAE832C58FD13FFA7827CA783AEA8AEA8FFA8A883A783A77C837C
%7C58827C82577C57577CFD13FFCF7C2C2C2C572C2D2C572C2D2C572C7CAE
%FD0EFF832C2C572C83A8FF83572C572C57FFCF83A8A7AEA7A757572CCFFD
%24FFAEFFAECFA8CFA8AEA8CFAEFD16FF822C572C572C2C2C572C572C83FD
%11FF572C2C2D2C2D832D2C2C2C57A8A8578258582D572C572CA7FD46FF7C
%2C2C2C5782577C572C2C2C83FD12FF7C572C572C572C572C58A8FF585783
%2C7C57575758CFFD47FFAE2C5751FD05FF51572CCFFD13FFA77C2C2D2C57
%5783FFFF587C517C517C58A7A8FD4BFFCFFD07FFCFFD18FFA8CFA8FD07FF
%A8FDFCFFFDFCFFFDFCFFFD74FFA883A8FD77FFAE57322C57A8FD74FF8357
%2C7C7C7C512C7CFD71FFA751577CFD05FF833257FD6DFFCF7C572C83FD08
%FFA8572CA7FD18FFA8AE83A7A8FD4CFFA8822C2C2C57588283FFFFFF577C
%FFFFFF822C83FD12FFCFFFA7A77C5757837C7C7CA7A8FD1DFF835757572C
%5751572C8358572C5751572DA758572C5751FD0457FD0EFFCFA7512C2C2C
%57837D572C2C2CA7FFA8A7FFFFFFA8572C57A7FD0DFF83A7838357572C57
%572C042C2C5757827C83A7FD1AFF7C0A2C57837C837C837D5758837C837C
%5757A77C837C837C2C2C2CA7FD0CFF83572C837C572CCFFF8257572C572C
%A7FD05FFCF2C572C83FD0CFFAE7C57AEA7572C572C5758A78383577C7CA7
%A7AE83A7A8FD17FF575758FD07FF2CFD05FF7C7CFD06FF83572CA7FD09FF
%A8822C577CFFFF7C2C5783FF83FFFFAE2D2C2CFFFFFFA87C2C5757587CFD
%0DFF587C577C7C7C515758837C827CA8A8FFFFA87C58517CA7A8A8FD14FF
%5157FD07FF7C57A8FD04FF832DCFFD06FFA72C7CFD07FFCF7C572DA7FD04
%FF832C2C575782517CFFA72C57CFFF5857517C587C5782FD0CFFA8825882
%58828383578383FFFFFFCFA7587C7CA7AEA72C5757827CA7A8FD11FF2C7C
%FD06FF837C2DFD05FF7C577CFD07FF2C82FD06FF832C2C2CA8FD06FF572C
%2C2C2DA8A8FF582C2C7C2C57577C5758577C58FD0CFFCF587C587C587C57
%FFFFFFA783575758A7A8FFA77C2C572C2C2C577CA77CA7A8FD0DFFA72C7C
%FFFF8251AEFF7C5857A8FD04FF832C5783FF7C57A7FFAE2C51FD06FFA87C
%2C57FD04FF587CAEFF7C572C5657572D572C57577C5882587C57825758A8
%FD0BFFA883588258837C83FFFF575858A77C7C57572C2C2CA883572C5757
%AECFA7577CAEFD0CFFA82CA7FFFF2C2CA7FF577C2CFD05FF835757A7FF58
%0483FFFF5757FD06FFA87C7C2C58FFFFAE572CA8FFFFA8A87C7C2C2C2C57
%587C5758577C5858517CA7FD0CFFCF587C587C588258FFFF577C8357827C
%58FD052C57577C7C835858577C7CFD0DFF7C2C83FFFFA883FFFF7C5757AE
%FD04FFA7517C83FFA883A8FFFF582CFD06FFA8837C822C57CFFD09FF5857
%577C587C5782587C57587CA8FD0EFFAE7C58827C835882FFFF57837C7C58
%827C837CCFA7827C837C7C57827C825783CFFD0CFF822CFD07FF838257FD
%05FF83577CFD07FF7C2CA8FD06FFFD047C2C57A8FD05FF83572C57577C57
%7C57585758517C83FD11FF7D7C577C7C7C58FFFF575882587C587C577C7D
%A7587C577C587C577C585858FD0DFF572CA8FD07FF5857FD05FFA72CAEFD
%07FF822CA7FD06FFA77C8383822C57A7A7A8AE57575782587C5782578257
%587CAEFD14FFAEA87C825883FFFF57837C8258827C825882588258827C82
%58827C825883FD0DFF572C57AEFD06FFA757FD05FFA757FD07FF832C2C83
%FD07FF8358837C7CFD052C57577C577C5758577C577CA7FD19FFA88357AE
%FF575883587C577C587C577C587C577C587C577C587C58FD0DFF2C2C2C7C
%A7A783A783A87C57FD05FFA82CA883A783A783A72C2C2C7CFD08FFA75883
%7C832D57577C587C577C5882575758AEFD1DFFCF7C832C827C827C7C5882
%587C57827C7C5882587C58825882A8FD0BFFA8572C572C32FD042C517C57
%FD05FFA85757FD042C322C572C5657FD09FF8358837C7C577C577C575857
%575182A8FD21FFA8A77D7C577C587C587C577C577C577C577C5758517C7C
%FD0DFF512C7CAEA7AEA8A8A7FF5857FD05FFA82CA8A8AEA8A8A7AEA7572C
%83FD0AFFA858827C7C587C578257587CFD27FFA8A7587C58827C8258827C
%825882578283AECFFD0FFF7C577C837C837C837C832C827C825883575783
%837C837C837C5851CFFD0CFFA85882577C57575783A8FD2BFF837C577C58
%7C587C577C7CA8AEFD13FFA7837CA77D837C83A8A77CA77D837CA7A8A77C
%A77D837C8383FD0FFFAE7C82577C7CCFFD2FFFA87C7C578283AEFD40FFAE
%577CA8FD33FFA7A8CFFD34FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
userdict /lv1Fix true put
userdict /_contoneDevice true put
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Trail  ver4.5 for Win AICS6) (FILTERiT4 Live Trail ver4.5 for Win AICS6) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Tiling  ver4.5 for Win AICS6) (FILTERiT4 Live Tiling ver4.5 for Win AICS6) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 DropShadow  ver4.5 for Win AICS6) (FILTERiT4 Live Shadow ver4.5 for Win AICS6) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Reflections  ver4.5 for Win AICS6) (FILTERiT4 Live Reflections ver4.5 for Win AICS6) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Neon  ver4.5 for Win AICS6) (FILTERiT4 Live Neon ver4.5 for Win AICS6) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Generation  ver4.5 for Win AICS6) (FILTERiT4 Live Generation ver4.5 for Win AICS6) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Galaxy  ver4.5 for Win AICS6) (FILTERiT4 Live Galaxy ver4.5 for Win AICS6) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Frame  ver4.5 for Win AICS6) (FILTERiT4 Live Frame ver4.5 for Win AICS6) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Explosion  ver4.5 for Win AICS6) (FILTERiT4 Live Explosion ver4.5 for Win AICS6) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Emboss  ver4.5 for Win AICS6) (FILTERiT4 Live Emboss ver4.5 for Win AICS6) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Cutout  ver4.5 for Win AICS6) (FILTERiT4 Live Cutout ver4.5 for Win AICS6) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Circle  ver4.5 for Win AICS6) (FILTERiT4 Live Circle ver4.5 for Win AICS6) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Border  ver4.5 for Win AICS6) (FILTERiT4 Live Border ver4.5 for Win AICS6) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 3D_Cylinder  ver4.5 for Win AICS6) (FILTERiT4 Live 3D Transform Cylinder / Cone) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 3D_Spiral  ver4.5 for Win AICS6) (FILTERiT4 Live 3D Transform Spiral) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 3D_Torus  ver4.5 for Win AICS6) (FILTERiT4 Live 3D Transform Torus \(Donut\)) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 3D_Sphere  ver4.5 for Win AICS6) (FILTERiT4 Live 3D Transform Sphere) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 3D_WaveR  ver4.5 for Win AICS6) (FILTERiT4 Live 3D Transform Wave \(Radial\)) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 3D_WaveZ  ver4.5 for Win AICS6) (FILTERiT4 Live 3D Transform Wave \(Z\)) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 3D_WaveHV  ver4.5 for Win AICS6) (FILTERiT4 Live 3D Transform Wave \(H/V\)) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 3D_Twirl  ver4.5 for Win AICS6) (FILTERiT4 Live 3D Transform Twirl) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 3D_Screw  ver4.5 for Win AICS6) (FILTERiT4 Live 3D Transform Screw) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 3D_Arc  ver4.5 for Win AICS6) (FILTERiT4 Live 3D Transform Arc) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 3D_Twist  ver4.5 for Win AICS6) (FILTERiT4 Live 3D Transform Twist) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 3D_SmpleRot  ver4.5 for Win AICS6) (FILTERiT4 Live 3D Transform Simple Rotation) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(AstuteWPPUG) (Width Stamp) (WidthScribe.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (Swatch Libraries.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
1 Bn
%AI5_BeginGradient: (White, Black)
(White, Black) 0 2 Bd
[
<
0000010304050607090A0B0C0E0F111214151718191A1B1C1D1F2021222324252628292A2B2C2D2E
2F303233343637383A3B3C3D3E4041424344454648494A4B4C4D4E4F5051525354555758595A5C5D
5E6061626465666768696A6B6C6D6E6F707172737476777879797A7B7C7D7E7F8081818283838485
8686878889898A8B8C8D8E8F909091929393949495969697979899999A9B9B9C9D9D9E9E9F9FA0A1
A1A2A2A3A4A4A5A6A6A7A7A8A8A9A9AAAAABABACACADADAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5
B6B6B7B7B7B8B8B9B9B9BABABBBBBBBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C3C3C4C4C4C5C5C5C6C8
C9CBCCCDCED0D1D2D3D4D5D6D8D9DADB
>
<
0000010203040505060708090A0B0C0D0E0F1011121313141516171819191A1B1C1D1E1E1F202122
23232425262728292A2B2C2D2E2F303132333435363738393A3A3B3C3D3E3F404142434445464748
494A4C4D4D4E4F505152535455565758595A5B5C5D5E5F5F60616263646566676868696A6B6B6C6D
6E6E6F7070717273747475767778797A7A7B7C7C7D7E7E7F7F808181828283848485868687888989
8A8B8C8C8D8E8E8F8F909091929293949495959696979898999A9A9A9B9C9C9D9D9E9E9FA0A0A1A1
A2A2A3A3A4A5A5A6A6A7A8A8A9A9AAABABACADAEAEAFB0B1B2B2B3B4B5B5B6B6B7B7B8B9B9BABBBD
BFC1C3C5C7C8CACBCDCFD0D2D4D5D7D9
>
<
0000010203040505060708090A0A0B0C0D0E0F1010111213141515161718191A1B1B1C1D1E1F2020
2122232425262728292A2B2C2D2D2E2F2F3031323233343536373738393A3B3C3D3D3E3F40414243
4445464748494A4B4C4D4E4E4F50515253545455565758595A5B5B5C5D5E5E5F6061616263636465
6666676868696A6A6B6B6C6D6E6F707171727373747575767677787879797A7B7B7C7D7D7E7E7F80
808181828383848585868687878889898A8B8B8C8C8D8E8E8F8F9090919192929394949595969697
989899999A9B9B9C9C9D9D9E9E9FA0A0A1A2A2A3A3A4A5A5A6A7A8A8A9AAABABABACACADAEAEB0B2
B3B5B6B8B9BBBCBEBFC1C2C4C5C7C8C9
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000101010101020202030304040505060607070809090A0A
0B0C0D0E0F1010111213151618191A1B1C1D1E20212223242627282A2B2D2E303133343637393A3C
3D3F41434446484A4C4D4F51535557595B5D5F61636567696B6D6E6F717375787A7C7E818385878A
8C8E909395979A9C9FA1A3A6A8AAADAFB2B4B7B9BBBEC0C2C5C7CACCCED0D2D4D5D7D8DADCDEE0E2
E4E6E8EAECEEEFF1F3F4F6F8FAFCFDFF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.860075 0.849699 0.789548 1 0 0 0 2 50 100 %_BS
%_0.860075 0.849699 0.789548 1 0 0 0 2 50 100 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 6)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3818.5 3818.5 m
-3717.1816 3818.5 L
-3717.1816 3810.7832 L
-3818.5 3810.7832 L
-3818.5 3818.5 L
n
u
0 O
0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 Xa
-3717.3 3812.207 m
-3717.1504 3812.2439 -3717.2041 3811.8247 -3717.1816 3811.7495 C
-3717.4319 3811.8423 -3717.2937 3812.3159 -3717.3 3812.207 C
f
-3719.7693 3813.1582 m
-3719.7256 3812.9871 L
-3720.0896 3813.4063 L
-3719.7693 3813.1582 L
f
-3722.0784 3813.1504 m
-3721.8601 3813.8643 -3721.2417 3813.0352 -3720.8303 3813.2888 C
-3720.7625 3813.4524 L
-3720.5769 3812.8772 L
-3721.0769 3812.9683 -3721.7263 3813.3499 -3722.0784 3813.1504 C
f
-3723.3096 3811.6072 m
-3723.2336 3811.8843 -3723.5759 3811.8455 -3723.0225 3811.6936 C
-3723.0503 3811.6631 -3723.0583 3811.6455 -3723.0745 3811.623 C
-3723.1243 3811.6272 -3723.1929 3811.6262 -3723.3096 3811.6072 C
f
-3723.0745 3811.623 m
-3722.8313 3811.603 -3723.2336 3811.3904 -3723.0745 3811.623 C
-3723.0745 3811.623 L
f
-3724.1975 3811.7822 m
-3723.8772 3811.5342 L
-3723.9441 3811.3704 -3724.2292 3811.333 -3724.1233 3811.2136 C
-3724.4519 3811.3496 -3724.3843 3811.5127 -3724.1975 3811.7822 C
f
-3724.5012 3812.3032 m
-3724.3352 3812.1982 L
-3724.3643 3812.1294 -3724.4082 3812.1052 -3724.5012 3812.3032 C
f
-3723.9832 3811.9768 m
-3724.3352 3812.1982 L
-3724.2888 3812.3132 -3724.2839 3812.5447 -3724.1736 3812.1184 C
-3724.2024 3812.3296 -3724.1328 3812.1262 -3723.9832 3811.9768 C
f
-3723.7839 3812.0852 m
-3723.6042 3812.2407 -3723.3721 3812.3384 -3723.6936 3812.5852 C
-3723.0808 3812.4871 -3723.1711 3811.9856 -3723.7839 3812.0852 C
f
-3722.1963 3813.8887 m
-3721.9561 3814.0984 L
-3721.7483 3813.8584 L
-3721.8521 3813.9771 -3722.2112 3813.665 -3722.1963 3813.8887 C
f
-3726.1929 3811.4126 m
-3726.2129 3811.5647 -3726.0852 3811.8174 -3726.0613 3812.012 C
-3725.8247 3811.8374 L
-3725.9463 3811.7334 -3726.1768 3811.6375 -3726.1929 3811.4126 C
f
-3726.0613 3812.012 m
-3726.4153 3812.2727 L
-3726.0991 3812.3032 -3726.0413 3812.1792 -3726.0613 3812.012 C
f
-3724.5583 3813.0955 m
-3723.9768 3812.5479 L
-3724.6704 3813.103 L
-3724.5583 3813.0955 L
f
-3727.5449 3811.3936 m
-3727.3442 3811.0422 L
-3727.7017 3811.5735 L
-3727.5449 3811.3936 L
f
-3728.4417 3811.4551 m
-3728.2932 3811.1638 -3728.6453 3810.9624 -3728.4883 3810.7832 C
-3728.7319 3810.8352 -3728.9399 3811.0852 -3729.1272 3811.3103 C
-3728.9282 3811.1848 -3728.7161 3811.2168 -3728.4417 3811.4551 C
f
-3729.4417 3811.6375 m
-3729.3423 3811.5679 -3729.2393 3811.4431 -3729.1272 3811.3103 C
-3729.2329 3811.3772 -3729.3369 3811.4744 -3729.4417 3811.6375 C
f
-3727.0183 3812.1975 m
-3727.0457 3812.1055 -3727.0984 3811.8655 -3727.2969 3811.7639 C
-3727.1577 3812.1912 L
-3727.1152 3812.1936 -3727.0671 3812.1951 -3727.0183 3812.1975 C
f
-3727.1528 3812.2046 m
-3727.1577 3812.1912 L
-3727.3088 3812.1814 -3727.4136 3812.1719 -3727.4585 3812.1672 c
-3727.4199 3812.1707 -3727.3279 3812.1824 -3727.1528 3812.2046 C
f
-3726.9832 3812.1992 m
-3726.9961 3812.1982 -3727.0056 3812.1975 -3727.0183 3812.1975 C
-3727.0049 3812.24 -3726.9968 3812.2534 -3726.9832 3812.1992 C
f
-3725.4863 3812.7092 m
-3725.6943 3812.9482 -3726.1279 3813.2039 -3725.7083 3813.5686 C
-3725.5591 3813.2759 -3725.7993 3813.0686 -3725.4863 3812.7092 c
f
-3726.8103 3812.7334 m
-3726.4343 3812.8311 L
-3726.4417 3812.7183 -3726.5095 3812.5535 -3726.4065 3812.4351 C
-3726.8103 3812.7334 L
f
-3726.9944 3812.8694 m
-3726.8103 3812.7334 L
-3726.9497 3812.6975 L
-3726.9944 3812.8694 L
f
-3728.7976 3812.0376 m
-3728.96 3812.2239 -3729.1377 3812.239 -3729.3384 3812.269 C
-3729.1233 3812.353 -3728.9009 3812.3992 -3728.6897 3812.3972 C
-3728.6599 3812.2632 -3728.5671 3812.0222 -3728.7976 3812.0376 C
f
-3727.9983 3812.1563 m
-3728.0095 3812.1663 -3728.0239 3812.1707 -3728.0344 3812.1807 C
-3728.0122 3812.217 -3727.9944 3812.2283 -3727.9983 3812.1563 C
f
-3731.3142 3812.2664 m
-3731.3032 3812.2896 -3731.2937 3812.3196 -3731.2825 3812.3442 C
-3731.28 3812.3196 -3731.2783 3812.2952 -3731.2751 3812.27 C
-3731.3142 3812.2664 L
f
-3728.6536 3812.4771 m
-3728.4919 3812.5598 -3728.3953 3812.4551 -3728.3032 3812.324 C
-3728.4241 3812.3662 -3728.5522 3812.3943 -3728.6897 3812.3972 C
-3728.7031 3812.4583 -3728.7056 3812.4983 -3728.6536 3812.4771 C
f
-3729.9929 3811.8374 m
-3729.9087 3811.927 -3729.8132 3812.0032 -3729.7129 3812.0723 C
-3729.7952 3811.937 -3729.9631 3811.7263 -3729.9929 3811.8374 C
f
-3728.0889 3812.0623 m
-3728.0808 3812.0559 -3728.0735 3812.0479 -3728.0647 3812.0432 C
-3728.1177 3811.9524 -3728.1111 3811.9966 -3728.0889 3812.0623 C
f
-3728.0889 3812.0623 m
-3728.1721 3812.1243 -3728.2375 3812.2295 -3728.3032 3812.324 C
-3728.2048 3812.2896 -3728.1135 3812.2439 -3728.0344 3812.1807 C
-3728.0544 3812.1504 -3728.0745 3812.1042 -3728.0889 3812.0623 C
f
-3731.9128 3815.0095 m
-3731.8843 3814.613 -3731.4592 3814.2471 -3731.0923 3814.6719 C
-3730.7312 3814.3752 -3730.9673 3813.0723 -3731.2825 3812.3442 C
-3731.2937 3812.5166 -3731.2937 3812.6763 -3731.6653 3812.9104 C
-3731.5352 3813.1262 -3730.8408 3813.4163 -3731.1543 3813.7747 C
-3731.6465 3813.9783 -3731.5576 3813.6343 -3731.7969 3813.425 C
-3731.5935 3813.9182 -3732.4231 3814.1431 -3732.3159 3814.8687 C
-3731.8843 3814.613 L
-3731.8762 3814.7263 -3732.0327 3814.9063 -3731.9128 3815.0095 C
f
-3730.5745 3812.3843 m
-3730.4216 3812.3352 L
-3730.5959 3812.2664 -3730.7207 3812.1079 -3730.9504 3811.7976 C
-3731.2048 3811.9915 -3731.2576 3812.1382 -3731.2751 3812.27 C
-3730.5222 3812.3252 L
-3730.5745 3812.3843 L
f
-3729.7351 3812.3335 m
-3729.8545 3812.7644 -3730.2217 3812.9482 -3729.9968 3813.4143 C
-3729.5481 3813.3843 -3729.6824 3813.0542 -3729.4143 3812.8672 C
-3730.1384 3812.9744 -3729.2063 3812.6272 -3729.7295 3812.3831 C
-3729.5872 3812.3096 -3729.4592 3812.2871 -3729.3384 3812.269 C
-3729.4688 3812.217 -3729.5945 3812.1519 -3729.7129 3812.0723 C
-3729.7063 3812.0823 -3729.7017 3812.0896 -3729.6963 3812.0991 C
-3729.6929 3812.0984 L
-3729.6929 3812.1006 -3729.6936 3812.1016 -3729.6936 3812.1042 C
-3729.6624 3812.1582 -3729.6521 3812.1912 -3729.6873 3812.1604 C
-3729.6897 3812.165 -3729.6985 3812.1672 -3729.7024 3812.1692 C
-3729.7073 3812.2283 -3729.7207 3812.2808 -3729.7351 3812.3311 C
-3729.9448 3812.2422 -3729.7681 3812.22 -3729.7024 3812.1692 C
-3729.7 3812.1472 -3729.6943 3812.1272 -3729.6936 3812.1042 C
-3729.6943 3812.1023 -3729.6953 3812.1006 -3729.6963 3812.0991 C
-3730.4216 3812.3352 L
-3730.2681 3812.395 -3730.0759 3812.3831 -3729.7351 3812.3335 C
f
-3726.0952 3814.4951 m
-3726.1177 3814.457 -3726.1167 3814.4263 -3726.1184 3814.395 C
-3726.1653 3814.4482 -3726.1831 3814.4839 -3726.0952 3814.4951 C
f
-3726.3936 3814.2351 m
-3726.3408 3814.175 -3726.2969 3814.0032 -3726.1255 3814.0471 C
-3725.9768 3814.1763 -3726.1262 3814.2534 -3726.1184 3814.395 C
-3726.0151 3814.2808 -3725.7568 3814.0862 -3726.0808 3813.876 C
-3726.1321 3813.9351 L
-3726.4241 3813.7871 -3726.7993 3813.2495 -3726.7483 3813.1902 C
-3726.6631 3813.5784 -3726.5879 3813.8542 -3726.3936 3814.2351 C
f
-3728.0852 3813.3943 m
-3728.6892 3813.6055 L
-3728.3816 3813.9783 L
-3728.3972 3813.7544 L
-3728.0537 3813.8423 -3728.1279 3813.5667 -3728.0852 3813.3943 C
f
-3731.3833 3812.0522 m
-3731.3032 3811.5967 L
-3731.6521 3812.24 L
-3731.3833 3812.0522 L
f
-3732.1682 3812.1062 m
-3732.1392 3811.7112 L
-3732.3464 3811.9495 L
-3732.1682 3812.1062 L
f
-3776.4617 3817.0166 m
-3776.6392 3817.1287 L
-3776.5552 3817.0942 -3776.5012 3817.0564 -3776.4617 3817.0166 C
f
-3775.1768 3817.0435 m
-3775.1453 3816.8484 L
-3775.2048 3816.9558 -3775.2292 3817.0352 -3775.1768 3817.0435 C
f
-3751.4456 3812.1511 m
-3751.7041 3811.7815 -3751.9929 3811.2083 -3751.9617 3811.6536 C
-3751.8823 3812.0872 L
-3751.7017 3812.0095 -3751.5632 3812.0576 -3751.4456 3812.1511 C
f
-3764.6479 3814.7415 m
-3764.6233 3814.7832 -3764.5977 3814.8286 -3764.5723 3814.8728 C
-3764.5095 3814.7246 -3764.4504 3814.5872 -3764.3977 3814.4583 C
-3764.4729 3814.5471 -3764.5583 3814.6416 -3764.6479 3814.7415 C
f
-3764.8303 3816.5366 m
-3765.1711 3816.2566 L
-3765.0945 3816.3542 -3764.9849 3816.4482 -3764.8303 3816.5366 C
f
-3783.4792 3817.4768 m
-3783.6863 3817.9182 L
-3783.3623 3817.9163 -3783.5049 3817.6936 -3783.4792 3817.4768 C
f
-3740.2073 3812.2664 m
-3740.4304 3812.0967 -3740.6079 3812.0254 -3740.7639 3812.0044 C
-3740.4951 3812.2534 -3740.2783 3812.6272 -3740.2073 3812.2664 C
f
-3775.9561 3812.4126 m
-3776.0647 3812.4912 -3776.1111 3812.5796 -3776.1079 3812.6763 C
-3775.9961 3812.6023 -3775.9329 3812.519 -3775.9561 3812.4126 C
f
-3741.4082 3812.0059 m
-3741.3689 3812.0496 -3741.3303 3812.071 -3741.2903 3812.1079 C
-3741.1272 3812.0352 -3740.9631 3811.9768 -3740.7639 3812.0044 C
-3740.9624 3811.8196 -3741.1897 3811.7046 -3741.4082 3812.0059 C
f
-3808.9297 3817.1172 m
-3808.9482 3817.0984 -3808.9705 3817.0884 -3808.9873 3817.0652 C
-3808.9929 3817.1243 -3808.9673 3817.1272 -3808.9297 3817.1172 C
f
-3816.3442 3812.74 m
-3816.2712 3812.7124 -3816.1521 3812.7119 -3816.0398 3812.7063 C
-3816.0945 3812.6763 -3816.1863 3812.6792 -3816.3442 3812.74 c
f
-3735.3264 3811.9172 m
-3735.1599 3811.8887 -3735.3 3811.8694 -3735.3264 3811.9172 C
-3735.3264 3811.9172 L
f
-3734.5168 3813.6331 m
-3734.5522 3813.6814 -3734.5791 3813.7439 -3734.5833 3813.8442 C
-3734.5696 3813.74 -3734.5464 3813.6736 -3734.5168 3813.6331 c
f
-3743.0664 3814.7063 m
-3743.0713 3814.7063 -3743.0752 3814.7046 -3743.0808 3814.7046 C
-3743.0313 3814.7896 -3743.0398 3814.7732 -3743.0664 3814.7063 C
f
-3735.0759 3812.1143 m
-3735.1384 3812.061 -3735.2104 3812.0166 -3735.2888 3811.9856 C
-3735.2544 3812.019 -3735.1897 3812.061 -3735.0759 3812.1143 C
f
-3735.1096 3811.9092 m
-3735.0522 3811.9287 -3735.0071 3811.9395 -3734.9641 3811.9512 C
-3734.9431 3811.8792 -3734.9617 3811.8335 -3735.1096 3811.9092 C
f
-3735.5583 3811.9407 m
-3735.4631 3811.9336 -3735.3743 3811.9539 -3735.2888 3811.9856 C
-3735.3215 3811.9558 -3735.3352 3811.9319 -3735.3264 3811.9172 C
-3735.3752 3811.9236 -3735.4441 3811.9326 -3735.5583 3811.9407 c
f
-3795.2932 3815.9558 m
-3795.3042 3815.9424 -3795.3169 3815.9336 -3795.3289 3815.915 C
-3795.4968 3816.0952 -3795.4231 3816.0667 -3795.2932 3815.9558 C
f
-3755.7783 3816.6563 m
-3755.7705 3816.6519 -3755.7664 3816.6404 -3755.7593 3816.6362 C
-3755.7671 3816.6311 -3755.7769 3816.6252 -3755.7839 3816.6199 C
-3755.7783 3816.6563 L
f
-3756.3762 3816.9792 m
-3756.1216 3816.4392 -3755.9768 3816.5056 -3755.7839 3816.6199 C
-3755.9817 3815.3694 L
-3756.3762 3816.9792 L
f
*u
-3779.5383 3817.1416 m
-3779.1184 3817.5322 L
-3779.6252 3818.1736 -3779.9919 3817.9524 -3779.5977 3818.5 C
-3779.5383 3817.1416 -3777.9656 3818.3616 -3777.9072 3817.0039 C
-3777.6304 3817.2896 L
-3777.7097 3817.2766 -3777.7224 3817.356 -3777.8008 3817.343 C
-3777.2625 3817.9934 -3777.4009 3816.3616 -3776.7073 3816.5542 C
-3776.4656 3816.6582 -3776.2969 3816.8552 -3776.4617 3817.0166 C
-3775.9231 3816.6807 L
-3775.7664 3816.707 -3775.8047 3816.9431 -3775.9607 3816.9172 C
-3775.1392 3816.8086 L
-3775.1453 3816.8484 L
-3775.0281 3816.6362 -3774.7625 3816.3064 -3774.6328 3816.1663 C
-3774.4241 3816.3616 -3774.7375 3816.3103 -3774.6841 3816.4792 C
-3774.2292 3816.1504 L
-3774.0439 3816.5032 -3774.4209 3816.8442 -3774.7351 3816.7935 C
-3774.3103 3818.1494 -3774.3577 3816.4524 -3773.4409 3817.2444 C
-3773.8704 3817.4163 L
-3773.5935 3818.1863 -3773.2583 3817.907 -3772.7727 3818.3875 C
-3772.8879 3818.1367 -3773.7449 3817.1775 -3773.2512 3816.8391 C
-3773.1121 3816.9414 -3772.9287 3816.99 -3772.6624 3816.7168 C
-3772.6599 3817.2 -3772.3999 3817.0811 -3772.0745 3817.0535 C
-3772.0967 3817.6936 L
-3771.7449 3817.5088 -3771.7727 3817.1831 -3771.5657 3816.895 C
-3771.1736 3816.9583 -3771.0923 3817.4536 -3771 3817.8711 C
-3770.3721 3817.9727 -3771.4336 3817.0767 -3770.6904 3816.9558 C
-3770.1682 3817.2007 -3769.8015 3816.9392 -3769.1768 3816.5564 C
-3768.8113 3816.7776 -3769.2407 3816.9482 -3769.1096 3817.1311 C
-3768.7856 3816.6206 L
-3768.7063 3816.6331 -3768.7319 3816.7896 -3768.7449 3816.8687 C
-3768.4719 3816.6707 -3768.7224 3816.2292 -3768.2932 3816.0559 C
-3768.1775 3815.3511 -3767.4121 3817.0852 -3766.8809 3816.2854 C
-3766.75 3816.467 -3766.9441 3816.6775 -3766.9041 3816.925 C
-3766.1753 3816.3999 -3766.2793 3816.5435 -3765.6809 3815.8367 C
-3765.1711 3816.2566 L
-3765.5457 3815.7766 -3765.0671 3815.2083 -3764.6479 3814.7415 C
-3764.7808 3814.5095 -3764.8943 3814.3064 -3764.9705 3814.2095 C
-3764.3015 3813.8662 L
-3764.2207 3813.9712 -3764.2881 3814.1912 -3764.3977 3814.4583 C
-3764.3521 3814.4055 -3764.3088 3814.353 -3764.2751 3814.3047 C
-3764.0359 3814.541 -3764.1599 3814.9104 -3764.3313 3815.2678 C
-3764.4128 3815.1416 -3764.4937 3815.0071 -3764.5723 3814.8728 C
-3764.7375 3815.2615 -3764.8921 3815.6919 -3764.8577 3816.0667 C
-3764.8142 3815.9927 -3764.7305 3815.9292 -3764.6384 3815.8936 C
-3764.6816 3815.999 -3764.7092 3816.0935 -3764.6892 3816.1575 c
-3764.6665 3816.2246 -3764.5967 3816.083 -3764.4873 3815.9199 C
-3764.3352 3816.6331 L
-3764.2983 3816.3499 L
-3763.4231 3816.7959 L
-3762.7969 3816.0784 -3762.2522 3815.0212 -3761.2583 3814.7271 C
-3761.5049 3815.25 -3761.3113 3815.5811 -3761.3247 3816.2007 C
-3761.5959 3815.5447 -3762.0945 3816.4792 -3762.6096 3816.3462 c
-3762.3408 3816.415 -3762.3999 3816.7112 -3762.4683 3816.8132 C
-3761.5496 3816.2168 L
-3761.5703 3816.7239 -3761.3545 3816.5967 -3761.1145 3816.8064 C
-3761.2959 3815.8047 -3760.4297 3816.1392 -3760.0559 3815.8323 C
-3760.0327 3816.168 -3760.1223 3816.512 -3760.5784 3816.4304 C
-3760.0752 3817.1848 -3759.9282 3815.2544 -3759.4343 3815.895 C
-3759.5457 3815.9031 -3759.6057 3815.8518 -3759.6497 3816.0232 C
-3759.3896 3815.7239 -3758.7537 3815.9612 -3758.9033 3816.2534 C
-3759.0144 3816.2603 L
-3758.2751 3816.3792 -3756.7639 3816.2678 -3756.6536 3815.4172 C
-3756.6462 3815.5276 -3756.7505 3816.4424 -3756.7952 3816.6143 C
-3755.4761 3813.7527 L
-3755.5923 3814.4832 -3755.1462 3816.2224 -3755.7593 3816.6362 C
-3755.5833 3816.74 -3755.3655 3816.8616 -3754.9944 3816.603 C
-3755.1145 3816.499 -3755.2937 3815.5471 -3755.1296 3815.48 C
-3754.6792 3816.2932 -3754.8169 3815.915 -3754.2617 3816.6084 C
-3754.4417 3816.4524 -3754.2417 3815.3064 -3753.9573 3815.343 C
-3754.0017 3815.5144 -3753.9336 3816.4734 -3754.0376 3816.5928 C
-3753.3296 3815.4683 L
-3753.5063 3815.6707 -3753.3608 3816.4214 -3753.2024 3816.74 C
-3753.2759 3816.519 -3752.5903 3816.76 -3752.4016 3816.6487 C
-3752.7017 3816.3875 L
-3751.9023 3816.5579 -3751.9121 3814.8064 -3751.1191 3814.8655 C
-3751.2151 3815.0974 -3751.3562 3816.2952 -3750.9529 3816.4363 C
-3750.7681 3815.8606 -3750.1345 3813.6663 -3749.4329 3813.2227 C
-3749.2983 3813.5522 L
-3748.76 3813.1768 L
-3749.0952 3814.0435 -3750.0359 3815.8672 -3750.5496 3816.5767 C
-3750.2505 3816.8374 -3750.4663 3816.9656 -3750.0183 3816.9351 C
-3749.8601 3817.2439 -3750.2625 3817.4031 -3750.3943 3817.4214 C
-3749.3513 3817.6206 L
-3749.3977 3816.9482 -3748.5537 3816.9463 -3748.5935 3816.3862 C
-3749.7263 3817.083 L
-3749.7722 3816.4119 -3749.0713 3815.175 -3748.3323 3815.2932 C
-3748.1443 3815.561 -3748.4729 3816.49 -3748.4575 3816.7144 C
-3748.3616 3816.4832 -3747.7561 3816.272 -3747.6882 3816.4363 C
-3748.0017 3816.7959 L
-3747.5903 3817.0486 -3747.3303 3815.9048 -3746.8359 3816.5464 C
-3746.6653 3816.5896 -3746.3264 3817.4119 -3746.2969 3817.0144 C
-3746.5752 3816.2471 -3746.6296 3813.8743 -3746.4441 3813.2979 C
-3746.3843 3813.3499 -3745.5481 3814.031 -3745.3533 3814.4104 C
-3745.0723 3815.012 -3745.7751 3815.8442 -3745.5359 3816.3606 C
-3745.5256 3816.1768 -3745.3704 3815.9502 -3745.3057 3815.8772 C
-3745.1265 3816.0342 -3745.3799 3816.4463 -3744.9905 3816.363 C
-3744.9255 3815.6824 -3744.1985 3816.4207 -3744.8064 3815.7871 C
-3744.4255 3815.5923 -3744.4016 3815.928 -3743.9543 3815.8975 C
-3744.0967 3815.457 -3743.5527 3814.3992 -3743.1711 3814.2039 C
-3743.1936 3814.3772 -3743.1079 3814.603 -3743.0664 3814.7063 C
-3742.2856 3814.7678 -3741.8665 3815.0774 -3741.1384 3815.083 C
-3741.0713 3815.2483 -3740.72 3815.4482 -3740.8696 3815.7415 C
-3740.7649 3815.6206 -3740.6687 3815.3894 -3740.4441 3815.373 C
-3740.0095 3815.9624 -3740.9448 3815.4646 -3740.6135 3816.1736 C
-3740.5852 3815.7776 -3740.0327 3815.6262 -3739.7129 3815.3792 C
-3739.8113 3814.7671 -3740.4519 3815.2615 -3740.7722 3815.5088 C
-3740.7737 3814.665 -3740.2161 3813.7815 -3739.4551 3813.3911 C
-3738.8503 3813.1814 -3739.1929 3813.9363 -3739.0879 3813.8167 C
-3737.9519 3813.9639 -3738.1201 3812.343 -3737.1768 3812.9524 C
-3736.8025 3813.4895 -3737.1599 3814.0212 -3737.0769 3814.4092 C
-3737.5696 3814.6128 -3737.8333 3814.0679 -3738.1672 3814.0896 C
-3737.7561 3814.3442 L
-3737.9128 3814.5232 -3738.2417 3814.6582 -3738.4209 3814.5032 C
-3738.1072 3814.9856 -3736.5017 3814.5952 -3735.6252 3815.041 C
-3735.4695 3814.8616 -3735.2007 3814.6743 -3735.3279 3814.4583 C
-3735.6052 3814.5332 L
-3735.8601 3814.0999 -3735.0833 3813.9336 -3735.4343 3813.7312 C
-3735.0623 3813.4263 -3734.6453 3812.947 -3734.1216 3813.1924 C
-3734.0232 3813.8054 L
-3734.0344 3813.6262 -3734.3655 3813.4407 -3734.5127 3813.6272 c
-3734.2944 3813.3552 -3733.7097 3814.457 -3733.4705 3813.6543 C
-3733.8376 3813.2295 L
-3733.4641 3812.9214 -3733.0024 3812.2703 -3732.5383 3812.4639 C
-3732.7495 3811.8584 -3732.6453 3812.5332 -3732.9751 3811.8247 C
-3732.6892 3812.7063 -3734.1624 3811.7876 -3733.7031 3812.7136 C
-3734.0415 3811.8916 -3734.2888 3812.3655 -3734.7312 3811.6638 C
-3734.7175 3811.8662 -3734.5745 3812.051 -3734.9641 3811.9512 C
-3734.9817 3812.0103 -3735.0232 3812.0852 -3735.0496 3812.1294 C
-3735.0615 3812.1243 -3735.0657 3812.1206 -3735.0759 3812.1143 C
-3735.0681 3812.1223 -3735.0623 3812.1311 -3735.0544 3812.1382 C
-3735.0713 3812.1687 -3735.0728 3812.175 -3735.0464 3812.1462 C
-3734.9536 3812.2356 -3734.8784 3812.3416 -3734.8479 3812.4539 C
-3735.0413 3812.9182 -3735.6609 3812.9038 -3735.8704 3813.1443 C
-3736.1016 3813.0479 -3735.7737 3812.9119 -3735.8999 3812.6963 C
-3736.2129 3813.0559 L
-3736.2439 3812.6072 -3736.8271 3812.3096 -3736.2825 3812.0464 C
-3736.7727 3812.0264 L
-3737.0613 3811.7747 -3737.4583 3811.6743 -3737.7031 3811.863 C
-3737.9343 3811.7664 -3738.2871 3812.3606 -3738.0857 3812.0088 C
-3738.8545 3812.2871 L
-3738.8616 3812.175 L
-3739.6201 3812.1184 -3740.4231 3812.9192 -3741.2903 3812.1079 C
-3741.5457 3812.2212 -3741.8096 3812.3599 -3742.2368 3812.2327 C
-3742.3201 3811.8442 L
-3742.6479 3811.9792 -3743.3047 3811.4551 -3743.4456 3811.8599 C
-3743.7993 3810.8142 -3745.0369 3811.6316 -3745.6135 3811.4463 C
-3745.6353 3811.9536 L
-3746.0322 3811.925 -3746.4128 3812.0696 -3746.9055 3812.2727 C
-3746.8752 3812.7207 L
-3747.3 3813.0886 -3747.9673 3812.4019 -3748.6392 3812.4482 C
-3748.5935 3812.2766 -3748.4231 3812.321 -3748.3025 3812.425 C
-3749.1052 3811.4119 -3749.9961 3813.1616 -3750.7241 3812.4236 C
-3750.9055 3812.5872 -3751.0369 3812.531 -3751.1641 3812.4192 C
-3751.1472 3812.4175 -3751.1321 3812.4092 -3751.1191 3812.395 C
-3751.1377 3812.3904 -3751.1653 3812.3887 -3751.1936 3812.3894 C
-3751.2737 3812.3123 -3751.3562 3812.2227 -3751.4456 3812.1511 C
-3751.3696 3812.26 -3751.2969 3812.3496 -3751.2336 3812.3911 C
-3751.3735 3812.4004 -3751.5857 3812.4558 -3751.7937 3812.5686 C
-3751.8823 3812.0872 L
-3751.8992 3812.0935 -3751.9128 3812.0923 -3751.9304 3812.1006 C
-3752.1345 3811.9231 -3752.0945 3812.3286 -3751.9856 3812.6912 C
-3752.0903 3812.77 -3752.1863 3812.8655 -3752.2607 3812.9812 C
-3752.4265 3812.2039 -3752.8064 3813.2432 -3753.0327 3812.4143 C
-3753.1729 3812.8184 -3754.0784 3812.7183 -3754.1892 3813.5696 C
-3754.1963 3813.4583 -3754.2576 3813.4055 -3754.1453 3813.3982 C
-3754.3772 3813.3015 -3754.6089 3813.2046 -3754.8169 3813.4446 C
-3754.9153 3812.8323 L
-3755.4216 3813.655 L
-3755.7292 3813.2822 -3755.8567 3813.0652 -3755.5513 3812.5942 C
-3756.2888 3813.3196 -3756.1497 3812.8672 -3756.7769 3813.5852 C
-3756.7463 3813.1895 L
-3756.9705 3813.2046 -3757.3289 3813.7356 -3757.4641 3813.408 C
-3757.9656 3812.655 -3759.9456 3813.304 -3761.2329 3812.6042 C
-3760.9832 3813.77 -3761.8313 3812.0823 -3761.8823 3812.9856 C
-3761.9573 3812.7102 -3762.1367 3812.5542 -3761.9282 3812.3152 C
-3762.5852 3812.5852 -3762.9153 3811.8772 -3763.3689 3812.6392 C
-3763.4441 3812.3623 -3763.2283 3812.2356 -3763.2952 3812.071 C
-3763.3479 3812.1311 -3763.5039 3812.311 -3763.5723 3812.1462 c
-3763.6392 3811.9824 -3763.4761 3811.915 -3763.3721 3811.7952 C
-3764.0432 3811.8416 -3764.1111 3812.6912 -3764.1599 3813.4883 C
-3764.5 3813.1111 -3764.6697 3813.1638 -3764.9153 3813.687 C
-3765.0337 3813.4263 -3765.2312 3813.1536 -3764.8142 3813.0598 C
-3765.0488 3813.0215 -3766.2473 3812.6775 -3766.2712 3813.3167 C
-3766.3447 3813.1543 -3766.5991 3813.269 -3766.6609 3813.343 C
-3767.1873 3813.3047 -3767.2336 3813.2471 -3767.7505 3813.3079 C
-3767.6072 3813.4119 L
-3767.8113 3814.1831 -3768.0369 3813.5842 -3768.4536 3813.6768 C
-3768.4417 3813.5984 L
-3769.3972 3813.0415 -3768.8542 3813.8643 -3769.7969 3813.2292 C
-3769.7456 3813.7092 L
-3769.8335 3814.7407 -3770.5808 3813.1006 -3771.1279 3813.4951 C
-3770.9304 3813.769 L
-3771.2292 3814.1223 -3771.7656 3812.3662 -3772.0657 3812.2371 C
-3772.1311 3812.1472 -3771.9624 3812.0935 -3771.8711 3812.0276 C
-3772.6567 3811.4182 -3771.9729 3812.655 -3772.5583 3812.8015 C
-3772.6663 3812.4624 -3772.4192 3811.9392 -3772.8132 3811.876 C
-3773.0095 3811.6023 -3773.9561 3812.9768 -3774.4937 3812.3267 C
-3774.3752 3812.5879 -3774.2576 3812.8484 -3774.5295 3813.0447 C
-3774.9463 3813.1382 -3775.6563 3812.0579 -3776.0327 3812.8816 C
-3776.0857 3812.8096 -3776.1057 3812.7415 -3776.1079 3812.6763 C
-3776.4265 3812.8887 -3777.1433 3813.0291 -3777.3352 3813.4756 C
-3777.6296 3811.8191 -3779.3159 3814.2815 -3779.3088 3812.7534 C
-3780.2888 3812.8352 L
-3780.2632 3812.6792 L
-3780.8896 3812.5784 -3781.1111 3812.9446 -3781.3313 3813.311 C
-3781.4761 3813.207 -3781.3704 3813.064 -3781.3584 3812.9846 C
-3782.2737 3812.6763 -3782.3647 3812.7415 -3783.1321 3813.5032 C
-3783.2119 3813.0071 L
-3783.4199 3813.2952 -3784.5352 3812.2295 -3785.4329 3812.8079 C
-3785.4241 3812.7512 -3785.4055 3812.655 -3785.3342 3812.5852 C
-3786.3442 3813.1672 -3787.7522 3811.2112 -3788.1223 3813.0159 C
-3788.7888 3813.4607 L
-3787.9265 3813.6006 -3788.9172 3814.2444 -3788.5625 3814.5435 C
-3788.9016 3814.6494 -3789.4392 3813.999 -3789.0225 3813.9063 C
-3788.9573 3813.9966 L
-3788.8042 3813.0559 -3790.0288 3813.6631 -3790.0056 3813.0222 C
-3791.7024 3813.0696 -3793.3562 3812.5479 -3794.9456 3812.5078 C
-3794.7625 3813.239 L
-3795.3169 3813.1975 L
-3795.4624 3813.0276 -3795.5122 3812.6252 -3795.1167 3812.655 C
-3795.3247 3812.2407 -3795.78 3813.0032 -3795.7913 3813.1616 C
-3796.5657 3812.8655 -3795.4888 3812.3086 -3795.7263 3812.291 C
-3796.0488 3812.3455 L
-3795.9761 3812.4312 L
-3796.2375 3812.73 -3796.2607 3813.0471 -3796.7361 3813.011 C
-3797.0369 3812.8643 -3796.8904 3812.5598 -3797.0088 3812.5322 C
-3797.0081 3812.4792 -3797.0481 3812.4551 -3797.1904 3812.5103 C
-3797.8889 3812.4482 L
-3797.6096 3813.0254 L
-3797.9192 3813.3103 -3798.2664 3812.9951 -3797.9441 3813.6494 c
-3798.4172 3812.6404 -3800.5496 3813.2871 -3800.8401 3812.9744 C
-3801.2737 3813.395 -3801.7017 3813.3875 -3802.2319 3813.3367 C
-3802.1001 3813.457 -3802.0212 3814.1062 -3802.4785 3814.0271 C
-3802.3113 3812.687 -3803.3159 3813.4456 -3803.6855 3812.4812 C
-3803.3552 3813.1206 -3804.9856 3812.6392 -3804.4673 3813.5471 C
-3804.8489 3813.4382 -3804.4905 3813.0454 -3804.78 3812.73 C
-3805.6882 3813.249 -3806.7815 3812.3928 -3807.9041 3812.5679 C
-3807.9216 3812.7444 -3807.7336 3813.0127 -3807.9744 3813.2747 C
-3808.5671 3812.395 L
-3808.7888 3812.4812 -3808.7712 3813.4104 -3809.1763 3812.8 C
-3809.1191 3812.9482 -3809.0337 3813.1707 -3809.1824 3813.2271 C
-3811.3816 3812.3704 -3813.6763 3813.9292 -3815.9097 3812.3191 C
-3815.6072 3812.6604 -3815.8088 3812.6936 -3816.0398 3812.7063 C
-3815.8896 3812.7876 -3816.0432 3813.1404 -3816.0137 3813.3792 C
-3816.9487 3812.7168 L
-3817.1191 3813.3784 -3817.9512 3812.7615 -3818.0488 3813.3943 C
-3817.7527 3813.28 L
-3818.1465 3814.0271 -3817.2017 3814.9395 -3817.2593 3815.8975 C
-3816.8184 3815.0486 -3816.0967 3817.1543 -3815.3733 3815.9395 C
-3815.2136 3816.135 -3815.5095 3816.2483 -3815.4241 3816.4702 C
-3815.2407 3816.0598 -3815.0193 3815.9744 -3814.6089 3816.1582 C
-3814.6553 3816.26 L
-3813.5024 3816.1599 -3813.0081 3816.5647 -3811.7129 3816.8342 C
-3811.8088 3816.3606 L
-3811.5305 3816.4236 -3811.4719 3816.5723 -3811.3416 3816.6912 C
-3811.0222 3815.9727 -3812.1233 3816.6504 -3811.8323 3815.8584 C
-3811.4631 3816.8223 -3809.8696 3815.8728 -3809.6201 3816.9683 C
-3809.1919 3816.9744 -3809.7456 3816.4199 -3809.3176 3816.4263 C
-3809.2041 3816.7227 L
-3809.0959 3816.3408 L
-3808.8152 3816.4038 -3808.6736 3816.7747 -3808.6631 3817.0254 C
-3808.7312 3816.9956 -3808.8567 3817.0955 -3808.9297 3817.1172 C
-3808.5657 3817.4663 -3807.9033 3816.9983 -3807.7783 3817.1118 C
-3808.1897 3816.9292 L
-3807.0212 3816.6519 -3805.5945 3817.041 -3804.4656 3816.4382 C
-3804.5513 3816.2151 L
-3803.6892 3815.8015 -3803.8608 3816.4607 -3802.9143 3816.269 C
-3802.9487 3816.3223 L
-3802.7593 3816.0999 -3802.5063 3815.9871 -3802.2473 3816.0127 C
-3802.4863 3816.2747 -3801.7976 3816.5212 -3802.1111 3816.811 C
-3801.1763 3816.3672 -3801.6487 3816.4624 -3801.0313 3815.6316 C
-3800.8889 3816.0032 L
-3800.6785 3815.6672 -3800.6609 3815.49 -3800.1882 3815.3943 C
-3800.5759 3815.7124 -3799.8865 3815.9592 -3800.3208 3816.3799 C
-3799.3289 3817.1912 -3798.8479 3815.561 -3798.3928 3816.7471 C
-3797.9373 3815.7207 -3799.2512 3816.1775 -3798.9961 3815.9575 C
-3799.2097 3815.6223 -3798.6201 3815.1902 -3798.3088 3815.2932 C
-3797.9919 3815.3167 -3797.77 3816.6072 -3796.9729 3816.5872 C
-3797.0522 3816.5823 -3797.0576 3816.6604 -3797.1367 3816.655 C
-3796.8384 3816.9172 -3796.5522 3816.3008 -3796.1863 3816.7263 C
-3795.9812 3816.1052 -3795.7112 3816.7615 -3795.6521 3815.9702 C
-3796.3833 3816.1536 L
-3795.9688 3815.9463 -3795.5801 3815.02 -3794.8972 3815.4695 C
-3794.9504 3815.6287 -3795.1536 3815.8391 -3795.2932 3815.9558 C
-3795.0935 3816.1895 -3794.9087 3815.8015 -3794.7017 3816.041 C
-3794.7607 3816.8335 -3795.5903 3816.2136 -3796.0344 3816.8174 C
-3795.8201 3817.1519 -3795.1943 3816.2439 -3795.4175 3817.1016 c
-3795.0967 3816.011 -3794.6321 3817.24 -3794.0923 3816.4063 C
-3794.1279 3816.8806 L
-3794.0425 3816.8064 -3793.8655 3816.5823 -3793.7083 3816.5942 C
-3793.9929 3817.2095 L
-3793.5559 3816.6848 -3793.1504 3817.6692 -3792.7312 3817.3831 C
-3793.6089 3817.3975 -3792.9282 3816.811 -3793.2993 3816.4646 C
-3792.2168 3815.8296 -3792.6768 3817.7063 -3791.4648 3817.4783 C
-3791.6289 3817.5454 -3792.0808 3817.1936 -3791.8242 3816.9734 C
-3791.5935 3817.071 -3791.2888 3817.2534 -3791.1472 3817.5032 C
-3790.3442 3817.4038 -3791.2705 3817.0144 -3790.9287 3816.7224 C
-3790.6553 3817.3008 -3790.5344 3816.4871 -3790.1824 3816.3022 C
-3790.1799 3816.7847 L
-3789.2649 3817.0942 -3789.9373 3815.7791 -3789.1135 3816.1536 C
-3789.4617 3816.8223 L
-3789.0322 3816.6494 L
-3789.1208 3817.1982 L
-3788.6536 3816.791 -3788.5081 3816.8962 -3788.0503 3817.0503 C
-3788.1567 3816.7112 -3787.9905 3816.175 -3787.5852 3816.1599 C
-3787.3088 3816.4463 -3787.74 3816.6184 -3787.1655 3816.5496 C
-3787.2952 3816.8511 -3787.4373 3817.23 -3787.6873 3816.7864 C
-3787.7129 3816.9436 -3787.8152 3817.0884 -3787.8416 3817.2444 C
-3787.5439 3817.5735 -3787.0935 3817.3191 -3786.8855 3817.3142 C
-3786.9656 3817.2964 -3787.0613 3817.2703 -3787.1104 3817.2024 C
-3786.2776 3816.5332 L
-3786.1465 3816.7144 -3786.2505 3816.8599 -3786.3535 3817.0032 C
-3786.1848 3816.9502 -3786.0681 3816.7283 -3785.8201 3816.687 C
-3785.8843 3817.0791 -3785.8689 3817.4839 -3786.22 3817.6687 C
-3785.4265 3817.2334 L
-3785.3735 3817.4038 -3785.0193 3817.7024 -3785.1223 3817.8462 C
-3784.6824 3818.0767 -3784.0432 3817.0852 -3783.46 3817.3894 C
-3783.4297 3817.3135 -3783.3689 3817.2407 -3783.2449 3817.1848 C
-3782.6968 3817.2732 -3782.2112 3817.7544 -3781.5615 3817.217 C
-3781.1929 3817.9199 L
-3780.6841 3817.7603 -3781.6919 3817.0342 -3780.8447 3816.769 C
-3780.2449 3816.5447 -3780.6208 3817.3687 -3780.4104 3817.564 C
-3780.1121 3817.2102 -3779.5935 3816.4888 -3779.0425 3817.061 C
-3779.2249 3817.1936 -3779.3679 3817.0896 -3779.5383 3817.1416 C
f
1 D
-3773.2632 3816.8303 m
-3773.3848 3816.9312 -3773.6272 3817.2439 -3773.7161 3816.9592 C
-3773.5776 3816.4063 -3773.4705 3816.6707 -3773.2632 3816.8303 C
f
-3763.7241 3815.6692 m
-3763.8145 3815.8279 -3763.9543 3815.749 -3764.1121 3815.5667 C
-3763.9976 3815.5271 -3763.8679 3815.5447 -3763.7241 3815.6692 C
f
-3737.1511 3812.3096 m
-3737.1563 3812.3174 -3737.1599 3812.323 -3737.1641 3812.333 C
-3737.4353 3812.145 -3737.3391 3812.22 -3737.1511 3812.3096 C
f
0 D
-3736.5879 3812.519 m
-3736.5313 3812.4524 -3736.5352 3812.3848 -3736.5591 3812.3174 C
-3736.5984 3812.4392 -3736.7249 3812.4482 -3736.8689 3812.4136 C
-3736.8289 3812.5398 -3736.7561 3812.6272 -3736.5879 3812.519 C
f
1 D
-3797.0713 3812.7092 m
-3796.9617 3812.8352 L
-3797.2092 3812.9744 -3797.1399 3812.8484 -3797.0713 3812.7092 C
f
*U
0 D
-3764.8057 3816.3286 m
-3764.8401 3816.2471 -3764.8496 3816.1575 -3764.8577 3816.0667 C
-3764.9055 3816.1475 -3764.9065 3816.2415 -3764.8057 3816.3286 C
f
-3783.4409 3817.395 m
-3783.4473 3817.3911 -3783.4536 3817.3928 -3783.46 3817.3894 C
-3783.4705 3817.4182 -3783.4761 3817.4482 -3783.4792 3817.4768 C
-3783.4409 3817.395 L
f
-3745.3123 3816.6096 m
-3745.4282 3816.5398 -3745.4929 3816.4524 -3745.5359 3816.3606 C
-3745.5422 3816.4783 -3745.4895 3816.5784 -3745.3123 3816.6096 C
f
-3733.6033 3811.6992 m
-3733.9641 3811.8247 L
-3733.7896 3811.8008 -3733.7273 3811.9063 -3733.6392 3811.9832 C
-3733.6472 3811.8704 -3733.7161 3811.707 -3733.6033 3811.6992 C
f
-3730.4719 3814.6848 m
-3730.4192 3814.6255 -3730.3601 3814.6782 -3730.3081 3814.6184 C
-3730.3225 3814.3943 L
-3730.5471 3814.4087 -3730.7041 3814.5896 -3730.4719 3814.6848 C
f
-3733.2693 3813.3022 m
-3733.2407 3813.7083 -3733.0144 3813.5703 -3732.7617 3813.4951 C
-3732.7769 3813.4966 -3732.7913 3813.5 -3732.8064 3813.4951 C
-3732.7319 3812.928 -3733.0012 3813.115 -3733.2693 3813.3022 C
f
-3732.7031 3813.4812 m
-3732.6252 3813.4624 -3732.5457 3813.4524 -3732.4695 3813.4712 C
-3732.4399 3813.2439 -3732.5642 3813.4236 -3732.7031 3813.4812 C
f
-3735.8735 3812.25 m
-3735.7537 3812.3542 -3735.7983 3811.7312 -3735.7305 3811.8962 C
-3735.5967 3811.3799 -3736.5295 3812.5212 -3735.8735 3812.25 C
f
-3733.0647 3814.6392 m
-3733.1553 3814.1382 L
-3733.2969 3814.5422 L
-3733.0647 3814.6392 L
f
-3735.0601 3814.2712 m
-3734.6563 3814.4104 L
-3734.6624 3814.3264 -3734.6111 3814.2776 -3734.5481 3814.24 C
-3734.7969 3814.2224 -3735.0696 3814.123 -3735.0601 3814.2712 C
f
-3734.5481 3814.24 m
-3734.4185 3814.249 -3734.2952 3814.2383 -3734.2231 3814.1563 C
-3734.2932 3814.1616 -3734.4441 3814.1782 -3734.5481 3814.24 C
f
-3733.6167 3814.7896 m
-3733.7361 3814.6851 L
-3734.0212 3814.6487 L
-3733.6167 3814.7896 L
f
-3739.4009 3814.175 m
-3739.8416 3814.3184 L
-3739.8865 3814.49 -3739.7664 3814.5952 -3739.6023 3814.5271 C
-3739.4968 3814.407 -3739.3333 3814.3408 -3739.4009 3814.175 C
f
-3738.0681 3815.5471 m
-3738.1873 3815.4431 -3738.1953 3815.3311 -3738.2625 3815.1663 C
-3738.2759 3815.7871 L
-3738.0681 3815.5471 L
f
-3739.3533 3815.6919 m
-3739.3972 3815.8643 -3739.9929 3816.1863 -3739.4343 3816.1475 C
-3739.3896 3815.9768 -3738.9482 3815.8335 -3739.3533 3815.6919 C
f
-3745.9937 3814.9063 m
-3745.8816 3814.8982 L
-3745.8977 3813.8799 L
-3745.9937 3814.9063 L
f
-3751.8464 3817.343 m
-3751.3242 3817.5872 -3751.7224 3816.7144 -3751.2505 3817.019 C
-3751.1279 3816.7783 -3751.6362 3816.7703 -3751.5105 3816.5623 C
-3751.8257 3816.8167 -3751.9912 3816.6736 -3751.8464 3817.343 C
f
-3751.5105 3816.5623 m
-3751.46 3816.5222 -3751.4065 3816.4734 -3751.3496 3816.408 C
-3751.4409 3816.4712 -3751.4839 3816.52 -3751.5105 3816.5623 C
f
-3817.5745 3812.1924 m
-3817.9104 3811.98 L
-3817.6936 3812.3223 L
-3817.5745 3812.1924 L
f
-3818.2192 3812.9482 m
-3818.2983 3812.2991 L
-3818.5 3812.8862 L
-3818.4241 3812.8574 -3818.2769 3812.8015 -3818.2192 3812.9482 C
f
-3772.3303 3818.1375 m
-3772.3047 3817.9812 L
-3772.3567 3817.8123 -3772.4353 3817.8 -3772.5928 3817.7732 C
-3772.3303 3818.1375 L
f
-3776.8848 3817.6519 m
-3776.8064 3817.665 L
-3776.9529 3817.0784 L
-3776.8848 3817.6519 L
f
-3780.7073 3818.4004 m
-3780.5513 3818.425 -3780.3679 3818.2942 -3780.2112 3818.3196 C
-3780.5513 3818.425 -3780.7495 3817.6692 -3780.7073 3818.4004 C
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pattern 45)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-7690 7690 m
-7690 7659.3877 L
-7665.1748 7659.3877 L
-7665.1748 7690 L
-7690 7690 L
n
0 O
0.25687 0.134554 0.116365 0 0.784314 0.823529 0.847059 Xa
-7690 7681.4985 m
-7665.1738 7681.4985 L
-7665.1738 7680.5142 L
-7690 7680.5142 L
-7690 7681.4985 L
f
0.546197 0.349767 0.194675 0 0.513726 0.6 0.694118 Xa
-7690 7680.5176 m
-7665.1738 7680.5176 L
-7665.1738 7673.7935 L
-7690 7673.7935 L
-7690 7680.5176 L
f
0.25687 0.134554 0.116365 0 0.784314 0.823529 0.847059 Xa
-7690 7673.7959 m
-7665.1738 7673.7959 L
-7665.1738 7672.6367 L
-7690 7672.6367 L
-7690 7673.7959 L
f
0.424323 0.245579 0.110872 0 0.627451 0.701961 0.792157 Xa
-7665.1738 7672.6367 m
-7665.1738 7660.5278 L
-7690 7660.5278 L
-7690 7672.6367 L
-7665.1738 7672.6367 L
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pattern 47)0 A
u
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-7690 7690 m
-7690 7659.3877 L
-7659.3848 7659.3877 L
-7659.3848 7690 L
-7690 7690 L
n
0 O
0.25687 0.134554 0.116365 0 0.784314 0.823529 0.847059 Xa
-7659.3848 7680.5142 m
-7668.8672 7680.5142 L
-7668.8711 7689.9985 L
-7667.8896 7689.9985 L
-7667.8896 7681.4951 L
-7659.3848 7681.4951 L
-7659.3848 7680.5142 L
f
0.546197 0.349767 0.194675 0 0.513726 0.6 0.694118 Xa
-7659.3848 7673.7935 m
-7675.5928 7673.7915 L
-7675.5928 7690 L
-7668.8672 7690 L
-7668.8672 7680.5132 L
-7659.3848 7680.5132 L
-7659.3848 7673.7935 L
f
0.25687 0.134554 0.116365 0 0.784314 0.823529 0.847059 Xa
-7659.3848 7672.6357 m
-7676.7485 7672.6357 L
-7676.7485 7689.9995 L
-7675.5957 7689.9995 L
-7675.5957 7673.7915 L
-7659.3848 7673.7915 L
-7659.3848 7672.6357 L
f
0.424323 0.245579 0.110872 0 0.627451 0.701961 0.792157 Xa
-7659.3848 7660.5244 m
-7688.8594 7660.5244 L
-7688.8594 7689.9985 L
-7676.7495 7690 L
-7676.7495 7672.6357 L
-7659.3848 7672.6357 L
-7659.3848 7660.5244 L
f
0 0 0 0 1 1 1 Xa
-7675.5918 7674.1533 m
-7676.7207 7672.6733 l
-7675.5918 7673.7959 l
-7675.5918 7674.1533 l
f
-7667.8896 7681.8096 m
-7668.8232 7680.5615 l
-7667.8896 7681.4951 l
-7667.8896 7681.8096 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pattern 49)0 A
u
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-7690 7690 m
-7659.3335 7690 L
-7659.3335 7659.3345 L
-7690 7659.3345 L
-7690 7690 L
n
u
u
u
0 O
0.25687 0.134554 0.116365 0 0.784314 0.823529 0.847059 Xa
1 XR
-7681.4219 7689.9688 m
-7680.5039 7689.9688 L
-7680.5039 7668.8013 L
-7659.3389 7668.8013 L
-7659.3389 7667.8853 L
-7681.4219 7667.8853 L
-7681.4219 7689.9688 L
f
0.546197 0.349767 0.194675 0 0.513726 0.6 0.694118 Xa
0 XR
-7680.5039 7689.9688 m
-7673.7539 7689.9688 L
-7673.7539 7675.5527 L
-7659.3389 7675.5527 L
-7659.3389 7676.7173 L
-7659.3389 7676.7173 L
-7659.3389 7668.8013 L
-7680.5039 7668.8013 L
-7680.5039 7689.9688 L
f
0.25687 0.134554 0.116365 0 0.784314 0.823529 0.847059 Xa
1 XR
-7659.3389 7676.7173 m
-7659.3389 7675.5527 L
-7673.7539 7675.5527 L
-7673.7539 7689.9688 L
-7672.5889 7689.9688 L
-7672.5889 7676.7173 L
-7659.3389 7676.7173 L
f
0.424323 0.245579 0.110872 0 0.627451 0.701961 0.792157 Xa
0 XR
-7672.5889 7676.7173 m
-7672.5889 7689.9688 L
-7660.5039 7689.9688 L
-7660.5352 7688.8135 L
-7659.3389 7688.8135 L
-7659.3389 7676.7173 L
-7672.5889 7676.7173 L
f
U
1 Ap
1 XR
-7690 7690 m
-7690 7659.3345 L
-7659.3335 7659.3345 L
-7659.3335 7690 L
-7690 7690 L
n
U
0 Ap
0 O
0 0 0 0 1 1 1 Xa
0 XR
-7672.5986 7677.0796 m
-7673.7285 7675.6016 l
-7672.5986 7676.7212 L
-7672.5986 7677.0796 l
f
/BBAccumRotation (12.566368) XT
-7680.5 7669.1255 m
-7681.3848 7667.9287 l
-7680.5 7668.8101 L
-7680.5 7669.1255 l
f
/BBAccumRotation (12.566368) XT
U
U
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Calligraphi) -
(c Brush Tool/ 10 pt. Round/ Adobe Calligraphic Brush Tool/ 3 p) -
(t. Oval/ Adobe ArtOnPath Brush Tool/ Charcoal - Feather/ Adobe) -
( PatternOnPath Brush Tool/ Silver/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt. Round)
(1 10 10 100 100 0 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Oval)
(1 3 3 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal - Feather)
(1 / Unnamed 6/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Silver)
(1 / Unnamed Brush Pattern 45/ Unnamed Brush Pattern 49/ Unname) -
(d Brush Pattern 47/ / / 5 0.623529 0.67451 0.737255 /  1 0 1 0) -
( 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.860075 0.849699 0.789548 1 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 1 1 1 Xa
(White)
Pc
0.860075 0.849699 0.789548 1 0 0 0 Xa
(Black)
Pc
0 0.946532 0.937163 0 1 0 0 Xa
(RGB Red)
Pc
0.093996 0 0.934234 0 1 1 0 Xa
(RGB Yellow)
Pc
0.65771 0 1 0 0 1 0 Xa
(RGB Green)
Pc
0.570947 0 0.134524 0 0 1 1 Xa
(RGB Cyan)
Pc
0.88397 0.770108 0 0 0 0 1 Xa
(RGB Blue)
Pc
0.333318 0.780392 0 0 1 0 1 Xa
(RGB Magenta)
Pc
0.172732 0.941985 0.855985 0.066896 0.756863 0.152941 0.176471 Xa
(R=193 G=39 B=45)
Pc
0 0.941375 0.888029 0.000427 0.929412 0.109804 0.141176 Xa
(R=237 G=28 B=36)
Pc
0 0.761349 0.885496 0 0.945098 0.352941 0.141176 Xa
(R=241 G=90 B=36)
Pc
0 0.515129 0.911498 0 0.968627 0.576471 0.117647 Xa
(R=247 G=147 B=30)
Pc
0 0.374578 0.819669 0 0.984314 0.690196 0.231373 Xa
(R=251 G=176 B=59)
Pc
0.072328 0 0.857542 0 0.988235 0.933333 0.129412 Xa
(R=252 G=238 B=33)
Pc
0.23209 0 0.885466 0 0.85098 0.878431 0.129412 Xa
(R=217 G=224 B=33)
Pc
0.527031 0 0.869627 0 0.54902 0.776471 0.247059 Xa
(R=140 G=198 B=63)
Pc
0.727108 0 0.858396 0 0.223529 0.709804 0.290196 Xa
(R=57 G=181 B=74)
Pc
0.83682 0.129335 0.891264 0.009308 0 0.572549 0.270588 Xa
(R=0 G=146 B=69)
Pc
0.873808 0.33756 0.901701 0.230381 0 0.407843 0.215686 Xa
(R=0 G=104 B=55)
Pc
0.746395 0 0.675746 0 0.133333 0.709804 0.45098 Xa
(R=34 G=181 B=115)
Pc
0.771084 0.031861 0.432563 0 0 0.662745 0.615686 Xa
(R=0 G=169 B=157)
Pc
0.708766 0.140078 0 0 0.160784 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
0.850248 0.514549 0 0 0 0.443137 0.737255 Xa
(R=0 G=113 B=188)
Pc
0.918883 0.910094 0 0 0.180392 0.192157 0.572549 Xa
(R=46 G=49 B=146)
Pc
0.961028 1 0.328832 0.193606 0.105882 0.078431 0.392157 Xa
(R=27 G=20 B=100)
Pc
0.736324 0.927306 0 0 0.4 0.176471 0.568627 Xa
(R=102 G=45 B=145)
Pc
0.52639 0.925505 0 0 0.576471 0.152941 0.560784 Xa
(R=147 G=39 B=143)
Pc
0.386297 1 0.303502 0.083284 0.619608 0 0.364706 Xa
(R=158 G=0 B=93)
Pc
0.106966 0.96817 0.419379 0.00238 0.831373 0.078431 0.352941 Xa
(R=212 G=20 B=90)
Pc
0 0.919432 0.132479 0 0.929412 0.117647 0.47451 Xa
(R=237 G=30 B=121)
Pc
0.262242 0.302037 0.399054 0 0.780392 0.698039 0.6 Xa
(R=199 G=178 B=153)
Pc
0.439338 0.446723 0.498695 0.064942 0.6 0.52549 0.458824 Xa
(R=153 G=134 B=117)
Pc
0.535302 0.536828 0.574395 0.238621 0.45098 0.388235 0.341176 Xa
(R=115 G=99 B=87)
Pc
0.607416 0.6065 0.609216 0.432685 0.32549 0.278431 0.254902 Xa
(R=83 G=71 B=65)
Pc
0.258213 0.406836 0.59823 0.012848 0.776471 0.611765 0.427451 Xa
(R=198 G=156 B=109)
Pc
0.351843 0.50103 0.68777 0.103639 0.65098 0.486275 0.321569 Xa
(R=166 G=124 B=82)
Pc
0.396582 0.569543 0.79736 0.242313 0.54902 0.384314 0.223529 Xa
(R=140 G=98 B=57)
Pc
0.423621 0.629786 0.910674 0.384833 0.458824 0.298039 0.141176 Xa
(R=117 G=76 B=36)
Pc
0.437263 0.693172 1 0.51931 0.376471 0.219608 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.484901 0.764309 0.952666 0.7131 0.258824 0.129412 0.043137 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(White, Black)
Pc
0.860075 0.849699 0.789548 1 0 0 0 Xa
(R=0 G=0 B=0)
Pc
0.764248 0.711086 0.666407 0.817105 0.101961 0.101961 0.101961 Xa
(R=26 G=26 B=26)
Pc
0.719417 0.643305 0.604028 0.583947 0.2 0.2 0.2 Xa
(R=51 G=51 B=51)
Pc
0.671046 0.585412 0.545952 0.371466 0.301961 0.301961 0.301961 Xa
(R=77 G=77 B=77)
Pc
0.616083 0.521294 0.485847 0.198123 0.4 0.4 0.4 Xa
(R=102 G=102 B=102)
Pc
0.54519 0.449836 0.416358 0.06836 0.501961 0.501961 0.501961 Xa
(R=128 G=128 B=128)
Pc
0.4654 0.370703 0.345861 0.006714 0.6 0.6 0.6 Xa
(R=153 G=153 B=153)
Pc
0.349218 0.270603 0.25153 0 0.701961 0.701961 0.701961 Xa
(R=179 G=179 B=179)
Pc
0.239963 0.176791 0.171603 0 0.8 0.8 0.8 Xa
(R=204 G=204 B=204)
Pc
0.119783 0.085969 0.080659 0 0.901961 0.901961 0.901961 Xa
(R=230 G=230 B=230)
Pc
0.058961 0.042023 0.040009 0 0.94902 0.94902 0.94902 Xa
(R=242 G=242 B=242)
Pc
0 0 0 0 1 1 1 Xa
(White)
Pc
0.860075 0.849699 0.789548 1 0 0 0 Xa
(Black)
Pc
0.699184 0.616693 0.576654 0.478004 0.247059 0.247059 0.247059 Xa
(Charcoal)
Pc
0.616083 0.521294 0.485847 0.198123 0.4 0.4 0.4 Xa
(Graphite)
Pc
0.509728 0.414984 0.384253 0.031067 0.54902 0.54902 0.54902 Xa
(Ash)
Pc
0.35407 0.274235 0.25507 0 0.698039 0.698039 0.698039 Xa
(Smoke)
Pc
0.119142 0.297215 0.429419 0 0.894118 0.737255 0.588235 Xa
(Latte)
Pc
0.176761 0.456123 0.699611 0.00647 0.835294 0.592157 0.345098 Xa
(Capuccino)
Pc
0.379187 0.595178 0.902434 0.267063 0.545098 0.360784 0.160784 Xa
(Mochaccino)
Pc
0.488899 0.641901 0.928954 0.518944 0.352941 0.239216 0.109804 Xa
(Chocolate)
Pc
0.256291 1 1 0.323156 0.560784 0 0 Xa
(Mars Red)
Pc
0.164034 1 1 0.084077 0.74902 0 0 Xa
(Ruby)
Pc
0 0.946532 0.937163 0 1 0 0 Xa
(Pure Red)
Pc
0 0.844907 0.940795 0 1 0.25098 0 Xa
(Pumpkin)
Pc
0 0.613489 0.939818 0 1 0.498039 0 Xa
(Squash)
Pc
0 0.287785 0.928313 0 1 0.74902 0 Xa
(Sunshine)
Pc
0.093996 0 0.934234 0 1 1 0 Xa
(Yellow)
Pc
0.311162 0 1 0 0.8 1 0 Xa
(Chartreuse Green)
Pc
0.530602 0 1 0 0.490196 1 0 Xa
(Fresh Grass Green)
Pc
0.65771 0 1 0 0 1 0 Xa
(Pure Green)
Pc
0.804929 0 0.933532 0 0 0.639216 0.239216 Xa
(Spearmint)
Pc
0.873014 0.326268 0.940551 0.208042 0 0.419608 0.2 Xa
(Holly Green)
Pc
0.887968 0.487739 0.560632 0.333196 0.003922 0.32549 0.32549 Xa
(Sea Green)
Pc
0.856748 0.445533 0.292088 0.047242 0.015686 0.45098 0.568627 Xa
(Caribbean Blue)
Pc
0.765591 0.163882 0.12604 0 0 0.627451 0.776471 Xa
(Mediterranean Blue)
Pc
0.874418 0.622553 0 0 0 0.376471 0.713726 Xa
(Aloha Blue)
Pc
0.85742 0.723751 0 0 0 0.235294 1 Xa
(Black Light Blue)
Pc
0.88397 0.770108 0 0 0 0 1 Xa
(Pure Blue)
Pc
0.883452 0.832486 0 0 0.133333 0.062745 0.823529 Xa
(Sapphire Blue)
Pc
0.847227 0.839261 0 0 0.258824 0.062745 0.823529 Xa
(Tanzanite)
Pc
0.799252 0.855283 0 0 0.364706 0.062745 0.823529 Xa
(Brilliant Purple)
Pc
0.707027 0.862272 0 0 0.509804 0.062745 0.823529 Xa
(Violet)
Pc
0.572015 0.853971 0 0 0.670588 0.062745 0.823529 Xa
(Purple Orchid)
Pc
0.336126 0.865263 0 0 0.815686 0.062745 0.694118 Xa
(Fuschia)
Pc
0.807645 0.671321 0.396979 0.292607 0.215686 0.27451 0.364706 Xa
(R=55 G=70 B=93)
Pc
0.058961 0.042023 0.040009 0 0.94902 0.94902 0.94902 Xa
(R=242 G=242 B=2421)
Pc
0.475959 0.009796 0.927825 0 0.615686 0.752941 0.180392 Xa
(R=157 G=192 B=46)
Pc
0.603967 0.245365 0.998627 0.046723 0.466667 0.576471 0.141176 Xa
(R=119 G=147 B=36)
Pc
1 0.924468 0.417426 0.598321 0.019608 0.101961 0.215686 Xa
(R=5 G=26 B=55)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
*u
0 O
0.854276 0.232395 1 0.094697 0 0.494118 0 Xa
0 J 0 j 1 w 10 M []0 d1 XR
747.7568 -336.6167 m
774.7246 -336.6167 801.7246 -336.6167 828.709 -336.6167 c
855.6924 -336.6167 882.709 -336.6167 909.7236 -336.6167 C
914.5488 -344.0322 919.9844 -352.3823 926.1377 -361.8345 c
933.1934 -372.6689 941.3486 -385.2065 950.8779 -399.835 C
910.1328 -399.835 869.3877 -399.835 828.6904 -399.835 c
787.9941 -399.835 747.2744 -399.835 706.6016 -399.835 C
716.1289 -385.2065 724.2861 -372.668 731.3467 -361.8286 c
737.502 -352.3755 742.9365 -344.0259 747.7568 -336.6167 C
747.7568 -336.6167 L
f
948.5547 -461.166 m
949.0146 -461.8726 L
949.6396 -462.8286 950.2617 -463.7881 950.8779 -464.7305 C
949.4375 -464.7305 948.0449 -464.7305 946.6543 -464.7305 C
907.3262 -464.7305 867.9961 -464.7305 828.6924 -464.7305 c
789.3877 -464.7305 750.0596 -464.7305 710.7549 -464.7305 C
709.3633 -464.7305 707.9697 -464.7305 706.6016 -464.7305 C
707.2197 -463.7881 707.8428 -462.8345 708.4639 -461.8799 C
708.9297 -461.166 L
710.7549 -461.166 L
750.0674 -461.166 789.3809 -461.166 828.6924 -461.166 C
868.0127 -461.166 907.334 -461.166 946.6543 -461.166 C
948.5547 -461.166 L
948.5547 -461.166 L
f
948.5547 -403.48 m
949.0146 -404.187 L
949.6396 -405.1426 950.2617 -406.103 950.8779 -407.0449 C
949.4375 -407.0449 948.0449 -407.0449 946.6543 -407.0449 C
907.3262 -407.0449 867.9961 -407.0449 828.6924 -407.0449 C
789.3877 -407.0449 750.0596 -407.0449 710.7549 -407.0449 C
709.3633 -407.0449 707.9697 -407.0449 706.6016 -407.0449 C
707.2197 -406.103 707.8428 -405.1489 708.4639 -404.1934 C
708.9297 -403.48 L
710.7549 -403.48 l
750.0674 -403.48 789.3809 -403.48 828.6924 -403.48 c
868.0127 -403.48 907.334 -403.48 946.6543 -403.48 c
948.5547 -403.48 L
948.5547 -403.48 L
f
948.5547 -410.6895 m
949.0146 -411.3979 L
949.6396 -412.3525 950.2617 -413.3135 950.8779 -414.2554 C
949.4375 -414.2554 948.0449 -414.2554 946.6543 -414.2554 C
907.3262 -414.2554 867.9961 -414.2554 828.6924 -414.2554 C
789.3877 -414.2554 750.0596 -414.2554 710.7549 -414.2554 C
709.3633 -414.2554 707.9697 -414.2554 706.6016 -414.2554 C
707.2197 -413.3135 707.8428 -412.3589 708.4639 -411.4038 C
708.9297 -410.6895 L
710.7549 -410.6895 L
750.0674 -410.6895 789.3809 -410.6895 828.6924 -410.6895 C
868.0127 -410.6895 907.334 -410.6895 946.6543 -410.6895 C
948.5547 -410.6895 L
948.5547 -410.6895 L
f
948.5527 -417.9004 m
949.0146 -418.6094 L
949.6396 -419.564 950.2617 -420.5249 950.8779 -421.4668 C
949.4375 -421.4668 948.0449 -421.4668 946.6543 -421.4668 C
907.3262 -421.4668 867.9961 -421.4668 828.6924 -421.4668 C
789.3877 -421.4668 750.0596 -421.4668 710.7549 -421.4668 C
709.3633 -421.4668 707.9697 -421.4668 706.6016 -421.4668 C
707.2197 -420.5249 707.8428 -419.5708 708.4639 -418.6157 C
708.9297 -417.9004 L
710.7549 -417.9004 L
750.0674 -417.9004 789.3809 -417.9004 828.6924 -417.9004 C
868.0127 -417.9004 907.334 -417.9004 946.6543 -417.9004 C
948.5527 -417.9004 L
948.5527 -417.9004 L
f
948.5547 -425.1118 m
949.0146 -425.8203 L
949.6396 -426.7734 950.2617 -427.7349 950.8779 -428.6768 C
949.4375 -428.6768 948.0449 -428.6768 946.6543 -428.6768 C
907.3262 -428.6768 867.9961 -428.6768 828.6924 -428.6768 C
789.3877 -428.6768 750.0596 -428.6768 710.7549 -428.6768 C
709.3633 -428.6768 707.9697 -428.6768 706.6016 -428.6768 C
707.2197 -427.7349 707.8428 -426.7813 708.4639 -425.8262 C
708.9297 -425.1118 L
710.7549 -425.1118 L
750.0674 -425.1118 789.3809 -425.1118 828.6924 -425.1118 C
868.0127 -425.1118 907.334 -425.1118 946.6543 -425.1118 C
948.5547 -425.1118 L
948.5547 -425.1118 L
f
948.5547 -432.3223 m
949.0146 -433.0308 L
949.6396 -433.9844 950.2617 -434.9463 950.8779 -435.8877 C
949.4375 -435.8877 948.0449 -435.8877 946.6543 -435.8877 C
907.3262 -435.8877 867.9961 -435.8877 828.6924 -435.8877 C
789.3877 -435.8877 750.0596 -435.8877 710.7549 -435.8877 C
709.3633 -435.8877 707.9697 -435.8877 706.6016 -435.8877 C
707.2197 -434.9463 707.8428 -433.9912 708.4639 -433.0361 C
708.9297 -432.3223 L
710.7549 -432.3223 L
750.0674 -432.3223 789.3809 -432.3223 828.6924 -432.3223 C
868.0127 -432.3223 907.334 -432.3223 946.6543 -432.3223 C
948.5547 -432.3223 L
948.5547 -432.3223 L
f
948.5547 -439.5322 m
949.0146 -440.2407 L
949.6396 -441.1958 950.2617 -442.1567 950.8779 -443.0986 C
949.4375 -443.0986 948.0449 -443.0986 946.6543 -443.0986 C
907.3262 -443.0986 867.9961 -443.0986 828.6924 -443.0986 C
789.3877 -443.0986 750.0596 -443.0986 710.7549 -443.0986 C
709.3633 -443.0986 707.9697 -443.0986 706.6016 -443.0986 C
707.2197 -442.1567 707.8428 -441.2017 708.4639 -440.2471 C
708.9297 -439.5322 L
710.7549 -439.5322 L
750.0674 -439.5322 789.3809 -439.5322 828.6924 -439.5322 C
868.0127 -439.5322 907.334 -439.5322 946.6543 -439.5322 C
948.5547 -439.5322 L
948.5547 -439.5322 L
f
948.5547 -446.7437 m
949.0146 -447.4521 L
949.6396 -448.4063 950.2617 -449.3677 950.8779 -450.3101 C
949.4375 -450.3101 948.0449 -450.3101 946.6543 -450.3101 C
907.3262 -450.3101 867.9961 -450.3101 828.6924 -450.3101 C
789.3877 -450.3101 750.0596 -450.3101 710.7549 -450.3101 C
709.3633 -450.3101 707.9697 -450.3101 706.6016 -450.3101 C
707.2197 -449.3677 707.8428 -448.4131 708.4639 -447.458 C
708.9297 -446.7437 L
710.7549 -446.7437 L
750.0674 -446.7437 789.3809 -446.7437 828.6924 -446.7437 C
868.0127 -446.7437 907.334 -446.7437 946.6543 -446.7437 C
948.5547 -446.7437 L
948.5547 -446.7437 L
f
948.5547 -453.9546 m
949.0146 -454.6636 L
949.6396 -455.6172 950.2617 -456.5781 950.8779 -457.5205 C
949.4375 -457.5205 948.0449 -457.5205 946.6543 -457.5205 C
907.3262 -457.5205 867.9961 -457.5205 828.6924 -457.5205 C
789.3877 -457.5205 750.0596 -457.5205 710.7549 -457.5205 C
709.3633 -457.5205 707.9697 -457.5205 706.6016 -457.5205 C
707.2197 -456.5781 707.8428 -455.624 708.4639 -454.6694 C
708.9297 -453.9546 L
710.7549 -453.9546 L
750.0674 -453.9546 789.3809 -453.9546 828.6924 -453.9546 C
868.0127 -453.9546 907.334 -453.9546 946.6543 -453.9546 C
948.5547 -453.9546 L
948.5547 -453.9546 L
f
1 D
771.0771 -356.8657 m
766.8213 -356.8657 762.3975 -358.9868 761.1143 -361.8286 c
759.8281 -364.6699 762.415 -367.1577 766.9727 -367.1577 c
771.5332 -367.1577 776.1035 -364.6699 777.0859 -361.8286 c
778.0664 -358.9868 775.332 -356.8657 771.0771 -356.8657 c
771.0771 -356.8657 l
f
886.3506 -356.8716 m
882.0938 -356.8716 879.3604 -358.9834 880.3398 -361.8286 c
881.3184 -364.6729 885.8887 -367.1577 890.4473 -367.1577 c
895.0078 -367.1577 897.5938 -364.6699 896.3125 -361.8286 c
895.0283 -358.9868 890.6064 -356.8716 886.3506 -356.8716 c
886.3506 -356.8716 l
f
816.1582 -367.3535 m
813.8389 -369.6543 811.4492 -372.0313 808.9863 -374.4849 C
811.4531 -376.3237 814.1543 -377.707 817.042 -378.6123 c
819.96 -379.5278 823.2129 -380.0098 826.7734 -380.0479 C
826.7549 -381.5015 826.7373 -382.9746 826.7207 -384.4736 C
826.7207 -384.4736 L
828.3809 -384.4736 830.0635 -384.4736 831.7432 -384.4736 C
832.4609 -384.4736 833.2012 -384.4736 833.9414 -384.4736 C
833.8945 -382.8535 833.8447 -381.2607 833.7979 -379.7065 C
838.0605 -379.1187 841.46 -377.7808 843.9619 -375.7231 c
846.7891 -373.395 847.9541 -370.5581 847.5547 -367.2646 c
847.3857 -365.8672 846.9238 -364.6162 846.1738 -363.5024 c
845.4277 -362.3984 844.4238 -361.4658 843.2021 -360.7026 c
841.3857 -359.5693 837.7559 -358.5596 832.3398 -357.6489 c
832.1885 -357.6245 832.0547 -357.5879 831.9209 -357.5674 c
829.4404 -357.165 827.7793 -356.7446 826.9219 -356.2964 c
826.1016 -355.8667 825.6885 -355.2778 825.7031 -354.5518 c
825.7168 -353.8564 826.1865 -353.2866 827.1299 -352.8564 c
828.0625 -352.4326 829.2715 -352.2261 830.8027 -352.2261 c
832.2793 -352.2261 833.7803 -352.4033 835.2939 -352.7754 c
836.8145 -353.1489 838.3027 -353.6919 839.7783 -354.438 C
840.9697 -352.6045 842.1318 -350.8213 843.2646 -349.0776 C
841.5273 -348.4126 839.7822 -347.8994 838.0605 -347.5273 c
836.334 -347.1548 834.6006 -346.9214 832.8438 -346.8145 C
832.8027 -346.0229 832.7617 -345.2329 832.7354 -344.4614 C
831.4473 -344.4614 830.1729 -344.4614 828.8965 -344.4614 C
828.3301 -344.4614 827.7617 -344.4614 827.1934 -344.4614 C
827.1826 -345.29 827.1729 -346.1309 827.1641 -346.9839 C
823.4639 -347.3579 820.459 -348.1685 818.166 -349.4502 c
815.4473 -350.9688 813.9521 -352.9844 813.6816 -355.5635 c
813.4561 -357.7188 814.252 -359.4653 816.1514 -360.7725 c
818.0723 -362.0947 821.5449 -363.2349 826.626 -364.1416 c
830.0098 -364.7461 832.1904 -365.332 833.1445 -365.9121 c
834.123 -366.5078 834.6406 -367.3472 834.6816 -368.4531 c
834.7178 -369.4834 834.1787 -370.3608 833.0234 -371.0645 c
831.8584 -371.77 830.3643 -372.126 828.5732 -372.126 c
826.3457 -372.126 824.168 -371.7217 822.0879 -370.9121 c
820.043 -370.1177 818.0508 -368.9209 816.1582 -367.3535 C
816.1582 -367.3535 L
f
840.6133 -341.3584 m
846.9941 -342.7427 852.8174 -345.2471 857.3604 -348.5835 c
862.1406 -352.0923 865.6494 -356.4102 867.0361 -361.8286 c
868.4238 -367.2456 867.1436 -373.0488 863.5225 -377.9487 c
859.6748 -383.1572 853.2451 -387.4819 845.084 -390.0366 C
857.1689 -390.0366 869.2773 -390.0366 881.3623 -390.0366 c
893.4473 -390.0366 905.5791 -390.0366 917.6855 -390.0366 C
915.0176 -384.7065 918.5195 -380.5723 925.3145 -380.5723 C
921.4463 -373.8267 917.873 -367.5981 914.5664 -361.8345 c
911.502 -356.4917 908.6406 -351.5044 905.9727 -346.8516 C
900.5391 -346.8516 894.8232 -344.3296 893.3389 -341.3584 C
884.5459 -341.3584 875.7344 -341.3584 866.959 -341.3584 c
858.1816 -341.3584 849.3877 -341.3584 840.6133 -341.3584 C
840.6133 -341.3584 L
f
812.3252 -390.0366 m
804.1406 -387.4819 797.7139 -383.1572 793.8711 -377.9487 c
790.2539 -373.0488 789 -367.2456 790.3887 -361.8286 c
791.7783 -356.4102 795.2686 -352.0879 800.0518 -348.5776 c
804.5977 -345.2417 810.4229 -342.7363 816.8213 -341.3584 C
808.0283 -341.3584 799.2188 -341.3545 790.4414 -341.3521 c
781.667 -341.3491 772.873 -341.3521 764.0957 -341.3521 C
762.6113 -344.3232 756.8945 -346.8516 751.4609 -346.8457 C
748.7891 -351.4985 745.9297 -356.4878 742.8574 -361.8345 c
739.5508 -367.5942 735.9717 -373.8267 732.0986 -380.5723 C
738.8936 -380.5723 742.3936 -384.7065 739.7217 -390.0366 C
751.8066 -390.0366 763.915 -390.0366 776 -390.0366 c
788.085 -390.0366 800.2168 -390.0366 812.3252 -390.0366 C
f
*U
*u
0 D
53.7178 -101.8931 m
160.772 -101.8931 L
211.7056 -76.2119 L
216.752 -73.6689 222.0435 -72.436 227.3335 -72.5161 C
232.6567 -72.5962 237.9194 -73.9819 242.8765 -76.6704 C
299.0034 -107.1118 L
306.8516 -107.1118 L
306.8516 -97.4434 L
306.8516 -93.2041 L
311.0908 -93.2041 L
339.4375 -93.2041 L
343.6768 -93.2041 L
343.6768 -97.4434 L
343.6768 -182.3896 L
343.6768 -186.6294 L
339.4375 -186.6294 L
311.0908 -186.6294 L
306.8516 -186.6294 L
306.8516 -182.3896 L
306.8516 -173.4712 L
299.8999 -173.4712 L
291.6514 -177.9932 280.9951 -181.0503 269.6387 -181.0503 C
261.4595 -181.0503 252.8887 -179.4761 244.5488 -175.7383 C
244.5488 -205.9448 L
53.7178 -205.9448 L
53.7178 -101.8931 L
53.7178 -101.8931 L
f
1 D
179.5586 -101.8931 m
173.9531 -104.7183 L
200.3613 -104.7183 L
207.603 -104.7183 214.1753 -107.6709 218.9355 -112.4297 C
218.9468 -112.4419 L
218.9585 -112.4531 L
218.9692 -112.4648 L
218.9819 -112.4766 L
218.9941 -112.4878 L
219.0171 -112.5127 L
219.0288 -112.5244 L
219.04 -112.5356 L
219.0522 -112.5488 L
219.064 -112.5601 L
219.0752 -112.5718 L
219.0869 -112.584 L
219.0991 -112.5957 L
219.1104 -112.6069 L
219.1221 -112.6196 L
219.1338 -112.6313 L
219.144 -112.6431 L
219.1563 -112.6553 L
219.1572 -112.6553 L
219.168 -112.6665 L
219.1802 -112.6787 L
219.1914 -112.6909 L
219.2026 -112.7021 L
219.2144 -112.7144 L
219.2383 -112.7388 L
219.25 -112.751 L
219.2603 -112.7632 L
219.2729 -112.7749 L
219.2837 -112.7856 L
219.2954 -112.7979 L
219.3071 -112.8105 L
219.3188 -112.8223 L
219.3291 -112.834 L
219.3413 -112.8467 L
219.353 -112.8579 L
219.3643 -112.8701 L
219.3755 -112.8818 L
219.3765 -112.8828 L
219.3867 -112.894 L
219.3989 -112.9072 L
219.4102 -112.9185 L
219.4224 -112.9302 L
219.4341 -112.9429 L
219.4438 -112.9551 L
219.4561 -112.9673 L
219.4678 -112.979 L
219.4785 -112.9907 L
219.4902 -113.0029 L
219.5024 -113.0151 L
219.5122 -113.0278 L
219.5239 -113.0391 L
219.5361 -113.0518 L
219.5479 -113.064 L
219.5586 -113.0752 L
219.5698 -113.0884 L
219.5811 -113.1006 L
219.5923 -113.1108 L
219.5923 -113.1123 L
219.604 -113.125 L
219.6162 -113.1367 L
219.6265 -113.1494 L
219.6382 -113.1606 L
219.6489 -113.1738 L
219.6602 -113.1851 L
219.6714 -113.1982 L
220.2251 -113.7969 220.7524 -114.4248 221.2495 -115.0742 C
221.3262 -115.1743 L
221.4014 -115.2759 L
221.4736 -115.3711 L
221.4775 -115.3774 L
221.5537 -115.479 L
221.6025 -115.5454 L
221.6274 -115.5815 L
221.7021 -115.6836 L
221.7754 -115.7866 L
221.7856 -115.8013 L
221.8496 -115.8906 L
221.9224 -115.9932 L
221.9683 -116.0605 L
221.9946 -116.0977 L
222.0669 -116.2026 L
222.1372 -116.3066 L
222.1475 -116.3218 L
222.2075 -116.4126 L
222.2788 -116.5181 L
222.3232 -116.5854 L
222.3477 -116.6235 L
222.418 -116.7295 L
222.4868 -116.8359 L
222.4961 -116.8506 L
222.6226 -117.0508 L
222.666 -117.1177 L
222.6909 -117.1582 L
222.7568 -117.2661 L
222.8228 -117.374 L
222.8315 -117.3887 L
222.8887 -117.4829 L
222.9546 -117.5913 L
222.9956 -117.6602 L
223.0186 -117.7012 L
223.084 -117.8101 L
223.147 -117.9199 L
223.1548 -117.9336 L
223.2739 -118.1411 L
223.313 -118.2104 L
223.335 -118.252 L
223.3975 -118.3628 L
223.4575 -118.4756 L
223.4668 -118.4888 L
223.519 -118.5874 L
223.5796 -118.6992 L
223.6167 -118.7695 L
223.6387 -118.811 L
223.6978 -118.9238 L
223.7559 -119.0381 L
223.7637 -119.0508 L
223.8145 -119.1514 L
223.8721 -119.2661 L
223.9067 -119.335 L
223.9292 -119.3799 L
223.9854 -119.4937 L
224.041 -119.6084 L
224.0469 -119.6221 L
224.0967 -119.7246 L
224.1509 -119.8394 L
224.2046 -119.9556 L
224.2583 -120.0713 L
224.312 -120.1875 L
224.3188 -120.2007 L
224.3643 -120.3032 L
224.416 -120.4204 L
224.4478 -120.4912 L
224.4673 -120.5386 L
224.519 -120.6553 L
224.5703 -120.7734 L
224.5752 -120.7856 L
224.6191 -120.8906 L
224.668 -121.0098 L
224.6982 -121.0815 L
224.7168 -121.1284 L
224.7651 -121.2471 L
224.8125 -121.3657 L
224.8184 -121.3784 L
224.8599 -121.4854 L
224.9067 -121.606 L
224.9341 -121.6772 L
224.9521 -121.7256 L
224.9976 -121.8462 L
225.042 -121.9668 L
225.0469 -121.979 L
225.0854 -122.0879 L
225.1294 -122.2095 L
226.1113 -124.9614 226.6455 -127.9209 226.6455 -131.0024 C
226.6455 -135.7314 L
226.6455 -139.9702 L
222.4063 -139.9702 L
186.0845 -139.9702 L
183.8203 -139.9702 L
180.3857 -139.9702 177.2583 -141.3809 174.9893 -143.6489 C
172.7197 -145.9175 171.311 -149.0459 171.311 -152.481 C
171.311 -152.4819 L
171.311 -155.917 172.7197 -159.0444 174.9883 -161.3145 C
177.2573 -163.584 180.3857 -164.9927 183.8203 -164.9927 C
186.8511 -164.9927 L
233.2441 -164.9927 L
241.1001 -164.9927 L
242.2168 -164.9927 L
243.2192 -165.5723 L
243.2407 -165.5835 L
243.2607 -165.5957 L
243.2817 -165.6069 L
243.3027 -165.6191 L
243.3237 -165.6313 L
243.3438 -165.6431 L
243.3647 -165.6553 L
243.3857 -165.666 L
243.4063 -165.6792 L
243.4277 -165.6904 L
243.4478 -165.7021 L
243.4688 -165.7144 L
243.4897 -165.7261 L
243.5093 -165.7373 L
243.5308 -165.75 L
243.5508 -165.7617 L
243.5718 -165.7734 L
243.5933 -165.7856 L
243.6133 -165.7969 L
243.624 -165.8022 L
243.6348 -165.8081 L
243.6553 -165.8203 L
243.6758 -165.832 L
243.6973 -165.8438 L
243.7168 -165.855 L
243.7378 -165.8672 L
243.7588 -165.8784 L
243.7793 -165.8901 L
243.7998 -165.9023 L
243.8208 -165.9136 L
243.8423 -165.9253 L
243.8628 -165.937 L
243.8828 -165.9482 L
243.9048 -165.9604 L
243.9248 -165.9712 L
243.9458 -165.9824 L
243.9663 -165.9941 L
243.9873 -166.0063 L
244.0078 -166.0181 L
244.0283 -166.0298 L
244.0293 -166.0298 L
244.0498 -166.0405 L
244.0698 -166.0518 L
244.0918 -166.0635 L
244.1118 -166.0742 L
244.1328 -166.0874 L
244.1543 -166.0977 L
244.1738 -166.1094 L
244.1958 -166.1211 L
244.2153 -166.1323 L
244.2368 -166.1436 L
244.2568 -166.1553 L
244.2788 -166.1665 L
244.2998 -166.1772 L
244.3203 -166.1895 L
244.3408 -166.2012 L
244.3608 -166.2114 L
244.3828 -166.2236 L
244.4653 -166.2686 L
244.4868 -166.2798 L
244.5073 -166.2905 L
244.5293 -166.3022 L
244.5488 -166.313 L
252.7725 -170.7534 261.4126 -172.5713 269.6387 -172.5713 C
279.9561 -172.5713 289.5337 -169.7231 296.7236 -165.5723 C
297.7275 -164.9927 L
298.8267 -164.9927 L
306.8516 -164.9927 L
306.8516 -115.5908 L
297.9297 -115.5908 L
296.856 -115.5908 L
295.9097 -115.0771 L
238.8359 -84.1211 L
235.061 -82.0752 231.1343 -81.0195 227.2349 -80.9614 C
223.3052 -80.9028 219.3369 -81.8369 215.5146 -83.7632 C
179.5586 -101.8931 L
179.5586 -101.8931 L
f
200.3613 -113.1982 m
163.1602 -113.1982 L
171.3223 -116.7217 178.1577 -123.2319 182.5981 -131.5283 C
183.0034 -131.5044 183.4111 -131.4922 183.8203 -131.4922 C
218.167 -131.4922 L
218.167 -131.0024 L
218.167 -126.103 216.1665 -121.6514 212.9395 -118.4248 C
209.7139 -115.1987 205.2622 -113.1982 200.3613 -113.1982 C
200.3613 -113.1982 L
f
183.9927 -173.4712 m
179.6636 -183.1196 172.2319 -190.7222 163.1611 -194.6401 C
221.1025 -194.6401 L
221.1025 -187.9624 226.5669 -182.498 233.2441 -182.498 C
233.2441 -173.4712 L
183.9927 -173.4712 L
183.9927 -173.4712 L
f
168.832 -167.1455 m
165.125 -163.3564 162.8311 -158.1758 162.8311 -152.4819 C
162.8311 -152.481 L
162.8311 -151.7153 162.873 -150.959 162.9541 -150.2144 C
160.7407 -148.9048 157.5073 -147.6758 153.2603 -146.5347 C
152.7783 -146.3823 L
149.9507 -145.647 148.062 -144.8613 147.0864 -144.0503 C
146.1221 -143.2373 145.6406 -142.1475 145.6406 -140.7783 c
145.6406 -139.4478 146.1855 -138.3701 147.2764 -137.5337 C
148.3652 -136.7095 149.7993 -136.2915 151.5869 -136.2915 c
153.3364 -136.2915 155.0977 -136.6465 156.8594 -137.3682 c
158.6221 -138.0918 160.3213 -139.1431 161.9814 -140.5625 C
166.6978 -129.9775 L
164.6694 -128.6216 162.6157 -127.5439 160.5366 -126.7695 C
158.4575 -125.9844 156.354 -125.4902 154.1978 -125.2612 C
154.1602 -120.1782 L
149.3555 -120.1782 L
147.2368 -120.1782 L
147.2368 -125.6255 L
142.7051 -126.4019 139.1001 -128.1079 136.4238 -130.751 C
133.3433 -133.8076 131.7979 -137.7739 131.7979 -142.6807 c
131.7979 -146.6616 132.9116 -149.793 135.1558 -152.0864 C
137.3999 -154.3691 141.293 -156.2832 146.8711 -157.8169 C
150.5342 -158.8062 152.8794 -159.7822 153.9067 -160.7329 c
154.9326 -161.6831 155.4526 -163.0405 155.4526 -164.8018 c
155.4526 -166.4136 154.8447 -167.7549 153.6143 -168.834 C
152.3838 -169.9111 150.8511 -170.4429 148.9863 -170.4429 c
146.6919 -170.4429 144.4365 -169.8359 142.2422 -168.606 C
140.0625 -167.3755 137.895 -165.5254 135.7651 -163.0518 C
129.0464 -173.9424 L
131.7715 -176.5918 134.5986 -178.5439 137.5522 -179.8115 C
140.4937 -181.0669 143.7251 -181.7271 147.2368 -181.7764 C
147.2368 -187.6582 L
147.2378 -187.6582 L
152.043 -187.6582 L
154.1602 -187.6582 L
154.1602 -181.314 L
158.394 -180.5039 161.8589 -178.6436 164.543 -175.7305 C
166.7617 -173.3115 168.1919 -170.4502 168.832 -167.1455 C
168.832 -167.1455 L
f
323.1367 -170.2021 m
323.1367 -173.0518 325.4468 -175.3613 328.2964 -175.3613 c
331.146 -175.3613 333.4556 -173.0518 333.4556 -170.2021 c
333.4556 -167.3521 331.146 -165.042 328.2964 -165.042 c
325.4468 -165.042 323.1367 -167.3521 323.1367 -170.2021 c
323.1367 -170.2021 l
f
335.1987 -178.1509 m
335.1987 -101.6826 L
315.3296 -101.6826 L
315.3296 -178.1509 L
335.1987 -178.1509 L
335.1987 -178.1509 L
f
87.1802 -145.6201 m
82.5972 -145.6201 78.8804 -149.335 78.8804 -153.918 c
78.8804 -158.502 82.5972 -162.2178 87.1802 -162.2178 c
91.7642 -162.2178 95.4795 -158.502 95.4795 -153.918 c
95.4795 -149.335 91.7642 -145.6201 87.1802 -145.6201 c
87.1802 -145.6201 l
f
135.1055 -194.6401 m
120.5054 -188.335 110.1479 -172.4819 110.1479 -153.918 c
110.1479 -135.3555 120.5063 -119.5015 135.1064 -113.1982 C
77.1641 -113.1982 L
77.1641 -119.8755 71.7012 -125.3384 65.0229 -125.3384 C
65.0229 -182.498 L
71.7012 -182.498 77.1641 -187.9624 77.1641 -194.6401 C
135.1055 -194.6401 L
f
*U
*u
0 D
805.2324 -71.249 m
846.7383 -71.249 l
847.8662 -71.249 848.792 -72.1729 848.792 -73.3022 c
848.792 -82.5425 l
848.792 -83.6724 847.8662 -84.5957 846.7383 -84.5957 c
805.2324 -84.5957 l
804.1035 -84.5957 803.1787 -83.6724 803.1787 -82.5425 c
803.1787 -73.3022 l
803.1787 -72.1729 804.1035 -71.249 805.2324 -71.249 c
805.2324 -71.249 l
f
1 D
805.2324 -67.3628 m
812.1494 -67.3628 819.0693 -67.3628 825.9844 -67.3628 C
832.9043 -67.3628 839.8213 -67.3628 846.7393 -67.3628 C
849.9414 -64.9194 851.1973 -57.3193 853.126 -53.627 c
853.3398 -53.2158 l
855.0117 -50.0137 857.0381 -47.147 859.1787 -44.2368 c
860.2246 -42.8115 864.4619 -37.9863 864.6875 -37.0591 c
865.1797 -35.0488 854.918 -33.5684 853.5576 -33.3486 c
851.3711 -32.9951 846.6377 -32.0781 844.6357 -32.2334 c
840.1396 -32.5801 836.4736 -47.9746 835.3965 -51.855 C
835.248 -43.4766 838.9375 -33.5244 838.8477 -32.5703 c
838.627 -30.2651 827.8779 -30.9648 825.9844 -31.0332 C
824.0938 -30.9648 813.3438 -30.2651 813.125 -32.5703 c
813.0342 -33.5244 816.7217 -43.4766 816.5742 -51.855 C
815.498 -47.9746 811.8301 -32.5801 807.3359 -32.2334 c
805.334 -32.0781 800.5977 -32.9951 798.4131 -33.3486 c
797.0547 -33.5684 786.7891 -35.0488 787.2832 -37.0591 c
787.5088 -37.9863 791.748 -42.8115 792.7939 -44.2368 c
794.9307 -47.147 796.9609 -50.0137 798.6309 -53.2158 c
798.8447 -53.627 l
800.7734 -57.3193 802.0293 -64.9194 805.2324 -67.3628 C
805.2324 -67.3628 L
f
0 D
805.2324 -88.4829 m
812.1494 -88.4829 819.0693 -88.4829 825.9844 -88.4829 C
832.9043 -88.4829 839.8213 -88.4829 846.7393 -88.4829 C
856.2344 -95.1274 865.332 -101.4565 872.7324 -108.8564 c
890.2813 -126.4058 895.1699 -141.3706 891.2617 -177.3325 c
889.3867 -194.5815 897.2217 -213.6025 900.6074 -219.6396 c
913.4678 -242.5649 894.6494 -247.6338 881.9873 -247.5752 c
860.793 -247.4761 847.1816 -247.5752 825.9844 -247.5752 C
804.791 -247.5752 791.1768 -247.4761 769.9824 -247.5752 c
757.3213 -247.6338 738.502 -242.5649 751.3623 -219.6396 c
754.749 -213.6025 762.584 -194.5815 760.71 -177.3325 c
756.8008 -141.3706 761.6895 -126.4058 779.2383 -108.8564 c
786.6387 -101.4565 795.7383 -95.1274 805.2324 -88.4829 C
805.2324 -88.4829 L
f
1 D
804.1055 -182.978 m
793.1104 -200.8008 L
797.5693 -205.1377 802.1973 -208.332 807.0322 -210.4063 C
811.8457 -212.4604 817.1348 -213.5391 822.8809 -213.6216 C
822.8809 -223.2471 L
822.8828 -223.2471 L
830.7461 -223.2471 L
834.2109 -223.2471 L
834.2109 -212.8643 L
841.1426 -211.5396 846.8105 -208.4937 851.2031 -203.7246 C
856.3066 -198.166 858.8594 -191.1733 858.8594 -182.751 c
858.8594 -179.0571 858.2988 -175.6958 857.2002 -172.667 C
856.0791 -169.6177 854.4609 -167.0034 852.3662 -164.8242 C
849.2529 -161.5889 842.6973 -158.6211 832.7373 -155.9443 C
831.9502 -155.6953 L
827.3232 -154.4927 824.2324 -153.207 822.6338 -151.8784 C
821.0566 -150.5493 820.2695 -148.7661 820.2695 -146.5254 c
820.2695 -144.3462 821.1621 -142.5825 822.9463 -141.2134 C
824.7285 -139.8657 827.0752 -139.1792 829.999 -139.1792 c
832.8633 -139.1792 835.7461 -139.7622 838.6309 -140.9438 c
841.5146 -142.1265 844.2939 -143.8477 847.0117 -146.1719 C
854.7324 -128.8477 L
851.4111 -126.6274 848.0508 -124.8652 844.6484 -123.5991 C
841.2441 -122.3125 837.8008 -121.5034 834.2725 -121.1304 C
834.2109 -112.8096 L
826.3477 -112.8096 L
822.8809 -112.8096 L
822.8809 -121.7266 L
815.4639 -122.9956 809.5645 -125.7886 805.1865 -130.1138 C
800.1445 -135.1143 797.6133 -141.6074 797.6133 -149.6362 c
797.6133 -156.1509 799.4395 -161.2764 803.1104 -165.0317 C
806.7852 -168.7666 813.1523 -171.8984 822.2813 -174.4092 C
828.2773 -176.0283 832.1172 -177.6245 833.7979 -179.1821 C
835.4775 -180.7378 836.3271 -182.9575 836.3271 -185.8403 c
836.3271 -188.4766 835.333 -190.6748 833.3184 -192.4395 C
831.3057 -194.2017 828.7969 -195.0742 825.7461 -195.0742 c
821.9912 -195.0742 818.2988 -194.0786 814.709 -192.0664 C
811.1416 -190.0527 807.5928 -187.0244 804.1055 -182.978 C
f
*U
*u
0 D
274.5176 -694.333 m
274.5176 -702.7451 L
274.3564 -704.4375 L
274.0405 -706.1289 L
272.9087 -710.1475 271.355 -712.8281 268.75 -716.1055 C
256.4214 -729.6611 236.7993 -734.6387 219.1626 -736.3047 C
212.666 -736.835 206.5254 -736.9072 200.0166 -736.5186 C
194.7554 -736.1719 188.5308 -735.3564 182.1348 -733.9238 C
185.1396 -731.6064 187.939 -729.0391 190.501 -726.2471 C
190.501 -733.0117 L
191.9458 -733.2334 193.3965 -733.4297 194.8481 -733.5967 C
194.8481 -721.6582 L
194.3843 -721.6074 L
195.3926 -720.2871 196.3501 -718.9268 197.2573 -717.5313 C
198.0361 -717.5957 198.8071 -717.6543 199.5645 -717.7041 C
206.3369 -718.1396 213.04 -718.0908 219.8008 -717.4766 C
237.8486 -715.835 259.3979 -710.1416 272.354 -696.7666 C
272.3813 -696.7412 272.4063 -696.7139 272.4316 -696.6885 C
272.9961 -696.0674 273.561 -695.4463 274.1245 -694.8252 C
274.1748 -694.7646 274.2241 -694.7041 274.272 -694.6426 C
274.5176 -694.333 L
274.5176 -694.333 L
f
1 D
141.8916 -624.9551 m
110.5815 -624.9551 85.1987 -650.3369 85.1987 -681.6475 c
85.1987 -712.9561 110.5815 -738.3408 141.8916 -738.3408 c
173.2021 -738.3408 198.585 -712.9561 198.585 -681.6475 c
198.585 -650.3369 173.2021 -624.9551 141.8916 -624.9551 c
141.8916 -624.9551 l
f
0 D
126.1836 -692.3779 m
128.6885 -695.2832 131.2349 -697.459 133.7964 -698.9043 C
136.3735 -700.3486 139.0234 -701.0635 141.7183 -701.0635 c
143.9106 -701.0635 145.7124 -700.4365 147.1567 -699.1689 c
148.6016 -697.9063 149.3193 -696.3271 149.3193 -694.4326 c
149.3193 -692.3623 148.7056 -690.7705 147.4985 -689.6533 C
146.2925 -688.5352 143.5376 -687.3887 139.2319 -686.2285 C
132.6797 -684.4268 128.105 -682.1748 125.4673 -679.4941 C
122.8325 -676.7979 121.5239 -673.1182 121.5239 -668.4443 c
121.5239 -662.6777 123.3384 -658.0176 126.96 -654.4248 C
130.1055 -651.3223 134.3374 -649.3164 139.665 -648.4023 C
139.665 -642.0029 L
142.1533 -642.0029 L
147.7988 -642.0029 L
147.8433 -647.9775 L
150.374 -648.2432 152.8452 -648.8281 155.2905 -649.75 C
157.7314 -650.6572 160.147 -651.9209 162.5278 -653.5166 C
156.9873 -665.9521 L
155.0376 -664.2842 153.0415 -663.0488 150.9697 -662.2021 C
148.8989 -661.3506 146.8301 -660.9336 144.7749 -660.9336 c
142.6738 -660.9336 140.9922 -661.4268 139.7075 -662.3936 C
138.4272 -663.3779 137.7881 -664.6436 137.7881 -666.208 c
137.7881 -667.8154 138.353 -669.0957 139.4868 -670.0518 C
140.6318 -671.0049 142.8525 -671.9277 146.1758 -672.793 C
146.7407 -672.9717 L
153.8892 -674.8916 158.5952 -677.0215 160.8306 -679.3447 c
162.3364 -680.9092 163.4961 -682.7861 164.3032 -684.9756 C
165.0908 -687.1514 165.4941 -689.5635 165.4941 -692.2168 c
165.4941 -698.2627 163.6602 -703.2813 159.9985 -707.2734 C
156.8423 -710.6982 152.7734 -712.8828 147.7988 -713.835 C
147.7988 -721.2871 L
145.3101 -721.2871 L
139.665 -721.2871 L
139.665 -721.2871 L
139.665 -714.3789 L
135.5371 -714.3193 131.7402 -713.543 128.2847 -712.0723 C
124.8154 -710.5811 121.4917 -708.2861 118.2896 -705.1729 C
126.1836 -692.3779 L
126.1836 -692.3779 L
f
274.5176 -583.1777 m
274.5176 -599.375 L
274.3564 -601.0684 L
274.0405 -602.7617 L
272.9087 -606.7764 271.355 -609.46 268.75 -612.7383 C
256.4214 -626.293 236.7993 -631.2705 219.1626 -632.9355 C
212.666 -633.4678 206.5254 -633.5381 200.0166 -633.1494 C
195.3101 -632.8389 189.8315 -632.1533 184.1494 -630.9854 C
182.6216 -629.708 181.0317 -628.501 179.3911 -627.3662 C
179.9819 -627.5195 180.5757 -627.667 181.1699 -627.8105 C
181.1699 -615.9609 L
179.9873 -615.6885 178.8115 -615.3975 177.6392 -615.085 C
177.6392 -626.1914 L
174.9473 -624.4531 172.1196 -622.9033 169.1787 -621.5645 C
169.1787 -612.4297 L
168.2666 -612.0957 167.3608 -611.7441 166.4609 -611.3818 C
166.4609 -620.4043 L
163.8809 -619.3682 161.2192 -618.4854 158.4912 -617.7803 C
158.4912 -607.5742 L
157.8511 -607.2139 157.2163 -606.8428 156.5894 -606.459 C
156.5894 -617.3174 L
154.7837 -616.9082 152.9502 -616.5732 151.0913 -616.3154 C
146.9263 -612.5283 143.8027 -607.9824 142.3374 -602.5488 C
142.0386 -600.873 L
141.8916 -599.1885 L
141.8916 -582.9922 L
141.6362 -576.8037 144.4873 -570.4951 150.7803 -564.7461 c
159.9312 -556.3828 174.6421 -550.7637 191.0371 -548.4551 c
207.4321 -546.1445 225.5278 -547.1201 241.3882 -551.9492 c
257.249 -556.7783 267.894 -564.543 272.2695 -573.1875 c
273.9116 -576.4287 274.6812 -579.7939 274.5176 -583.1777 C
274.5176 -583.1777 L
f
1 D
257.9194 -607.5742 m
257.9194 -618.8359 L
258.5625 -618.4307 259.1968 -618.0088 259.8208 -617.5723 C
259.8208 -606.4434 L
259.1948 -606.832 258.5596 -607.208 257.9194 -607.5742 C
257.9194 -607.5742 L
f
268.6504 -609.0283 m
268.6504 -599.4531 L
268.2954 -599.8164 267.9331 -600.1729 267.563 -600.5215 C
267.563 -610.498 L
267.937 -610.0156 268.3013 -609.5283 268.6504 -609.0283 C
268.6504 -609.0283 L
f
249.9492 -623.0273 m
249.9492 -611.4268 L
249.0508 -611.7949 248.1436 -612.1455 247.2324 -612.4824 C
247.2324 -624.1514 L
248.1455 -623.7959 249.0508 -623.4209 249.9492 -623.0273 C
249.9492 -623.0273 L
f
238.772 -626.9443 m
238.772 -615.1299 L
237.5991 -615.4404 236.4229 -615.7266 235.2412 -615.998 C
235.2412 -627.8486 L
236.4229 -627.5684 237.6011 -627.2686 238.772 -626.9443 C
238.772 -626.9443 L
f
225.9097 -629.6494 m
225.9097 -617.7314 L
224.4634 -617.9424 223.0146 -618.1299 221.563 -618.293 C
221.563 -630.2295 L
223.0146 -630.0615 224.4644 -629.8691 225.9097 -629.6494 C
225.9097 -629.6494 L
f
210.7837 -630.9248 m
210.7837 -618.9619 L
209.064 -618.9951 207.3428 -618.9971 205.6235 -618.9639 C
205.6235 -630.9287 L
207.3428 -630.9619 209.064 -630.96 210.7837 -630.9248 C
210.7837 -630.9248 L
f
0 D
194.8481 -630.2256 m
193.3965 -630.0596 191.9458 -629.8633 190.501 -629.6416 C
190.501 -617.7227 L
191.9458 -617.9385 193.3965 -618.1279 194.8481 -618.291 C
194.8481 -630.2256 L
194.8481 -630.2256 L
f
1 D
148.8467 -610.5469 m
148.8467 -600.5859 L
148.4775 -600.2354 148.1147 -599.876 147.7598 -599.5088 C
147.7598 -609.0908 L
148.1069 -609.5869 148.4692 -610.0742 148.8467 -610.5469 C
148.8467 -610.5469 L
f
239.3032 -554.8281 m
224.4111 -550.292 207.4844 -549.3906 192.0991 -551.5557 c
184.0977 -552.6826 175.1499 -554.8809 167.2061 -558.5566 C
172.9736 -556.6133 179.2573 -555.1611 185.8101 -554.2393 c
202.2056 -551.9307 220.3008 -552.9053 236.1616 -557.7344 c
252.022 -562.5654 262.667 -570.3281 267.043 -578.9717 c
268.2729 -581.3994 269.0137 -583.8994 269.2373 -586.4209 C
270.2383 -582.5996 269.9155 -578.501 267.7778 -574.2813 c
262.6514 -564.1563 249.6123 -557.9658 239.3032 -554.8281 C
239.3032 -554.8281 L
f
186.0229 -583.125 m
180.854 -584.5996 175.6987 -586.0654 170.5435 -587.5303 C
171.9561 -590.1738 173.9863 -592.4268 176.6299 -594.292 c
179.2642 -596.1523 182.6685 -597.7305 186.814 -599.042 C
185.4644 -600.2783 184.1143 -601.5049 182.7632 -602.7334 C
182.7632 -602.7334 L
184.6719 -603.3145 186.5815 -603.8955 188.4922 -604.4688 C
189.3306 -604.7314 190.1685 -604.9854 191.0059 -605.2402 C
192.4507 -603.9131 193.9097 -602.5869 195.3701 -601.2598 C
200.9746 -602.2842 206.3784 -602.3701 211.563 -601.5127 c
217.6182 -600.5117 222.4229 -598.3965 225.9561 -595.1592 c
227.4995 -593.7451 228.5122 -592.3369 228.9839 -590.9277 c
229.4575 -589.5127 229.3555 -588.1523 228.751 -586.8506 c
227.8496 -584.918 224.3159 -582.3369 218.208 -579.0986 c
218.0464 -579.0117 217.9072 -578.9111 217.7427 -578.8271 c
214.8799 -577.333 213.1548 -576.1592 212.5562 -575.2998 c
211.9595 -574.4414 212.1499 -573.5762 213.085 -572.7207 c
213.9966 -571.8848 215.3989 -571.4063 217.2607 -571.2803 c
219.1392 -571.1523 221.1294 -571.4072 223.2544 -572.0576 c
225.3364 -572.6934 227.2031 -573.5527 228.7974 -574.6445 c
230.3999 -575.7393 231.7007 -577.0195 232.6943 -578.5088 C
236.978 -576.8623 241.2803 -575.2178 245.582 -573.5723 C
244.106 -571.9834 242.3901 -570.5693 240.458 -569.3311 c
238.5088 -568.0801 236.3574 -567.0049 233.9521 -566.0801 C
235.1006 -565.0146 236.2485 -563.9502 237.3989 -562.8799 C
235.4893 -562.2988 233.5786 -561.7168 231.6694 -561.1357 C
230.8315 -560.8818 229.9922 -560.6279 229.1543 -560.3652 C
227.897 -561.5127 226.6538 -562.6494 225.4111 -563.7871 C
219.4819 -562.6338 214.0132 -562.3926 209.0161 -563.083 c
203.2407 -563.8818 198.6831 -565.8213 195.3071 -568.8965 c
192.5659 -571.3965 191.7388 -573.7695 192.8389 -576.0176 c
193.9409 -578.2695 197.2505 -580.8916 202.8384 -583.8613 c
206.5186 -585.8184 208.6465 -587.2764 209.2183 -588.2422 c
209.7954 -589.2139 209.4668 -590.2568 208.2563 -591.3613 c
207.1543 -592.3682 205.5083 -592.9951 203.3042 -593.2275 c
201.1016 -593.459 198.9116 -593.2334 196.689 -592.5566 c
193.9609 -591.7285 191.6836 -590.5293 189.9204 -588.9629 c
188.1606 -587.4004 186.8613 -585.4521 186.0229 -583.125 C
186.0229 -583.125 L
f
0 D
274.5176 -616.8047 m
274.5176 -625.2168 L
274.4634 -625.7803 274.4097 -626.3457 274.3564 -626.9092 C
274.2524 -627.4727 274.1465 -628.0381 274.0405 -628.6006 C
272.9087 -632.6191 271.355 -635.3027 268.75 -638.5771 C
256.4214 -652.1328 236.7993 -657.1104 219.1626 -658.7764 C
213.9829 -659.2012 209.0288 -659.333 203.9346 -659.1719 C
201.3193 -651.9531 197.481 -645.3203 192.6694 -639.5283 C
195.0425 -639.8213 197.3535 -640.0342 199.5645 -640.1777 C
206.3369 -640.6133 213.04 -640.5645 219.8008 -639.9482 C
237.8486 -638.3086 259.3979 -632.6152 272.354 -619.2412 C
272.4316 -619.1621 L
274.1245 -617.2998 L
274.272 -617.1172 L
274.5176 -616.8047 L
274.5176 -616.8047 L
f
1 D
257.9194 -633.416 m
257.9194 -637.168 257.9194 -640.9238 257.9194 -644.6787 C
258.5625 -644.2715 259.1968 -643.8496 259.8208 -643.4141 C
259.8208 -639.7021 259.8208 -635.9922 259.8208 -632.2842 C
259.1948 -632.6738 258.5596 -633.0508 257.9194 -633.416 C
257.9194 -633.416 L
f
268.6504 -634.8711 m
268.6504 -631.6787 268.6504 -628.4873 268.6504 -625.2959 C
268.2954 -625.6592 267.9331 -626.0137 267.563 -626.3623 C
267.563 -629.6885 267.563 -633.0137 267.563 -636.3408 C
267.937 -635.8574 268.3013 -635.3711 268.6504 -634.8711 C
268.6504 -634.8711 L
f
249.9492 -648.8682 m
249.9492 -645.0029 249.9492 -641.1357 249.9492 -637.2686 C
249.0508 -637.6357 248.1436 -637.9863 247.2324 -638.3232 C
247.2324 -642.2129 247.2324 -646.1035 247.2324 -649.9932 C
248.1455 -649.6387 249.0508 -649.2637 249.9492 -648.8682 C
249.9492 -648.8682 L
f
238.772 -652.7861 m
238.772 -648.8477 238.772 -644.9102 238.772 -640.9727 C
237.5991 -641.2832 236.4229 -641.5693 235.2412 -641.8398 C
235.2412 -645.791 235.2412 -649.7412 235.2412 -653.6914 C
236.4229 -653.4111 237.6011 -653.1104 238.772 -652.7861 C
238.772 -652.7861 L
f
225.9097 -655.4912 m
225.9097 -651.5186 225.9097 -647.5459 225.9097 -643.5732 C
224.4634 -643.7852 223.0146 -643.9697 221.563 -644.1318 C
221.563 -648.1113 221.563 -652.0918 221.563 -656.0703 C
223.0146 -655.9033 224.4644 -655.709 225.9097 -655.4912 C
225.9097 -655.4912 L
f
210.7837 -656.7676 m
210.7837 -652.7783 210.7837 -648.79 210.7837 -644.8037 C
209.064 -644.8379 207.3428 -644.8398 205.6235 -644.8057 C
205.6235 -648.7939 205.6235 -652.7822 205.6235 -656.7705 C
207.3428 -656.8027 209.064 -656.8027 210.7837 -656.7676 C
210.7837 -656.7676 L
f
274.5176 -642.6465 m
274.272 -642.959 L
274.2241 -643.0176 274.1748 -643.0791 274.1245 -643.1416 C
273.561 -643.7617 272.9961 -644.3838 272.4316 -645.0049 C
272.4063 -645.0293 272.3813 -645.0557 272.354 -645.082 C
259.3979 -658.4551 237.8486 -664.1514 219.8008 -665.79 C
215.2075 -666.208 210.6426 -666.3652 206.0635 -666.2852 C
206.4087 -667.7266 206.7041 -669.1904 206.9517 -670.668 C
208.229 -670.6787 209.5078 -670.6719 210.7837 -670.6465 C
210.7837 -674.6318 210.7837 -678.623 210.7837 -682.6094 C
209.8081 -682.6309 208.8286 -682.6406 207.8521 -682.6367 C
207.8398 -683.4531 207.8169 -684.2715 207.7764 -685.0801 C
211.5469 -685.0908 215.292 -684.9375 219.1626 -684.6211 C
236.7993 -682.9551 256.4214 -677.9775 268.75 -664.4219 C
271.355 -661.1436 272.9087 -658.4629 274.0405 -654.4453 C
274.1465 -653.8799 274.2524 -653.3164 274.3564 -652.7529 C
274.4097 -652.1895 274.4634 -651.625 274.5176 -651.0615 C
274.5176 -642.6465 L
274.5176 -642.6465 L
f
257.9194 -659.2578 m
257.9194 -663.0127 257.9194 -666.7676 257.9194 -670.5205 C
258.5625 -670.1143 259.1968 -669.6924 259.8208 -669.2568 C
259.8208 -665.5469 259.8208 -661.835 259.8208 -658.127 C
259.1948 -658.5156 258.5596 -658.8926 257.9194 -659.2578 C
257.9194 -659.2578 L
f
268.6504 -660.7119 m
268.6504 -657.5205 268.6504 -654.3311 268.6504 -651.1406 C
268.2954 -651.5029 267.9331 -651.8584 267.563 -652.2051 C
267.563 -655.5303 267.563 -658.8555 267.563 -662.1826 C
267.937 -661.7021 268.3013 -661.2119 268.6504 -660.7119 C
268.6504 -660.7119 L
f
0 D
249.9492 -674.7129 m
249.0508 -675.1055 248.1455 -675.4824 247.2324 -675.8379 C
247.2324 -671.9453 247.2324 -668.0576 247.2324 -664.166 C
248.1436 -663.8311 249.0508 -663.4805 249.9492 -663.1113 C
249.9492 -666.9766 249.9492 -670.8457 249.9492 -674.7129 C
249.9492 -674.7129 L
f
238.772 -678.6289 m
237.6011 -678.9551 236.4229 -679.2529 235.2412 -679.5361 C
235.2412 -675.584 235.2412 -671.6338 235.2412 -667.6846 C
236.4229 -667.4141 237.5991 -667.125 238.772 -666.8174 C
238.772 -670.7539 238.772 -674.6914 238.772 -678.6289 C
238.772 -678.6289 L
f
225.9097 -681.335 m
224.4644 -681.5527 223.0146 -681.748 221.563 -681.915 C
221.563 -677.9355 221.563 -673.9551 221.563 -669.9766 C
223.0146 -669.8135 224.4634 -669.6279 225.9097 -669.416 C
225.9097 -673.3877 225.9097 -677.3604 225.9097 -681.335 C
225.9097 -681.335 L
f
1 D
274.5176 -668.4912 m
274.272 -668.8008 L
274.2241 -668.8613 274.1748 -668.9229 274.1245 -668.9834 C
273.561 -669.6055 272.9961 -670.2266 272.4316 -670.8457 C
272.4063 -670.8721 272.3813 -670.8984 272.354 -670.9268 C
259.3979 -684.2988 237.8486 -689.9951 219.8008 -691.6338 C
215.5317 -692.0205 211.2852 -692.1836 207.0298 -692.1416 C
206.7944 -693.6104 206.5166 -695.0654 206.1865 -696.499 C
207.7188 -696.5234 209.2524 -696.5176 210.7837 -696.4883 C
210.7837 -700.4746 210.7837 -704.4629 210.7837 -708.4512 C
209.064 -708.4863 207.3428 -708.4883 205.6235 -708.4551 C
205.6235 -698.7432 L
204.5068 -702.9209 202.9907 -706.9316 201.1177 -710.7383 C
207.2202 -711.0537 213.0332 -710.9639 219.1626 -710.4609 C
236.7993 -708.7969 256.4214 -703.8184 268.75 -690.2646 C
271.355 -686.9863 272.9087 -684.3047 274.0405 -680.2881 C
274.1465 -679.7217 274.2524 -679.1592 274.3564 -678.5947 C
274.4097 -678.0303 274.4634 -677.4668 274.5176 -676.9014 C
274.5176 -668.4912 L
274.5176 -668.4912 L
f
257.9194 -685.1006 m
257.9194 -688.8545 257.9194 -692.6074 257.9194 -696.3623 C
258.5625 -695.9561 259.1968 -695.5332 259.8208 -695.0977 C
259.8208 -691.3877 259.8208 -687.6777 259.8208 -683.9697 C
259.1948 -684.3584 258.5596 -684.7344 257.9194 -685.1006 C
257.9194 -685.1006 L
f
0 D
268.6504 -686.5547 m
268.3013 -687.0547 267.937 -687.541 267.563 -688.0244 C
267.563 -684.6973 267.563 -681.373 267.563 -678.0479 C
267.9331 -677.6982 268.2954 -677.3428 268.6504 -676.9814 C
268.6504 -680.1709 268.6504 -683.3633 268.6504 -686.5547 C
268.6504 -686.5547 L
f
1 D
249.9492 -700.5537 m
249.9492 -696.6865 249.9492 -692.8193 249.9492 -688.9521 C
249.0508 -689.3213 248.1436 -689.6738 247.2324 -690.0088 C
247.2324 -693.8975 247.2324 -697.7871 247.2324 -701.6768 C
248.1455 -701.3223 249.0508 -700.9473 249.9492 -700.5537 C
249.9492 -700.5537 L
f
238.772 -704.4707 m
238.772 -700.5332 238.772 -696.5957 238.772 -692.6582 C
237.5991 -692.9668 236.4229 -693.2529 235.2412 -693.5264 C
235.2412 -697.4746 235.2412 -701.4268 235.2412 -705.375 C
236.4229 -705.0947 237.6011 -704.7939 238.772 -704.4707 C
238.772 -704.4707 L
f
225.9097 -707.1748 m
225.9097 -703.2031 225.9097 -699.2295 225.9097 -695.2568 C
224.4634 -695.4688 223.0146 -695.6563 221.563 -695.8193 C
221.563 -699.7979 221.563 -703.7754 221.563 -707.7559 C
223.0146 -707.5879 224.4644 -707.3955 225.9097 -707.1748 C
225.9097 -707.1748 L
f
257.9194 -710.9434 m
257.9194 -722.2041 L
258.5625 -721.7998 259.1968 -721.3779 259.8208 -720.9424 C
259.8208 -709.8105 L
259.1948 -710.2021 258.5596 -710.5771 257.9194 -710.9434 C
257.9194 -710.9434 L
f
268.6504 -712.3975 m
268.6504 -702.8242 L
268.2954 -703.1865 267.9331 -703.542 267.563 -703.8896 C
267.563 -713.8691 L
267.937 -713.3857 268.3013 -712.8994 268.6504 -712.3975 C
268.6504 -712.3975 L
f
249.9492 -726.3965 m
249.9492 -714.7949 L
249.0508 -715.1641 248.1436 -715.5146 247.2324 -715.8506 C
247.2324 -727.5215 L
248.1455 -727.167 249.0508 -726.792 249.9492 -726.3965 C
249.9492 -726.3965 L
f
238.772 -730.3125 m
238.772 -718.501 L
237.5991 -718.8086 236.4229 -719.0977 235.2412 -719.3682 C
235.2412 -731.2197 L
236.4229 -730.9385 237.6011 -730.6387 238.772 -730.3125 C
238.772 -730.3125 L
f
225.9097 -733.0195 m
225.9097 -721.1016 L
224.4634 -721.3135 223.0146 -721.499 221.563 -721.6602 C
221.563 -733.6006 L
223.0146 -733.4316 224.4644 -733.2393 225.9097 -733.0195 C
225.9097 -733.0195 L
f
210.7837 -734.2949 m
210.7837 -722.332 L
209.064 -722.3652 207.3428 -722.3672 205.6235 -722.334 C
205.6235 -734.2988 L
207.3428 -734.3301 209.064 -734.3301 210.7837 -734.2949 C
f
*U
*u
0 D
396.1733 -311.6636 m
573.0596 -311.6636 L
573.0596 -408.1118 L
396.1733 -408.1118 L
396.1733 -311.6636 L
396.1733 -311.6636 L
f
1 D
472.2256 -368.3545 m
465.9976 -378.4482 L
468.5244 -380.9038 471.145 -382.7134 473.8818 -383.8882 C
476.6084 -385.0522 479.6045 -385.6636 482.8584 -385.7095 C
482.8584 -391.1626 L
482.8594 -391.1626 L
487.3135 -391.1626 L
489.2773 -391.1626 L
489.2773 -385.2813 L
493.2017 -384.5313 496.4121 -382.8062 498.8999 -380.105 C
501.791 -376.957 503.2354 -372.9961 503.2354 -368.2256 c
503.2354 -366.1338 502.9199 -364.23 502.2949 -362.5146 C
501.6611 -360.7871 500.7441 -359.3071 499.5581 -358.0728 C
497.7949 -356.2397 494.082 -354.5591 488.4424 -353.043 C
487.9956 -352.9019 L
485.375 -352.2207 483.6235 -351.4922 482.7192 -350.7412 C
481.8252 -349.9873 481.3799 -348.9771 481.3799 -347.7085 c
481.3799 -346.4746 481.8853 -345.4756 482.895 -344.7002 C
483.9058 -343.936 485.2349 -343.5483 486.8901 -343.5483 c
488.5127 -343.5483 490.1455 -343.8779 491.7788 -344.5474 c
493.4126 -345.2163 494.9878 -346.1924 496.5259 -347.5078 C
500.8984 -337.6958 L
499.0176 -336.439 497.1147 -335.4399 495.186 -334.7236 C
493.2598 -333.9951 491.3096 -333.5371 489.3115 -333.3257 C
489.2773 -328.6133 L
484.8223 -328.6133 L
482.8584 -328.6133 L
482.8584 -333.6626 L
478.6587 -334.3818 475.3179 -335.9629 472.8369 -338.4136 C
469.9814 -341.2456 468.5479 -344.9233 468.5479 -349.4707 c
468.5479 -353.1606 469.5815 -356.063 471.6621 -358.1904 C
473.7407 -360.3047 477.3491 -362.0796 482.5205 -363.501 C
485.916 -364.4175 488.0898 -365.3223 489.0415 -366.2036 c
489.9927 -367.085 490.4741 -368.3423 490.4741 -369.9751 c
490.4741 -371.4688 489.9111 -372.7134 488.7715 -373.7119 C
487.6304 -374.7114 486.2104 -375.2051 484.481 -375.2051 c
482.3545 -375.2051 480.2642 -374.6416 478.231 -373.501 C
476.209 -372.3618 474.1997 -370.646 472.2256 -368.3545 C
472.2256 -368.3545 L
f
427.1914 -352.1953 m
422.9429 -352.1953 419.4985 -355.6387 419.4985 -359.8872 c
419.4985 -364.1367 422.9429 -367.5806 427.1914 -367.5806 c
431.4399 -367.5806 434.8848 -364.1367 434.8848 -359.8872 c
434.8848 -355.6387 431.4399 -352.1953 427.1914 -352.1953 c
427.1914 -352.1953 l
f
542.0439 -352.1953 m
537.7949 -352.1953 534.3516 -355.6387 534.3516 -359.8872 c
534.3516 -364.1367 537.7949 -367.5806 542.0439 -367.5806 c
546.293 -367.5806 549.7354 -364.1367 549.7354 -359.8872 c
549.7354 -355.6387 546.293 -352.1953 542.0439 -352.1953 c
542.0439 -352.1953 l
f
497.6187 -322.1421 m
511.1533 -327.9863 520.7559 -342.6807 520.7559 -359.8872 c
520.7559 -377.0952 511.1533 -391.7896 497.6196 -397.6328 C
551.3281 -397.6328 L
551.3281 -391.4429 556.3916 -386.3779 562.583 -386.3779 C
562.583 -333.3965 L
556.3916 -333.3965 551.3281 -328.333 551.3281 -322.1421 C
497.6187 -322.1421 L
497.6187 -322.1421 L
f
471.6138 -397.6328 m
458.0815 -391.7896 448.4805 -377.0952 448.4805 -359.8872 c
448.4805 -342.6807 458.0815 -327.9863 471.6147 -322.1421 C
417.9072 -322.1421 L
417.9072 -328.333 412.8438 -333.3965 406.6528 -333.3965 C
406.6528 -386.3779 L
412.8438 -386.3779 417.9072 -391.4429 417.9072 -397.6328 C
471.6138 -397.6328 L
471.6138 -397.6328 L
f
0 D
578.3008 -325.3623 m
604.3828 -397.0273 L
578.3008 -406.5215 L
578.3008 -395.3696 L
580.377 -394.6138 L
578.2617 -388.7974 581.2881 -382.3062 587.1035 -380.1895 C
578.3008 -356 L
578.3008 -325.3623 L
578.3008 -325.3623 L
f
559.5342 -413.3516 m
438.1655 -457.5269 L
422.0864 -413.3516 L
433.2388 -413.3516 L
440.5786 -433.5205 L
446.395 -431.4023 452.8872 -434.4292 455.0034 -440.2461 C
505.4717 -421.877 L
497.8662 -421.4312 490.4404 -418.4048 484.2261 -413.3516 C
559.5342 -413.3516 L
559.5342 -413.3516 L
f
1 D
581.8809 -319.8789 m
592.3574 -348.6694 L
606.959 -366.0688 L
602.2188 -370.0479 601.5928 -377.1826 605.5732 -381.9243 C
604.7217 -382.6377 L
608.5371 -393.1162 L
628.9551 -375.9819 L
581.8809 -319.8789 L
581.8809 -319.8789 L
f
591.749 -407.2012 m
522.0645 -432.5654 L
529.5039 -435.0503 537.3496 -435.3032 544.5088 -433.1631 C
503.3672 -467.6855 L
499.3877 -462.9434 492.2524 -462.3193 487.5107 -466.2988 C
473.9111 -450.0913 L
463.4321 -453.9058 L
493.4531 -489.6836 L
591.749 -407.2012 L
f
*U
*u
0 D
88.0122 -353.2705 m
110.1279 -348.9902 131.8281 -344.7837 153.1118 -340.6597 C
157.0835 -343.1479 L
136.7788 -347.0796 116.4731 -351.0127 96.1699 -354.9502 C
95.0762 -355.1611 93.9858 -355.3877 92.8926 -355.5947 C
91.8149 -355.7988 90.7383 -356.0029 89.6611 -356.208 C
89.6611 -357.3032 89.6611 -358.3994 89.6611 -359.4956 C
89.6611 -360.5215 89.6611 -361.5474 89.6611 -362.5728 C
89.6611 -378.2769 89.6611 -393.9795 89.6611 -409.6831 C
89.6611 -453.0952 L
88.0122 -453.4878 L
86.9204 -453.7563 85.812 -454.0127 84.7197 -454.2544 C
84.7197 -453.2471 84.7197 -452.2266 84.7197 -451.2056 C
84.7197 -435.5068 84.7197 -419.8071 84.7197 -404.1079 c
84.7197 -388.4087 84.7197 -372.7095 84.7197 -356.9961 C
84.7197 -355.9756 84.7197 -354.9541 84.7197 -353.9199 C
85.812 -353.7124 86.9204 -353.4917 88.0122 -353.2705 C
88.0122 -353.2705 L
f
1 D
129.2837 -381.8008 m
129.2837 -398.5361 129.2837 -415.2725 129.2837 -431.9883 c
129.2837 -448.7046 129.2837 -465.4302 129.2837 -482.1353 C
153.2432 -476.4316 176.728 -470.8433 199.7368 -465.3691 C
199.7368 -454.8218 L
180.9238 -459.2041 L
171.207 -461.4692 161.3838 -463.7627 151.4707 -466.0688 C
151.4897 -459.6899 146.6396 -455.5781 140.6997 -456.9331 C
140.6997 -447.7983 140.6997 -438.6543 140.6997 -429.5195 c
140.6997 -420.3843 140.6997 -411.2397 140.6997 -402.0952 C
146.6396 -400.8833 151.4888 -394.6787 151.4888 -388.3008 C
161.3838 -386.333 171.208 -384.3818 180.9414 -382.4473 c
199.7368 -378.7124 L
199.7368 -368.1318 L
176.728 -372.5947 153.2432 -377.1494 129.2837 -381.8008 C
129.2837 -381.8008 L
f
0 D
245.0283 -359.3467 m
308.2139 -347.0928 L
308.2139 -362.5176 308.2139 -377.9419 308.2139 -393.3481 c
308.2139 -408.7539 308.2148 -424.1694 308.2148 -439.5664 C
245.0283 -454.5967 L
245.0283 -444.2607 L
262.2656 -440.2432 l
271.2119 -438.1572 280.123 -436.0786 288.9443 -434.0229 C
288.9443 -428.0313 293.2026 -422.1616 298.3735 -420.9819 C
298.3735 -412.481 298.3735 -403.9702 298.3735 -395.4707 c
298.3735 -386.9688 298.3735 -378.459 298.3735 -369.9492 C
293.2026 -371.0049 288.9434 -366.9731 288.9434 -360.9819 C
280.105 -362.7354 271.2119 -364.5078 262.2656 -366.2847 C
245.0283 -369.7104 L
245.0283 -359.3467 L
245.0283 -359.3467 L
f
166.3047 -415.6216 m
170.5454 -414.7197 173.9717 -417.7061 173.9624 -422.3145 c
173.9546 -426.9233 170.5454 -431.4189 166.3047 -432.3516 c
162.0645 -433.2847 158.5654 -430.2808 158.5742 -425.6406 c
158.583 -420.9995 162.0645 -416.5225 166.3047 -415.6216 c
166.3047 -415.6216 l
f
1 D
275.7026 -392.4009 m
271.8643 -393.2163 268.707 -397.4424 268.707 -401.856 c
268.707 -406.27 271.8564 -409.1611 275.7026 -408.3174 c
279.5493 -407.4731 282.6636 -403.2295 282.6636 -398.8447 c
282.6636 -394.46 279.542 -391.585 275.7026 -392.4009 c
275.7026 -392.4009 l
f
245.0283 -376.6938 m
245.0283 -437.2813 L
247.2207 -434.5918 249.168 -431.6489 250.8135 -428.5278 c
254.6724 -421.2124 256.9512 -412.8472 256.9512 -404.3945 c
256.9512 -395.9409 254.6733 -388.5991 250.8135 -382.9502 c
249.168 -380.541 247.2207 -378.439 245.0283 -376.6938 C
245.0283 -376.6938 L
f
0 D
199.7368 -448.1992 m
197.2305 -446.4248 195.0083 -444.2031 193.144 -441.5923 c
189.0654 -435.8809 186.6489 -428.3066 186.6489 -419.5771 c
186.6489 -410.8467 189.0664 -402.2695 193.144 -394.7964 c
195.0083 -391.3813 197.2305 -388.1978 199.7368 -385.3379 C
199.7368 -448.1992 L
199.7368 -448.1992 L
f
197.0713 -332.0903 m
241.0576 -360.4092 L
241.0576 -455.5605 L
203.7075 -464.4468 L
203.7075 -367.647 L
158.8262 -339.5527 L
197.0713 -332.0903 L
197.0713 -332.0903 L
f
1 D
202.7715 -331.0381 m
206.6606 -333.543 L
225.6572 -329.8564 244.6523 -326.1616 263.6499 -322.48 C
263.6499 -322.0586 L
263.6499 -321.1172 263.6499 -320.1772 263.6499 -319.2114 C
262.6841 -319.4131 261.7354 -319.6006 260.7876 -319.7769 C
241.8013 -323.459 222.4619 -327.2178 202.7715 -331.0381 C
202.7715 -331.0381 L
f
123.6631 -375.5767 m
122.5723 -375.7969 121.4634 -376.0176 120.3706 -376.2246 C
120.3706 -377.2593 120.3706 -378.2808 120.3706 -379.3013 C
120.3706 -395.0146 120.3706 -410.7139 120.3706 -426.4121 C
120.3706 -442.1123 120.3706 -457.811 120.3706 -473.5107 C
120.3706 -474.5317 120.3706 -475.5522 120.3706 -476.5591 C
121.4634 -476.3174 122.5723 -476.0615 123.6631 -475.7925 C
125.3135 -475.3999 L
125.3135 -431.9883 l
125.3135 -416.2852 125.3135 -400.5806 125.3135 -384.8779 c
125.3135 -383.8516 125.3135 -382.8262 125.3135 -381.8008 c
125.3135 -378.5122 L
128.5439 -377.8999 l
129.6382 -377.6929 130.7275 -377.4658 131.8208 -377.2544 C
152.1211 -373.3184 172.4209 -369.3867 192.7212 -365.4551 C
188.748 -362.9678 L
167.4707 -367.0908 145.7749 -371.2949 123.6631 -375.5767 C
123.6631 -375.5767 L
f
237.6479 -353.4927 m
241.5396 -355.9976 L
260.793 -352.2607 280.0474 -348.5171 299.3008 -344.7847 C
299.3008 -344.3628 L
299.3008 -343.4229 299.3008 -342.4824 299.3008 -341.5166 C
298.3359 -341.7183 297.3872 -341.9053 296.4385 -342.0811 C
277.2051 -345.8125 257.606 -349.6211 237.6479 -353.4927 C
237.6479 -353.4927 L
f
114.7515 -369.9995 m
113.6592 -370.2207 112.5503 -370.4414 111.4575 -370.6479 C
111.4575 -371.6826 111.4575 -372.7046 111.4575 -373.7251 C
111.4575 -389.438 111.4575 -405.1377 111.4575 -420.8364 C
111.4575 -436.5361 111.4575 -452.2358 111.4575 -467.9346 C
111.4575 -468.9551 111.4575 -469.9771 111.4575 -470.9834 C
112.5503 -470.7412 113.6592 -470.4854 114.7515 -470.2173 C
116.3999 -469.8252 L
116.3999 -426.4121 L
116.3999 -410.7085 116.3999 -395.0044 116.3999 -379.3013 C
116.3999 -378.2754 116.3999 -377.25 116.3999 -376.2246 C
116.3999 -375.1284 116.3999 -374.0322 116.3999 -372.936 C
117.4775 -372.7319 118.5542 -372.5269 119.6309 -372.3237 C
120.7251 -372.1167 121.8145 -371.8896 122.9077 -371.6782 C
143.209 -367.7412 163.5098 -363.8091 183.812 -359.8779 C
179.8389 -357.3916 L
158.561 -361.5142 136.8628 -365.7188 114.7515 -369.9995 C
114.7515 -369.9995 L
f
228.9292 -347.8789 m
232.8198 -350.3833 L
252.0098 -346.6611 271.1978 -342.9277 290.3882 -339.208 C
290.3882 -338.7876 L
290.3882 -337.8472 290.3882 -336.9063 290.3882 -335.9404 C
289.4224 -336.1416 288.4746 -336.3291 287.5264 -336.5044 C
268.355 -340.2241 248.8193 -344.02 228.9292 -347.8789 C
228.9292 -347.8789 L
f
105.8374 -364.4233 m
104.7461 -364.6445 103.6372 -364.8652 102.5449 -365.0718 C
102.5449 -366.1064 102.5449 -367.1274 102.5449 -368.1489 C
102.5449 -383.8618 102.5449 -399.5605 102.5449 -415.2593 C
102.5449 -430.96 102.5449 -446.6582 102.5449 -462.3574 C
102.5449 -463.3779 102.5449 -464.3999 102.5449 -465.4053 C
103.6372 -465.1641 104.7461 -464.9092 105.8374 -464.6401 C
107.4883 -464.248 L
107.4883 -420.8364 L
107.4883 -405.1323 107.4883 -389.4297 107.4883 -373.7251 C
107.4883 -372.6997 107.4883 -371.6738 107.4883 -370.6479 C
107.4883 -369.5522 107.4883 -368.4561 107.4883 -367.3604 C
108.5645 -367.1558 109.6421 -366.9512 110.7178 -366.7485 C
111.812 -366.54 112.9014 -366.3145 113.9961 -366.1025 C
134.2979 -362.1665 154.6001 -358.2329 174.9028 -354.3003 C
170.9302 -351.8135 L
149.6499 -355.937 127.9512 -360.1421 105.8374 -364.4233 C
105.8374 -364.4233 L
f
220.21 -342.2656 m
224.1001 -344.77 L
243.2256 -341.0591 262.3496 -337.3398 281.4761 -333.6318 C
281.4761 -333.2104 L
281.4761 -332.27 281.4761 -331.3296 281.4761 -330.3633 C
280.5093 -330.5645 279.5605 -330.7529 278.6128 -330.9282 C
259.5024 -334.6362 240.0332 -338.4204 220.21 -342.2656 C
220.21 -342.2656 L
f
96.9253 -358.8467 m
95.833 -359.0679 94.7241 -359.2886 93.6328 -359.4956 C
93.6328 -360.5303 93.6328 -361.5508 93.6328 -362.5728 C
93.6328 -378.2856 93.6328 -393.9849 93.6328 -409.6831 C
93.6328 -425.3838 93.6328 -441.083 93.6328 -456.7808 C
93.6328 -457.8027 93.6328 -458.8232 93.6328 -459.8306 C
94.7241 -459.5894 95.833 -459.333 96.9253 -459.064 C
98.5737 -458.6719 L
98.5737 -415.2593 L
98.5737 -399.5562 98.5737 -383.8516 98.5737 -368.1489 C
98.5737 -367.1226 98.5737 -366.0977 98.5737 -365.0718 C
98.5737 -363.9751 98.5737 -362.8794 98.5737 -361.7832 C
99.6514 -361.5796 100.728 -361.374 101.8047 -361.1714 C
102.8994 -360.9639 103.9893 -360.7373 105.0825 -360.5264 C
125.3857 -356.5894 145.6899 -352.6567 165.9932 -348.7241 C
162.02 -346.2368 L
140.7383 -350.3608 119.04 -354.5649 96.9253 -358.8467 C
96.9253 -358.8467 L
f
211.4902 -336.6519 m
215.3804 -339.1553 L
234.4419 -335.4565 253.502 -331.751 272.563 -328.0557 C
272.563 -327.6348 L
272.563 -326.6938 272.563 -325.7534 272.563 -324.7876 C
271.5962 -324.9893 270.6484 -325.1768 269.6997 -325.353 C
211.4902 -336.6519 L
f
*U
*u
0 D
615.7354 -596.4639 m
617.3701 -596.2939 L
618.5039 -596.1084 619.6406 -595.9131 620.7949 -595.7275 C
620.7949 -596.8711 620.7949 -598.0146 620.7949 -599.1592 C
620.7949 -616.6318 620.7949 -634.1279 620.7949 -651.6006 c
620.7949 -669.0742 620.7949 -686.5693 620.7949 -704.043 C
620.7949 -705.1865 620.7949 -706.3311 620.7949 -707.4502 C
619.6406 -707.6699 618.5039 -707.8799 617.3701 -708.0752 C
585.2998 -711.7402 553.2656 -709.9502 521.1836 -705.3594 c
489.167 -700.7783 457.0659 -700.7959 425.0171 -706.5771 C
423.8818 -706.8818 422.7461 -707.165 421.6108 -707.4502 C
421.6108 -706.3311 421.6108 -705.1865 421.6108 -704.043 C
421.6108 -703.0811 L
451.6973 -698.165 482.0254 -698.3291 512.2197 -702.6514 C
544.415 -707.2568 576.8916 -709.0811 609.2773 -705.3789 C
609.376 -705.3691 L
609.4736 -705.3516 L
610.6377 -705.1494 611.7998 -704.9375 612.957 -704.7139 C
615.7354 -704.1836 L
615.7354 -701.3574 L
615.7354 -700.2217 615.7354 -699.0869 615.7354 -697.9521 C
615.7354 -680.4697 615.7354 -662.9893 615.7354 -645.5078 C
615.7354 -596.4639 L
615.7354 -596.4639 L
f
1 D
396.1729 -577.46 m
396.1729 -596.0908 396.1729 -614.7236 396.1729 -633.3311 c
396.1729 -651.9502 396.1729 -670.5684 396.1729 -689.1768 C
429.3569 -682.9365 462.6016 -682.874 495.7451 -687.1904 c
528.9727 -691.5176 562.1523 -693.9229 595.3574 -689.1768 C
595.3574 -670.5684 595.3574 -651.9502 595.3574 -633.3311 c
595.3574 -614.7236 595.3574 -596.0908 595.3574 -577.46 C
562.1523 -581.8379 528.9668 -579.7266 495.7451 -575.4883 c
462.5957 -571.2559 429.3569 -571.2461 396.1729 -577.46 C
396.1729 -577.46 L
f
483.3755 -639.4209 m
481.3037 -643.0703 479.2319 -646.71 477.1611 -650.3467 C
479.6709 -653.5029 482.312 -655.915 485.0293 -657.6201 c
487.769 -659.3418 490.7461 -660.4824 493.9922 -661.001 C
493.9922 -663.1084 493.9922 -665.2168 493.9922 -667.3125 C
493.9922 -667.3125 L
495.4663 -667.5342 496.9609 -667.7451 498.4541 -667.9668 C
499.0928 -668.0527 499.748 -668.1504 500.4063 -668.251 C
500.4063 -665.9814 500.4063 -663.7129 500.4063 -661.4326 C
504.3291 -661.1475 507.5479 -659.6426 510.0273 -656.8691 c
512.9268 -653.624 514.3486 -649.2373 514.3486 -643.7012 c
514.3486 -641.2705 514.0381 -639.0254 513.4131 -636.9561 c
512.7832 -634.8701 511.8623 -633.0068 510.6846 -631.4199 c
508.915 -629.0371 505.207 -626.5479 499.5693 -623.9697 c
499.4102 -623.8975 499.2754 -623.8135 499.1318 -623.748 c
496.5078 -622.5693 494.7617 -621.4873 493.853 -620.4814 c
492.9688 -619.502 492.5181 -618.249 492.5181 -616.7832 c
492.5181 -615.3525 493.0112 -614.2588 494.0317 -613.5146 c
495.0415 -612.7793 496.3623 -612.5059 498.0371 -612.751 c
499.6484 -612.9873 501.2852 -613.5977 502.916 -614.6123 c
504.5518 -615.6309 506.124 -616.9932 507.6563 -618.7432 C
509.1104 -615.167 510.5654 -611.5918 512.0176 -608.0029 C
510.1465 -606.2764 508.2334 -604.8477 506.3213 -603.7363 c
504.3906 -602.6152 502.4365 -601.7891 500.4463 -601.2461 C
500.4258 -599.4453 500.4063 -597.6201 500.4063 -595.7949 C
498.9121 -595.5732 497.4375 -595.3633 495.9648 -595.1553 C
495.3076 -595.0684 494.6499 -594.9697 493.9922 -594.8828 C
493.9922 -596.8311 493.9922 -598.7803 493.9922 -600.7275 C
489.8096 -600.9746 486.4531 -602.3096 483.9932 -604.8213 c
481.1162 -607.7607 479.7109 -611.8379 479.7109 -617.1025 c
479.7109 -621.3818 480.7271 -624.8711 482.8179 -627.5957 c
484.8896 -630.2969 488.4868 -632.8682 493.6538 -635.2412 c
497.0508 -636.8018 499.2285 -638.1426 500.166 -639.2979 c
501.1201 -640.4717 501.6016 -641.9873 501.6016 -643.873 c
501.6016 -645.6123 501.0498 -646.9756 499.9092 -647.9678 c
498.7783 -648.9473 497.3379 -649.3242 495.6255 -649.0762 c
493.4941 -648.7686 491.3984 -647.8105 489.3711 -646.2031 c
487.355 -644.6045 485.3472 -642.332 483.3755 -639.4209 C
483.3755 -639.4209 L
f
434.7949 -617.2012 m
430.291 -617.4053 426.6284 -622.1045 426.6284 -627.3369 c
426.6284 -632.5713 430.29 -636.332 434.7949 -636.1279 c
439.2983 -635.9258 442.9609 -631.8135 442.9609 -626.585 c
442.9609 -621.3564 439.2983 -616.999 434.7949 -617.2012 c
434.7949 -617.2012 l
f
556.7168 -628.4102 m
552.2129 -628.3359 548.5488 -632.4307 548.5488 -637.6826 c
548.5488 -642.9346 552.2129 -647.3145 556.7168 -647.3867 c
561.2168 -647.459 564.8828 -643.0273 564.8828 -637.7813 c
564.8828 -632.5342 561.2168 -628.4824 556.7168 -628.4102 c
556.7168 -628.4102 l
f
509.8467 -589.6787 m
517.1777 -594.0811 523.4688 -600.8789 527.8945 -608.9912 c
532.3135 -617.0908 534.9453 -626.6396 534.9453 -636.6221 c
534.9453 -646.6035 532.3154 -655.5615 527.8945 -662.6396 c
523.4727 -669.7178 517.1777 -674.7852 509.8467 -677.1289 C
520.2461 -678.5947 530.6465 -680.0928 541.0605 -680.9385 c
551.4424 -681.7822 561.8945 -681.7646 572.3125 -681.2949 C
572.3125 -674.1084 577.3721 -667.5723 583.5449 -666.7715 C
583.5449 -656.5234 583.5449 -646.2656 583.5449 -636.0176 c
583.5449 -625.7725 583.5449 -615.5137 583.5449 -605.2529 C
577.3721 -606.0313 572.3125 -600.7529 572.3125 -593.5645 C
561.8945 -594.0439 551.4443 -594.1045 541.0605 -593.3301 c
530.6484 -592.5518 520.2461 -591.1104 509.8467 -589.6787 C
509.8467 -589.6787 L
f
481.6631 -673.1211 m
474.3125 -668.8301 468.0264 -662.2529 463.5967 -654.2686 c
459.1831 -646.3086 456.5659 -636.9424 456.5659 -626.9795 c
456.5659 -617.0156 459.167 -607.8877 463.5967 -600.6777 c
468.0103 -593.498 474.3125 -588.1865 481.6631 -585.6963 C
471.2456 -584.4756 460.8174 -583.2861 450.4106 -582.9834 c
440.0176 -582.6816 429.5962 -583.3896 419.1982 -584.4521 C
419.1982 -591.6279 414.1392 -598.3486 407.9644 -599.4697 C
407.9644 -609.7051 407.9644 -619.9395 407.9644 -630.1611 c
407.9644 -640.3828 407.9644 -650.6172 407.9644 -660.8398 C
414.1392 -659.6924 419.1982 -664.6982 419.1982 -671.877 C
429.5962 -670.79 440.0176 -670.0947 450.4106 -670.3828 c
460.8164 -670.6729 471.2456 -671.8887 481.6631 -673.1211 C
481.6631 -673.1211 L
f
598.7764 -584.2793 m
598.7764 -633.3232 L
598.7764 -650.8037 598.7764 -668.2842 598.7764 -685.7666 C
598.7764 -686.9014 598.7764 -688.0361 598.7764 -689.1729 C
598.7764 -691.999 L
595.999 -692.5293 L
594.8389 -692.7529 593.6797 -692.9648 592.5156 -693.167 C
592.417 -693.1846 L
592.3184 -693.1943 L
559.9326 -696.8955 527.457 -695.0723 495.2612 -690.4658 C
465.0669 -686.1436 434.7388 -685.9805 404.6523 -690.8965 C
404.6523 -691.8574 L
404.6523 -693.002 404.6523 -694.1465 404.6523 -695.2656 C
405.7876 -694.9795 406.9219 -694.6973 408.0586 -694.3906 C
440.1069 -688.6123 472.2085 -688.5938 504.2246 -693.1748 C
536.3076 -697.7656 568.3408 -699.5557 600.4121 -695.8906 C
601.5469 -695.6953 602.6826 -695.4854 603.8369 -695.2656 C
603.8369 -694.1465 603.8369 -693.002 603.8369 -691.8574 C
603.8369 -674.3867 603.8369 -656.8877 603.8369 -639.416 C
603.8369 -621.9434 603.8369 -604.4463 603.8369 -586.9736 C
603.8369 -585.8301 603.8369 -584.6865 603.8369 -583.543 C
602.6826 -583.7275 601.5469 -583.9238 600.4121 -584.1084 C
598.7764 -584.2793 L
598.7764 -584.2793 L
f
607.2559 -590.3721 m
607.2559 -639.416 L
607.2559 -656.8965 607.2559 -674.377 607.2559 -691.8574 C
607.2559 -692.9932 607.2559 -694.1289 607.2559 -695.2656 C
607.2559 -698.0908 L
604.4785 -698.6211 L
603.3203 -698.8428 602.1582 -699.0566 600.9941 -699.2598 C
600.8965 -699.2764 L
600.7988 -699.2861 L
568.4131 -702.9883 535.9355 -701.165 503.7402 -696.5586 C
473.5459 -692.2354 443.2183 -692.0732 413.1313 -696.9883 C
413.1313 -697.9521 L
413.1313 -699.0947 413.1313 -700.2383 413.1313 -701.3574 C
414.2671 -701.0742 415.4023 -700.792 416.5376 -700.4834 C
448.5864 -694.7051 480.6875 -694.6855 512.7051 -699.2666 C
544.7861 -703.8574 576.8213 -705.6475 608.8906 -701.9834 C
610.0254 -701.7871 611.1621 -701.5771 612.3164 -701.3574 C
612.3164 -700.2383 612.3164 -699.0947 612.3164 -697.9521 C
612.3164 -680.4785 612.3164 -662.9814 612.3164 -645.5078 C
612.3164 -628.0352 612.3164 -610.5391 612.3164 -593.0664 C
612.3164 -591.9229 612.3164 -590.7803 612.3164 -589.6357 C
611.1621 -589.8203 610.0254 -590.0156 608.8906 -590.2012 C
607.2559 -590.3721 L
f
*U
*u
0 D
824.6016 -597.6104 m
866.7646 -597.6104 901.0781 -624.1826 902.2305 -657.3066 C
904.0146 -657.0225 905.6563 -656.5537 907.041 -655.8389 C
907.0508 -655.833 L
906.1719 -654.7695 905.4453 -653.582 904.8877 -652.4023 C
902.9844 -648.3545 903.5635 -644.9746 905.0977 -642.8516 C
906.0234 -641.5732 907.3115 -640.7324 908.6787 -640.4277 C
910.1445 -640.0957 911.6768 -640.3682 912.9668 -641.3516 C
914.7178 -642.6826 915.9443 -645.3477 915.5645 -649.5762 C
915.3477 -651.9834 914.6426 -653.9609 913.5596 -655.5684 C
915.9814 -656.502 918.6094 -656.5771 920.6689 -655.8945 C
921.3633 -655.6631 921.9824 -655.3467 922.4824 -654.9473 C
922.9258 -654.5986 923.2773 -654.1787 923.5068 -653.6953 C
923.8975 -652.873 923.9443 -651.8057 923.5088 -650.4932 C
923.1494 -649.4004 923.7402 -648.2227 924.832 -647.8623 C
925.9238 -647.5029 927.1016 -648.0957 927.4619 -649.1846 C
928.2666 -651.6084 928.1113 -653.7256 927.2793 -655.4756 C
926.7695 -656.5518 926.0088 -657.4678 925.0635 -658.2158 C
924.1758 -658.917 923.126 -659.4639 921.9766 -659.8467 C
918.7402 -660.9209 914.5801 -660.7061 910.9902 -659.0029 C
910.7881 -658.9072 910.5898 -658.8047 910.3945 -658.6953 C
909.9365 -659.0029 909.4551 -659.2881 908.9531 -659.5469 C
906.9609 -660.5732 904.6543 -661.1953 902.1992 -661.5332 C
901.1074 -683.0684 886.4736 -699.8037 867.3281 -709.8447 C
864.7744 -730.1445 L
842.6494 -730.1445 L
839.5703 -719.1602 L
834.5674 -720.0127 829.5381 -720.4521 824.6016 -720.4521 c
818.8027 -720.4521 813.3203 -720.0391 808.1426 -719.2432 C
805.0859 -730.1445 L
782.9619 -730.1445 L
780.4219 -709.9512 L
773.2637 -705.9434 766.9941 -700.873 761.542 -694.8867 C
757.373 -695.7344 752.9785 -696.2451 748.2754 -696.292 C
738.2236 -690.1465 731.6309 -678.8193 729.4893 -665.3594 C
734.6816 -662.333 741.7549 -657.5703 747.5635 -651.207 C
748.7344 -643.9189 751.5254 -637.0322 755.6348 -630.7725 C
751.3789 -622.8662 744.6738 -616.2949 737.6514 -609.8955 C
753.5557 -601.5176 771.2324 -601.1611 785.8975 -605.7725 C
797.292 -600.5801 810.5078 -597.6104 824.6016 -597.6104 c
824.6016 -597.6104 l
f
828.7393 -539.0615 m
842.8994 -539.0615 854.3799 -550.542 854.3799 -564.7012 c
854.3799 -578.8604 842.8994 -590.3408 828.7393 -590.3408 c
814.5801 -590.3408 803.0996 -578.8604 803.0996 -564.7012 c
803.0996 -550.542 814.5801 -539.0615 828.7393 -539.0615 c
828.7393 -539.0615 l
f
1 D
828.7393 -542.0068 m
816.208 -542.0068 806.0459 -552.1689 806.0459 -564.7012 c
806.0459 -570.5127 808.2314 -575.8125 811.8223 -579.8281 C
809.0557 -576.0654 807.418 -571.418 807.418 -566.3896 c
807.418 -553.8564 817.5791 -543.6953 830.1123 -543.6953 c
836.834 -543.6953 842.873 -546.6201 847.0293 -551.2637 C
842.8975 -545.6504 836.2441 -542.0068 828.7393 -542.0068 c
828.7393 -542.0068 l
f
821.6357 -569.5557 m
818.0664 -575.3408 L
819.5146 -576.748 821.0166 -577.7861 822.5859 -578.4619 C
824.1484 -579.127 825.8662 -579.4795 827.7324 -579.5039 C
827.7324 -582.6289 L
827.7324 -582.6289 L
830.2861 -582.6289 L
831.4111 -582.6289 L
831.4111 -579.2598 L
833.6602 -578.8271 835.502 -577.8398 836.9287 -576.292 C
838.585 -574.4854 839.415 -572.2168 839.415 -569.4805 c
839.415 -568.2813 839.2334 -567.1904 838.875 -566.2061 C
838.5098 -565.2168 837.9863 -564.3672 837.3057 -563.6602 c
836.2939 -562.6113 834.167 -561.6475 830.9326 -560.7773 C
830.6768 -560.6963 L
829.1758 -560.3066 828.1709 -559.8877 827.6523 -559.4561 C
827.1406 -559.0244 826.8828 -558.4453 826.8828 -557.7197 c
826.8828 -557.0107 827.1729 -556.4395 827.7529 -555.9941 C
828.334 -555.5566 829.0938 -555.335 830.0449 -555.335 c
830.9736 -555.335 831.9092 -555.5225 832.8457 -555.9072 C
833.7822 -556.29 834.6855 -556.8496 835.5664 -557.6035 C
838.0723 -551.9775 L
836.9951 -551.2578 835.9033 -550.6865 834.7988 -550.2764 C
833.6934 -549.8584 832.5752 -549.5938 831.4307 -549.4736 C
831.4111 -546.7734 L
828.8574 -546.7734 L
827.7324 -546.7734 L
827.7324 -549.666 L
825.3232 -550.0781 823.4082 -550.9873 821.9883 -552.3906 C
820.3496 -554.0156 819.5283 -556.1211 819.5283 -558.7305 c
819.5283 -560.8438 820.1191 -562.5088 821.3125 -563.7275 C
822.5059 -564.9404 824.5732 -565.957 827.5371 -566.7734 C
829.4854 -567.2979 830.7295 -567.8174 831.2754 -568.3223 C
831.8213 -568.8271 832.0977 -569.5469 832.0977 -570.4854 c
832.0977 -571.3418 831.7734 -572.0557 831.1201 -572.627 C
830.4688 -573.1973 829.6523 -573.4824 828.6611 -573.4824 c
827.4424 -573.4824 826.2432 -573.1582 825.0791 -572.5049 C
823.9209 -571.8535 822.7686 -570.8682 821.6357 -569.5557 C
821.6357 -569.5557 L
f
798.6621 -612.9756 m
802.5371 -611.668 806.6016 -610.6592 810.8145 -609.9824 C
814.8916 -609.3252 819.1514 -608.9795 823.5527 -608.9795 C
827.9512 -608.9795 832.21 -609.3252 836.2881 -609.9824 C
840.5 -610.6592 844.5674 -611.668 848.4404 -612.9756 C
849.9141 -613.4688 851.5088 -612.6738 852.001 -611.1992 C
852.4951 -609.7275 851.7002 -608.1309 850.2266 -607.6387 C
846.0732 -606.2393 841.7041 -605.1533 837.1719 -604.4258 C
832.7334 -603.7109 828.1768 -603.3359 823.5527 -603.3359 C
818.9258 -603.3359 814.3711 -603.7109 809.9326 -604.4258 C
805.3984 -605.1533 801.0313 -606.2393 796.876 -607.6387 C
795.4023 -608.1309 794.6094 -609.7275 795.1016 -611.1992 C
795.5938 -612.6738 797.1885 -613.4688 798.6621 -612.9756 C
798.6621 -612.9756 L
f
910.1777 -653.0654 m
910.8428 -652.0215 911.2773 -650.751 911.416 -649.2148 C
911.6455 -646.6416 911.165 -645.2207 910.4346 -644.666 C
910.1875 -644.4785 909.8848 -644.4258 909.5928 -644.4922 C
909.1982 -644.5801 908.7998 -644.8613 908.4795 -645.3027 C
907.7227 -646.3496 907.5156 -648.1865 908.6621 -650.6221 C
909.0596 -651.4639 909.5693 -652.3096 910.1777 -653.0654 C
910.1777 -653.0654 L
f
761.9355 -650.7451 m
759.6689 -650.7451 757.8301 -652.584 757.8301 -654.8545 c
757.8301 -657.1211 759.6689 -658.96 761.9355 -658.96 c
764.2061 -658.96 766.0449 -657.1211 766.0449 -654.8545 c
766.0449 -652.584 764.2061 -650.7451 761.9355 -650.7451 c
f
*U
*u
0 D
319.9521 -870.1055 m
321.9497 -871.5352 L
322.6772 -872.0566 323.4048 -872.582 324.125 -873.0908 C
323.2451 -873.5166 322.3823 -873.9404 321.521 -874.3652 C
296.7705 -886.5225 271.271 -899.0371 245.0327 -911.9258 c
218.0073 -925.2012 190.1104 -938.9063 161.3618 -953.0293 C
160.3169 -953.5391 159.2886 -954.0479 158.2593 -954.5557 C
157.5864 -953.9365 156.9058 -953.3066 156.2251 -952.6738 C
145.9253 -943.1328 135.8281 -933.7842 125.9658 -924.6465 c
116.3027 -915.6934 106.8345 -906.9189 97.561 -898.3203 C
96.9644 -897.7705 96.3672 -897.2158 95.7705 -896.6602 C
97.5659 -895.8613 L
121.9189 -918.4316 L
132.0015 -927.7734 142.0918 -937.1143 152.1772 -946.458 C
152.8579 -947.0869 153.5376 -947.7188 154.2197 -948.3477 C
154.9683 -949.0361 155.7168 -949.7266 156.4668 -950.415 C
157.4424 -949.9326 158.4189 -949.4512 159.3931 -948.9688 C
160.4243 -948.46 161.4556 -947.9541 162.4868 -947.4482 C
190.3799 -933.75 218.2671 -920.0449 246.1577 -906.3428 C
270.7539 -894.2598 295.3564 -882.1865 319.9521 -870.1055 C
319.9521 -870.1055 L
f
1 D
91.7891 -863.6113 m
101.6348 -872.7344 111.7046 -882.0615 121.9863 -891.5918 c
132.5039 -901.3398 143.2671 -911.3076 154.2759 -921.502 C
132.7739 -932.0654 126.5166 -935.1406 154.2773 -921.5039 C
154.2793 -921.5049 L
166.8076 -915.3467 L
168.1938 -914.666 L
168.5552 -914.4883 L
169.5786 -913.9844 L
241.0527 -878.876 L
242.3159 -878.2539 L
243.5874 -877.6289 L
244.8574 -877.0059 L
246.1274 -876.3818 L
271.499 -863.9238 296.1665 -851.8135 320.144 -840.041 C
308.3672 -831.6035 296.8247 -823.3262 285.5293 -815.2275 c
274.4624 -807.293 263.6064 -799.5098 252.9727 -791.8799 C
227.9897 -802.9902 202.2959 -814.4277 175.8784 -826.1816 c
148.6714 -838.2881 120.6411 -850.7637 91.7891 -863.6113 C
91.7891 -863.6113 L
f
229.1743 -884.708 m
211.5093 -893.3838 193.48 -902.2402 175.1021 -911.2705 C
229.1743 -884.708 L
229.1743 -884.708 L
f
0 D
202.9448 -861.1475 m
206.1431 -861.6592 208.9863 -861.8369 211.438 -861.6807 c
213.8901 -861.5225 216.0049 -861.0156 217.7642 -860.1816 c
219.1758 -859.5127 220.0127 -858.6758 220.2529 -857.6885 c
220.498 -856.6914 220.0908 -855.7861 219.0698 -854.9639 c
217.9565 -854.0693 216.7095 -853.5693 215.3198 -853.4473 c
213.9536 -853.3262 211.5576 -853.6748 208.1509 -854.4688 c
202.9438 -855.6875 198.7705 -856.0889 195.6177 -855.7227 c
192.4727 -855.3584 189.6914 -854.1592 187.2363 -852.1348 c
184.231 -849.6611 183.0107 -847.1348 183.5112 -844.5303 c
183.9409 -842.2959 185.6499 -840.207 188.5879 -838.2666 C
187.5005 -837.3848 186.3984 -836.499 185.3086 -835.6123 C
185.8442 -835.3691 186.3774 -835.1279 186.9131 -834.8857 C
188.1113 -834.3457 189.2935 -833.8057 190.5098 -833.2637 C
191.5259 -834.082 192.5781 -834.8975 193.6108 -835.71 C
195.355 -835.0869 197.2295 -834.6123 199.2769 -834.2822 c
201.29 -833.9561 203.4839 -833.7793 205.8086 -833.7539 C
206.8057 -835.9971 207.8115 -838.2559 208.8071 -840.5273 C
206.6763 -840.3994 204.7617 -840.4678 203.0015 -840.7207 c
201.2227 -840.9746 199.688 -841.4092 198.3687 -842.0098 c
197.0024 -842.6309 196.2002 -843.334 195.8745 -844.126 c
195.5498 -844.9209 195.8066 -845.6484 196.6216 -846.3145 c
197.4575 -846.9971 198.521 -847.376 199.7373 -847.4404 c
200.9863 -847.5078 202.9092 -847.2227 205.4829 -846.6123 c
205.6255 -846.5762 205.7773 -846.5615 205.9385 -846.5244 c
211.54 -845.2168 215.6724 -844.7119 218.3423 -845.0352 c
220.125 -845.248 221.8872 -845.7002 223.5767 -846.3965 c
225.2407 -847.0811 226.7979 -847.9893 228.2388 -849.1289 c
231.5239 -851.7246 233.1094 -854.4453 232.9512 -857.3008 c
232.8159 -859.7695 231.3892 -861.9863 228.6953 -863.9492 C
230.0679 -865.0547 231.439 -866.1582 232.8291 -867.2705 C
232.2842 -867.5313 231.7397 -867.793 231.2114 -868.0459 C
229.9902 -868.6416 228.752 -869.2363 227.5308 -869.8252 C
227.5308 -869.8252 L
226.2446 -868.792 224.978 -867.7568 223.7085 -866.7285 C
220.9878 -867.9902 218.0791 -868.8359 214.9956 -869.2568 c
211.9116 -869.6777 208.4604 -869.6953 204.6675 -869.2988 C
204.0913 -866.5635 203.522 -863.8467 202.9448 -861.1475 C
202.9448 -861.1475 L
f
1 D
150.7075 -870.9775 m
146.8159 -872.7764 145.9795 -876.3594 148.9482 -878.9902 c
151.918 -881.6211 157.5601 -882.2676 161.4697 -880.4229 c
165.3794 -878.5781 166.0825 -874.9717 163.0942 -872.3799 c
160.1069 -869.7891 154.5986 -869.1768 150.7075 -870.9775 c
150.7075 -870.9775 l
f
0 D
250.4375 -824.79 m
253.9214 -823.1768 259.2109 -823.7197 262.3315 -826.0371 c
265.4531 -828.3516 265.1772 -831.5889 261.686 -833.2344 c
258.1943 -834.8799 252.7778 -834.3037 249.6743 -831.9551 c
246.5703 -829.6045 246.9551 -826.4014 250.4375 -824.79 c
250.4375 -824.79 l
f
193.9268 -826.4932 m
202.2061 -822.7666 210.4351 -819.0664 218.5532 -815.415 c
226.6211 -811.7871 234.626 -808.1836 242.5659 -804.6162 C
246.6558 -807.6309 253.8711 -808.3711 258.5444 -806.25 C
264.4976 -810.582 270.5127 -814.9639 276.6001 -819.3857 c
282.7637 -823.8623 288.998 -828.3896 295.2925 -832.9697 C
290.5791 -835.2363 290.3218 -839.7803 294.7964 -843.0791 C
286.7095 -847.0068 278.5552 -850.9707 270.3213 -854.9668 c
262.0195 -858.998 253.6362 -863.0791 245.1694 -867.1865 C
249.0435 -862.6465 250.4937 -857.3281 249.4268 -852.0215 c
248.3716 -846.7783 244.8647 -841.4785 238.979 -836.9482 c
233.0928 -832.417 225.6943 -829.2646 217.8394 -827.4912 c
210.0156 -825.7285 201.6685 -825.3516 193.9268 -826.4932 C
193.9268 -826.4932 L
f
1 D
221.8208 -878.5313 m
213.5688 -879.8252 204.646 -879.3984 196.3721 -877.3945 c
188.1206 -875.3945 180.4604 -871.8242 174.7383 -866.9502 c
169.0166 -862.0762 166.0293 -856.6563 165.4927 -851.3623 c
164.9653 -846.1406 166.8892 -841.0293 171.0786 -836.7578 C
162.4927 -840.6201 153.8096 -844.5215 145.0781 -848.4482 c
136.2661 -852.4131 127.3555 -856.4248 118.3657 -860.46 C
122.2393 -863.9258 120.9878 -868.7832 115.5845 -871.25 C
121.1587 -876.3271 126.8047 -881.4688 132.5181 -886.6689 c
138.2988 -891.9316 144.147 -897.2715 150.0835 -902.665 C
155.5879 -900.0176 163.5322 -900.9482 167.7949 -904.7656 C
177.0054 -900.2881 186.1548 -895.8477 195.1958 -891.4609 c
204.1455 -887.1211 213.0225 -882.7949 221.8208 -878.5313 C
221.8208 -878.5313 L
f
316.9673 -845.3164 m
292.3706 -857.3994 267.7676 -869.4736 243.1724 -881.5557 c
215.2817 -895.2559 187.394 -908.9609 159.5015 -922.6592 c
158.4697 -923.166 157.438 -923.6729 156.4087 -924.1797 c
153.4805 -925.6279 L
151.2344 -923.5586 l
150.5518 -922.9307 149.8716 -922.3008 149.1924 -921.6709 c
139.1069 -912.3281 129.0171 -902.9873 118.9326 -893.6416 C
94.5806 -871.0723 L
92.7842 -871.873 L
93.3823 -872.4287 93.979 -872.9844 94.5762 -873.5342 C
103.8481 -882.1309 113.3169 -890.9072 122.9814 -899.8604 C
132.8428 -908.998 142.9404 -918.3447 153.2397 -927.8867 C
153.9204 -928.5166 154.6016 -929.1484 155.2739 -929.7695 C
156.3032 -929.2598 157.3311 -928.752 158.376 -928.2432 C
187.124 -914.1211 215.022 -900.4141 242.0479 -887.1377 C
268.2861 -874.249 293.7856 -861.7354 318.5356 -849.5771 C
319.397 -849.1533 320.2607 -848.7285 321.1401 -848.3047 C
320.4204 -847.793 319.6919 -847.2686 318.9653 -846.75 C
316.9673 -845.3164 L
316.9673 -845.3164 L
f
317.9629 -853.5791 m
293.3662 -865.6602 268.7632 -877.7363 244.1675 -889.8184 C
216.2769 -903.5205 188.3896 -917.2256 160.4971 -930.9238 C
159.4653 -931.4277 158.4336 -931.9346 157.4033 -932.4434 C
156.4287 -932.9258 155.4531 -933.4082 154.4761 -933.8896 C
153.7271 -933.1992 152.9785 -932.5107 152.229 -931.8223 C
151.5474 -931.1924 150.8677 -930.5625 150.1865 -929.9326 C
140.1016 -920.5889 130.0117 -911.25 119.9282 -901.9053 C
111.8091 -894.3838 103.6924 -886.8584 95.5752 -879.3369 C
93.7798 -880.1357 L
94.377 -880.6904 94.9736 -881.2471 95.5708 -881.7969 C
104.8442 -890.3955 114.3125 -899.168 123.9761 -908.1221 C
133.8389 -917.2578 143.936 -926.6074 154.2344 -936.1494 C
154.9155 -936.7803 155.5962 -937.4111 156.2695 -938.0293 C
157.2974 -937.5215 158.3271 -937.0146 159.3716 -936.5059 C
188.1196 -922.3828 216.0181 -908.6748 243.0435 -895.3994 C
269.2808 -882.5107 294.7803 -869.9971 319.5303 -857.8398 C
320.3921 -857.4141 321.2559 -856.9902 322.1348 -856.5674 C
321.4146 -856.0566 320.687 -855.5313 319.9595 -855.0117 C
317.9629 -853.5791 L
317.9629 -853.5791 L
f
318.9575 -861.8408 m
294.3618 -873.9238 269.7578 -885.998 245.1636 -898.0811 C
217.2729 -911.7803 189.3848 -925.4863 161.4912 -939.1846 C
160.46 -939.6924 159.4287 -940.1963 158.3989 -940.7061 C
157.4233 -941.1885 156.4478 -941.6709 155.4712 -942.1533 C
154.7222 -941.4629 153.9731 -940.7734 153.2246 -940.084 C
152.542 -939.4551 151.8623 -938.8252 151.1812 -938.1953 C
141.0972 -928.8516 131.0073 -919.5107 120.9233 -910.168 C
96.5698 -887.5986 L
94.7749 -888.3975 L
95.3726 -888.9531 95.9697 -889.5088 96.5664 -890.0586 C
105.8389 -898.6572 115.3071 -907.4297 124.9702 -916.3848 C
134.834 -925.5225 144.9307 -934.8701 155.23 -944.4121 C
155.9111 -945.043 156.5918 -945.6729 157.2637 -946.2939 C
158.2935 -945.7852 159.3213 -945.2754 160.3667 -944.7676 C
189.1143 -930.6455 217.0127 -916.9395 244.0381 -903.6621 C
270.2764 -890.7725 295.7759 -878.2588 320.5259 -866.1006 C
321.3867 -865.6787 322.2505 -865.2529 323.1304 -864.8291 C
322.4092 -864.3193 321.6816 -863.7939 320.9541 -863.2725 C
318.9575 -861.8408 L
f
*U
*u
0 D
597.9541 -168.8115 m
597.9541 -196.9966 L
597.9541 -199.1836 596.5283 -200.8994 594.0508 -200.8994 C
592.2227 -200.8994 L
567.876 -200.8994 L
563.0947 -200.8994 558.5479 -198.9907 555.1689 -195.6123 C
551.7891 -192.2324 549.8818 -187.688 549.8818 -182.9028 C
549.8818 -178.1201 551.7891 -173.5737 555.1689 -170.1948 C
558.5479 -166.8164 563.0947 -164.9082 567.876 -164.9082 C
591.793 -164.9082 L
594.0508 -164.9082 L
596.293 -164.9082 597.9541 -166.5532 597.9541 -168.8115 C
597.9541 -168.8115 L
f
450.4824 -111.2119 m
533.1094 -28.5835 L
593.1133 -88.5879 L
570.4902 -111.2119 L
557.4492 -111.2119 L
572.2432 -96.418 L
568.3926 -92.5674 568.3926 -86.2656 572.2451 -82.415 C
539.2822 -49.4526 L
535.4307 -53.3037 529.1289 -53.3037 525.2793 -49.4526 C
486.3848 -88.3472 L
499.1582 -82.8442 514.7842 -85.5034 525.4893 -96.2085 c
529.8477 -100.5688 532.873 -105.7446 534.5566 -111.2119 C
513.6484 -111.2119 L
512.2012 -110.5537 510.7354 -110.2148 509.2549 -110.1846 C
508.0703 -110.1621 506.5752 -110.5049 504.7725 -111.2119 C
490.8364 -111.2119 L
491.1289 -110.4673 491.627 -109.7393 492.3364 -109.0288 C
493.3457 -108.0215 494.5674 -107.209 495.9995 -106.6099 c
497.4326 -106.0107 499.0186 -105.6377 500.7959 -105.4995 C
497.4097 -96.6748 L
495.458 -97.063 493.6533 -97.6255 492.0073 -98.3784 C
490.3555 -99.124 488.8569 -100.0527 487.4824 -101.1646 C
484.5303 -98.2534 L
481.7603 -101.0244 L
480.5371 -102.2466 L
483.6777 -105.3887 L
482.3062 -107.3291 481.3623 -109.2695 480.8516 -111.2119 C
467.0464 -111.2119 L
467.4917 -109.4033 468.084 -107.6289 468.8262 -105.9063 C
463.5195 -111.2119 L
450.4824 -111.2119 L
450.4824 -111.2119 L
f
1 D
533.9678 -77.5591 m
531.1592 -80.3672 531.1592 -84.9224 533.9658 -87.731 c
536.7764 -90.5391 541.3291 -90.5391 544.1387 -87.731 c
546.9482 -84.9224 546.9482 -80.3672 544.1387 -77.5581 c
541.3291 -74.7495 536.7764 -74.7495 533.9678 -77.5591 C
533.9678 -77.5591 L
f
597.377 -206.604 m
592.29 -206.604 L
591.7256 -206.604 L
586.0723 -206.604 L
586.0723 -229.5977 L
586.0723 -232.0581 585.0615 -234.3008 583.4336 -235.9282 C
581.8066 -237.5562 579.5645 -238.5669 577.1035 -238.5669 C
437.9551 -238.5669 L
437.9551 -127.2393 L
577.1035 -127.2393 L
579.5645 -127.2393 581.8066 -128.2495 583.4336 -129.8784 C
585.0615 -131.5063 586.0723 -133.7476 586.0723 -136.2095 C
586.0723 -159.2031 L
591.7256 -159.2031 L
597.377 -159.2031 L
597.377 -136.2095 L
597.377 -130.6274 595.0986 -125.5562 591.4258 -121.8857 C
587.7559 -118.2144 582.6846 -115.9346 577.1035 -115.9346 C
432.3027 -115.9346 L
426.6504 -115.9346 L
426.6504 -121.5869 L
426.6504 -244.2197 L
426.6504 -249.8721 L
432.3027 -249.8721 L
577.1035 -249.8721 L
582.6846 -249.8721 587.7559 -247.5923 591.4258 -243.9199 C
595.0986 -240.2495 597.377 -235.1787 597.377 -229.5977 C
597.377 -206.604 L
597.377 -206.604 L
f
565.2402 -176.7705 m
561.8535 -176.7705 559.1074 -179.5166 559.1074 -182.9028 c
559.1074 -186.2896 561.8535 -189.0352 565.2402 -189.0352 c
568.626 -189.0352 571.373 -186.2896 571.373 -182.9028 c
571.373 -179.5166 568.626 -176.7705 565.2402 -176.7705 c
f
*U
*u
0 D
949.0391 -919.9199 m
927.3574 -935.4375 L
872.3652 -935.4375 L
873.9404 -928.4326 L
924.8916 -928.4326 L
936.7852 -919.9199 L
875.6563 -919.9199 L
875.2266 -908.4951 L
889.2129 -908.4951 l
900.3691 -908.4951 911.5693 -908.4951 922.7471 -908.4951 C
922.0664 -901.8975 926.8613 -896.5703 933.3877 -896.5703 C
932.3076 -887.4756 931.2529 -878.5674 930.2227 -869.877 c
929.2129 -861.3867 928.2266 -853.0713 927.2627 -844.9453 C
921.168 -844.9453 915.6992 -840.3662 915.1289 -834.8408 C
904.9863 -834.8408 894.8252 -834.8408 884.7031 -834.8408 C
872.4463 -834.8408 L
872.1016 -825.6602 L
936.3457 -825.6602 L
938.2539 -839.8281 940.2373 -854.5615 942.3008 -869.877 c
944.4521 -885.8545 946.6953 -902.5273 949.0391 -919.9199 C
949.0391 -919.9199 L
f
1 D
820.0918 -928.4326 m
861.1201 -928.4326 L
863.125 -919.5195 L
859.9307 -834.8408 L
821.3164 -834.8408 L
818.0371 -919.498 L
820.0918 -928.4326 L
820.0918 -928.4326 L
f
0 D
859.5439 -935.4375 m
821.7012 -935.4375 L
815.6172 -935.4375 L
812.9531 -935.4375 L
809.6006 -920.8672 L
809.4795 -920.3359 L
809.5 -919.7666 L
813.1475 -825.6602 L
818.2549 -825.6602 L
821.6719 -825.6602 L
859.585 -825.6602 L
864.2314 -825.6602 L
868.1094 -825.6602 L
871.6602 -919.7666 L
871.6816 -920.3145 L
871.5596 -920.8525 L
868.2783 -935.4375 L
863.7598 -935.4375 L
859.5439 -935.4375 L
859.5439 -935.4375 L
f
744.9121 -825.6602 m
809.1553 -825.6602 L
808.7998 -834.834 L
796.458 -834.834 l
786.3359 -834.834 776.1943 -834.834 766.0732 -834.834 C
765.501 -840.3564 760.0322 -844.9375 753.9385 -844.9375 C
752.9707 -853.0615 751.9834 -861.3838 750.9766 -869.877 c
749.9443 -878.5781 748.8857 -887.4756 747.8047 -896.5811 C
754.3301 -896.5811 759.127 -901.8975 758.4453 -908.5049 C
769.6016 -908.5049 780.7793 -908.5049 791.9375 -908.5049 C
805.9463 -908.5049 L
805.5049 -919.9199 L
744.4707 -919.9199 L
756.3662 -928.4326 L
807.249 -928.4326 L
808.8604 -935.4375 L
753.9004 -935.4375 L
732.2178 -919.9199 L
734.5605 -902.5371 736.8066 -885.8545 738.958 -869.877 c
741.0205 -854.5518 743.0049 -839.8184 744.9121 -825.6602 C
744.9121 -825.6602 L
f
1 D
779.0146 -861.998 m
774.4668 -861.998 770.4414 -865.4697 770.0293 -869.8672 c
769.6191 -874.2656 773.0576 -877.918 777.7012 -877.918 c
782.3467 -877.918 786.3887 -874.2656 786.7031 -869.8672 c
787.0166 -865.4697 783.5625 -861.998 779.0146 -861.998 c
779.0146 -861.998 l
f
902.1807 -862.0059 m
897.6338 -862.0059 894.1816 -865.4697 894.4922 -869.8672 c
894.8066 -874.2656 898.8486 -877.918 903.4922 -877.918 c
908.1387 -877.918 911.5781 -874.2656 911.167 -869.8672 c
910.7568 -865.4697 906.7295 -862.0059 902.1807 -862.0059 c
902.1807 -862.0059 l
f
872.9688 -848.6846 m
874.6318 -892.752 L
878.8125 -886.1064 881.04 -878.1064 880.6045 -869.8672 c
880.1787 -861.7979 877.3623 -854.6182 872.9688 -848.6846 C
872.9688 -848.6846 L
f
806.5566 -892.7861 m
808.2656 -848.6074 L
803.8457 -854.5576 801.0215 -861.7588 800.5918 -869.8672 c
800.1543 -878.1201 802.3643 -886.127 806.5566 -892.7861 C
f
*U
*u
0 D
636.5791 -918.6357 m
639.1191 -919.4883 L
640.1494 -919.8379 641.1816 -920.1846 642.2412 -920.5391 C
641.4063 -920.8096 640.5693 -921.0781 639.7305 -921.3477 C
626.6709 -925.5342 613.2227 -929.8467 599.4004 -934.2783 c
585.1641 -938.8408 570.4805 -943.5498 555.3672 -948.3936 C
554.3613 -948.7139 553.3594 -949.0352 552.3652 -949.3525 C
551.3428 -948.9199 550.334 -948.4951 549.3408 -948.0703 C
494.064 -924.6191 L
494.064 -921.0674 L
547.5137 -943.7432 L
548.5225 -944.1709 549.5322 -944.5986 550.54 -945.0273 C
551.0723 -945.252 551.6045 -945.4766 552.1367 -945.7021 C
552.6934 -945.5244 553.251 -945.3457 553.8086 -945.168 C
554.8086 -944.8477 555.8125 -944.5293 556.8135 -944.208 C
571.4932 -939.5049 586.168 -934.7959 600.8467 -930.0908 C
636.5791 -918.6357 L
636.5791 -918.6357 L
f
1 D
463.2651 -911.5459 m
482.3159 -919.6309 L
490.0537 -922.916 L
490.0757 -872.1338 L
576.8887 -847.8623 L
568.1289 -844.915 L
568.127 -844.915 L
548.9355 -838.4629 L
548.9375 -838.4629 L
546.8301 -837.7549 L
544.2637 -836.8906 L
544.2617 -836.8906 L
541.415 -835.9346 L
456.999 -858.1758 L
457 -908.8896 L
463.2651 -911.5479 L
463.2651 -911.5459 L
463.2651 -911.5459 L
f
0 D
482.3159 -916.0791 m
463.2651 -907.9961 L
463.2651 -860.8564 L
544.2334 -839.6924 L
563.5654 -846.1914 L
482.3159 -868.9219 L
482.3159 -916.0791 L
482.3159 -916.0791 L
f
453.0117 -907.1963 m
439.46 -901.4443 426.5376 -895.9629 414.209 -890.7324 C
413.5791 -890.4639 412.9492 -890.1943 412.3179 -889.9248 C
413.2139 -889.7197 414.1191 -889.5127 415.0239 -889.3076 C
417.7466 -888.6826 L
453.0117 -903.6465 L
453.0117 -907.1963 L
453.0117 -907.1963 L
f
496.8779 -820.9619 m
535.668 -834.002 L
530.9258 -835.2529 L
494.2104 -822.751 L
482.7476 -825.4043 471.043 -828.1182 459.0825 -830.8896 c
446.8564 -833.7217 434.3354 -836.6201 421.5522 -839.5801 C
433.021 -844.3691 444.9966 -849.3721 457.5034 -854.5977 C
453.0107 -855.7803 L
453.0107 -856.4834 L
439.459 -850.7314 426.5376 -845.249 414.209 -840.0205 C
413.5791 -839.752 412.9492 -839.4814 412.3179 -839.2119 C
413.2139 -839.0078 414.1191 -838.8008 415.0239 -838.5947 C
428.7021 -835.4541 442.0742 -832.3857 455.1157 -829.3936 c
467.8564 -826.4707 480.3198 -823.6104 492.4951 -820.8154 C
493.2778 -820.6348 494.0601 -820.4561 494.8433 -820.2764 C
495.5215 -820.5039 496.1997 -820.7334 496.8779 -820.9619 C
496.8779 -820.9619 L
f
582.5186 -849.752 m
600.4209 -855.7715 619.2637 -862.1064 639.1191 -868.7773 C
640.1494 -869.124 641.1816 -869.4736 642.2412 -869.8271 C
641.4063 -870.0967 640.5693 -870.3672 639.7305 -870.6357 C
626.6709 -874.8242 613.2227 -879.1348 599.4004 -883.5654 c
585.1641 -888.1299 570.4805 -892.8389 555.3672 -897.6807 C
554.3613 -898.001 553.3594 -898.3242 552.3652 -898.6406 C
551.3428 -898.209 550.334 -897.7842 549.3408 -897.3594 C
494.8877 -874.2568 L
500.6777 -872.6367 L
552.2988 -894.1924 L
566.3115 -889.7646 579.96 -885.4414 593.2227 -881.251 c
606.1406 -877.1709 618.7236 -873.1934 630.9717 -869.3252 C
577.5684 -851.1377 L
582.5186 -849.752 L
582.5186 -849.752 L
f
501.0322 -828.3223 m
507.0449 -830.3975 513.1904 -832.5273 519.4248 -834.6846 C
525.332 -836.7256 L
514.1094 -839.6836 L
513.9463 -839.6865 l
505.4961 -839.8574 497.2344 -840.7754 490.1416 -842.543 c
483.0479 -844.3115 478.1284 -846.7129 475.6602 -849.3438 c
475.4717 -849.5449 475.2979 -849.7471 475.1382 -849.9512 C
463.9023 -852.9131 L
457.207 -850.165 L
451.2324 -847.7158 445.3677 -845.3057 439.6304 -842.957 C
444.9395 -841.6963 445.9404 -839.3574 441.9722 -837.7725 C
449.3398 -836.0459 456.6226 -834.3389 463.7866 -832.6582 c
470.8701 -830.998 477.873 -829.3584 484.7861 -827.7402 C
488.9033 -829.1943 496.25 -829.459 501.0322 -828.3223 C
501.0322 -828.3223 L
f
483.6558 -836.2588 m
486.5508 -837.3271 486.1758 -838.8975 482.6953 -839.75 c
479.2168 -840.6025 473.9741 -840.3916 471.1064 -839.2979 c
468.2388 -838.2041 468.793 -836.6533 472.25 -835.8271 c
475.7075 -835.001 480.7598 -835.1914 483.6558 -836.2588 c
483.6558 -836.2588 l
f
573.7734 -869.5156 m
577.6035 -870.9307 577.873 -872.9902 574.2012 -874.1025 c
570.5313 -875.2158 564.3477 -874.9238 560.5332 -873.4678 c
556.7178 -872.0127 556.7158 -869.9756 560.3643 -868.9033 c
564.0127 -867.832 569.9424 -868.1006 573.7734 -869.5156 c
573.7734 -869.5156 l
f
571.7285 -852.7705 m
583.4902 -856.8369 L
591.2324 -859.5146 599.1523 -862.2529 607.249 -865.0566 C
602.2119 -866.5859 602.7959 -869.5352 608.6797 -871.6182 C
601.2881 -873.916 593.7959 -876.2451 586.1982 -878.6123 c
578.4736 -881.0176 570.6045 -883.4658 562.6318 -885.9463 C
556.8574 -883.6396 547.582 -883.1816 541.8848 -884.9072 C
534.0156 -881.6816 526.3252 -878.5283 518.8262 -875.4512 C
507.3945 -870.7578 L
514.6934 -868.7178 L
518.1113 -868.8975 521.5703 -868.9551 525.0039 -868.8877 c
534.4902 -868.6973 543.7451 -867.54 551.1025 -865.4277 c
558.458 -863.3145 562.8193 -860.5996 564.4551 -857.708 c
565.0293 -856.6904 565.2568 -855.6523 565.1396 -854.6133 C
571.7285 -852.7705 L
571.7285 -852.7705 L
f
636.5791 -875.1699 m
639.1191 -876.0225 L
640.1494 -876.3691 641.1816 -876.7178 642.2412 -877.0713 C
641.4063 -877.3418 640.5693 -877.6104 639.7305 -877.8809 C
626.6709 -882.0684 613.2227 -886.3789 599.4004 -890.8096 C
585.1641 -895.374 570.4805 -900.0811 555.3672 -904.9258 C
554.3613 -905.2451 553.3594 -905.5684 552.3652 -905.8848 C
551.3428 -905.4521 550.334 -905.0283 549.3408 -904.6016 C
494.064 -881.1514 L
494.064 -877.5986 L
547.5137 -900.2764 l
548.5225 -900.7041 549.5322 -901.1328 550.54 -901.5596 c
552.1367 -902.2344 L
553.8086 -901.7012 l
554.8086 -901.3818 555.8125 -901.0625 556.8135 -900.7402 c
571.4932 -896.0361 586.168 -891.3291 600.8467 -886.625 c
636.5791 -875.1699 L
636.5791 -875.1699 L
f
1 D
453.0107 -863.7285 m
453.0107 -860.1777 L
417.7466 -845.2139 L
415.0239 -845.8389 L
414.1191 -846.0459 413.2139 -846.251 412.3179 -846.4561 C
412.9492 -846.7256 413.5791 -846.9961 414.209 -847.2646 C
426.5376 -852.4932 439.458 -857.9756 453.0107 -863.7285 C
453.0107 -863.7285 L
f
0 D
636.5791 -882.4141 m
639.1191 -883.2666 L
640.1494 -883.6152 641.1816 -883.9619 642.2412 -884.3164 C
641.4063 -884.5879 640.5693 -884.8564 639.7305 -885.125 C
626.6709 -889.3135 613.2227 -893.624 599.4004 -898.0547 C
585.1641 -902.6191 570.4805 -907.3281 555.3672 -912.1699 C
554.3613 -912.4893 553.3594 -912.8135 552.3652 -913.1309 C
551.3428 -912.6982 550.334 -912.2725 549.3408 -911.8486 C
494.064 -888.3955 L
494.064 -884.8428 L
547.5137 -907.5205 L
548.5225 -907.9492 549.5322 -908.377 550.54 -908.8037 C
551.0723 -909.0283 551.6045 -909.2539 552.1367 -909.4785 C
552.6934 -909.3008 553.251 -909.123 553.8086 -908.9453 C
554.8086 -908.626 555.8125 -908.3047 556.8135 -907.9854 C
571.4932 -903.2813 586.168 -898.5732 600.8467 -893.8672 C
636.5791 -882.4141 L
636.5791 -882.4141 L
f
1 D
453.0117 -870.9727 m
453.0107 -867.4219 L
417.7466 -852.458 L
415.0239 -853.084 L
414.1191 -853.29 413.2139 -853.4971 412.3179 -853.7031 C
412.9492 -853.9707 413.5791 -854.2402 414.209 -854.5098 C
426.5376 -859.7383 439.459 -865.2197 453.0117 -870.9727 C
453.0117 -870.9727 L
f
636.5791 -889.6582 m
600.8467 -901.1143 L
586.168 -905.8184 571.4932 -910.5254 556.8135 -915.2295 C
555.8125 -915.5508 554.8086 -915.8701 553.8086 -916.1904 C
553.251 -916.3682 552.6934 -916.5459 552.1367 -916.7246 C
551.6045 -916.499 551.0723 -916.2744 550.54 -916.0479 C
549.5322 -915.6211 548.5225 -915.1934 547.5137 -914.7656 C
494.064 -892.0869 L
494.064 -895.6396 L
549.3408 -919.0928 L
550.334 -919.5176 551.3428 -919.9424 552.3652 -920.375 C
553.3594 -920.0576 554.3613 -919.7344 555.3672 -919.4141 C
570.4805 -914.5723 585.1641 -909.8633 599.4004 -905.2988 C
613.2227 -900.8682 626.6709 -896.5576 639.7305 -892.3701 C
640.5693 -892.1006 641.4063 -891.832 642.2412 -891.5605 C
641.1816 -891.2061 640.1494 -890.8594 639.1191 -890.5117 C
636.5791 -889.6582 L
636.5791 -889.6582 L
f
0 D
453.0117 -878.2168 m
439.459 -872.4648 426.5376 -866.9824 414.209 -861.7539 C
413.5791 -861.4844 412.9492 -861.2148 412.3179 -860.9473 C
413.2139 -860.7412 414.1191 -860.5352 415.0239 -860.3281 C
417.7466 -859.7031 L
453.0117 -874.666 L
453.0117 -878.2168 L
453.0117 -878.2168 L
f
1 D
636.5791 -896.9023 m
600.8467 -908.3584 L
586.168 -913.0625 571.4932 -917.7695 556.8135 -922.4736 C
555.8125 -922.7959 554.8086 -923.1143 553.8086 -923.4346 C
553.251 -923.6123 552.6934 -923.79 552.1367 -923.9678 C
551.6045 -923.7432 551.0723 -923.5186 550.54 -923.292 C
549.5322 -922.8652 548.5225 -922.4385 547.5137 -922.0098 C
494.064 -899.3311 L
494.064 -902.8857 L
549.3408 -926.3369 L
550.334 -926.7617 551.3428 -927.1865 552.3652 -927.6191 C
553.3594 -927.3018 554.3613 -926.9805 555.3672 -926.6602 C
570.4805 -921.8164 585.1641 -917.1074 599.4004 -912.543 C
613.2227 -908.1123 626.6709 -903.8018 639.7305 -899.6143 C
640.5693 -899.3447 641.4063 -899.0762 642.2412 -898.8057 C
641.1816 -898.4512 640.1494 -898.1045 639.1191 -897.7559 C
636.5791 -896.9023 L
636.5791 -896.9023 L
f
0 D
453.0117 -885.4639 m
439.458 -879.7109 426.5376 -874.2285 414.209 -868.998 C
413.5791 -868.7305 412.9492 -868.4609 412.3179 -868.1914 C
413.2139 -867.9863 414.1191 -867.7793 415.0239 -867.5723 C
417.7466 -866.9473 L
453.0117 -881.9111 L
453.0117 -885.4639 L
453.0117 -885.4639 L
f
1 D
636.5791 -904.1465 m
600.8467 -915.6025 L
586.168 -920.3066 571.4932 -925.0166 556.8135 -929.7188 C
555.8125 -930.04 554.8086 -930.3594 553.8086 -930.6787 C
553.251 -930.8564 552.6934 -931.0342 552.1367 -931.2129 C
551.6045 -930.9873 551.0723 -930.7627 550.54 -930.5361 C
549.5322 -930.1104 548.5225 -929.6826 547.5137 -929.2539 C
494.064 -906.5781 L
494.064 -910.1299 L
549.3408 -933.582 L
550.334 -934.0059 551.3428 -934.4307 552.3652 -934.8643 C
553.3594 -934.5469 554.3613 -934.2227 555.3672 -933.9043 C
570.4805 -929.0615 585.1641 -924.3525 599.4004 -919.7881 C
613.2227 -915.3574 626.6709 -911.0459 639.7305 -906.8584 C
640.5693 -906.5889 641.4063 -906.3213 642.2412 -906.0498 C
641.1816 -905.6953 640.1494 -905.3486 639.1191 -905 C
636.5791 -904.1465 L
636.5791 -904.1465 L
f
453.0117 -892.708 m
453.0117 -889.1572 L
417.7466 -874.1924 L
415.0239 -874.8174 L
414.1191 -875.0234 413.2139 -875.2305 412.3179 -875.4365 C
412.9492 -875.7051 413.5791 -875.9736 414.209 -876.2432 C
426.5376 -881.4717 439.459 -886.9531 453.0117 -892.708 C
453.0117 -892.708 L
f
636.5791 -911.3926 m
600.8467 -922.8467 L
586.168 -927.5518 571.4932 -932.2607 556.8135 -936.9629 C
555.8125 -937.2842 554.8086 -937.6035 553.8086 -937.9238 C
553.251 -938.1016 552.6934 -938.2793 552.1367 -938.458 C
551.6045 -938.2324 551.0723 -938.0078 550.54 -937.7813 C
549.5322 -937.3545 548.5225 -936.9268 547.5137 -936.499 C
494.064 -913.8203 L
494.064 -917.374 L
549.3408 -940.8262 L
550.334 -941.251 551.3428 -941.6748 552.3652 -942.1084 C
553.3594 -941.791 554.3613 -941.4697 555.3672 -941.1484 C
570.4805 -936.3057 585.1641 -931.5967 599.4004 -927.0332 C
613.2227 -922.6016 626.6709 -918.292 639.7305 -914.1045 C
640.5693 -913.834 641.4063 -913.5654 642.2412 -913.2939 C
641.1816 -912.9395 640.1494 -912.5938 639.1191 -912.2461 C
636.5791 -911.3926 L
636.5791 -911.3926 L
f
453.0117 -899.9521 m
453.0117 -896.4014 L
417.7466 -881.4385 L
415.0239 -882.0635 L
414.1191 -882.2686 413.2139 -882.4746 412.3179 -882.6807 C
412.9492 -882.9492 413.5791 -883.2197 414.209 -883.4893 C
426.5376 -888.7178 439.46 -894.2002 453.0117 -899.9521 C
f
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
